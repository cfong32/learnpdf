<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml producer="poppler" version="0.68.0">
<page number="1" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="0" size="21" family="Times" color="#000000"/>
	<fontspec id="1" size="15" family="Times" color="#000000"/>
	<fontspec id="2" size="9" family="Times" color="#000000"/>
	<fontspec id="3" size="8" family="Times" color="#000000"/>
	<fontspec id="4" size="12" family="Times" color="#000000"/>
	<fontspec id="5" size="28" family="Times" color="#7f7f7f"/>
<text top="103" left="108" width="678" height="31" font="0">Image Acquisition System Using On Sensor Compressed Sampling</text>
<text top="131" left="108" width="106" height="31" font="0">Technique</text>
<text top="186" left="108" width="151" height="23" font="1">Pravir Singh Gupta</text>
<text top="186" left="259" width="5" height="14" font="2">a</text>
<text top="186" left="265" width="147" height="23" font="1">, Gwan Seong Choi</text>
<text top="186" left="411" width="5" height="14" font="2">a</text>
<text top="206" left="108" width="5" height="13" font="3">a</text>
<text top="207" left="113" width="652" height="18" font="4">Texas A&amp;M University , Department of Electrical and Computer Engineering, College Station, Texas, 77843</text>
<text top="267" left="108" width="703" height="19" font="4">Abstract. Advances in CMOS technology have made high resolution image sensors possible. These image sensor</text>
<text top="285" left="108" width="703" height="18" font="4">pose significant challenges in terms of the amount of raw data generated, energy efficiency and frame rate. This paper</text>
<text top="303" left="108" width="703" height="18" font="4">presents a new design methodology for an imaging system and a simplified novel image sensor pixel design to be used</text>
<text top="321" left="108" width="703" height="18" font="4">in such system so that Compressed Sensing (CS) technique can be implemented easily at the sensor level. This results</text>
<text top="339" left="108" width="703" height="18" font="4">in significant energy savings as it not only cuts the raw data rate but also reduces transistor count per pixel, decreases</text>
<text top="357" left="108" width="703" height="18" font="4">pixel size, increases fill factor, simplifies ADC, JPEG encoder and JPEG decoder design and decreases wiring as well</text>
<text top="375" left="108" width="703" height="18" font="4">as address decoder size by half. Thus CS has the potential to increase the resolution of image sensors for a given</text>
<text top="393" left="108" width="703" height="18" font="4">technology and die size while significantly decreasing the power consumption and design complexity. We show that</text>
<text top="411" left="108" width="392" height="18" font="4">it has potential to reduce power consumption by about 23%-65%.</text>
<text top="443" left="108" width="461" height="19" font="4">Keywords: Image Acquisition, on-sensor compression, image compression..</text>
<text top="512" left="108" width="117" height="23" font="1">1 Introduction</text>
<text top="566" left="108" width="703" height="22" font="1">In recent years the resolution of image sensors have increased at an amazing rate. Smartphones</text>
<text top="609" left="108" width="703" height="22" font="1">with 41 Mega-pixel cameras are available in the market. It is increasingly becoming difficult to</text>
<text top="653" left="108" width="703" height="22" font="1">handle the amount of data generated by such sensors in portable devices such as smartphones and</text>
<text top="696" left="108" width="703" height="22" font="1">cameras in terms of power requirements. If we use a byte of data (which is modest) to store the</text>
<text top="740" left="108" width="703" height="22" font="1">color of a pixel in RGB format we have 3 MB raw data per image for a 1 Mega-pixel camera. For</text>
<text top="783" left="108" width="703" height="22" font="1">a 41 Megapixel camera we have massive 123 MB raw data to process in hundreds of milliseconds.</text>
<text top="826" left="108" width="703" height="22" font="1">This poses a huge challenge given the power constraints of mobile devices and numerous snapshots</text>
<text top="870" left="108" width="703" height="22" font="1">and amount of data users are generating today in the multimedia-centric world. While we have</text>
<text top="913" left="108" width="703" height="22" font="1">huge secondary storage these days e.g. 128 GB SD/Micro-SD cards, the challenge is to handle the</text>
<text top="956" left="108" width="703" height="22" font="1">raw data generated at the sensor. Certainly, some sort of energy efficient modification has to be</text>
<text top="1000" left="108" width="703" height="22" font="1">done in the traditional image acquisition system to handle the amount of data. If the compression</text>
<text top="1043" left="108" width="703" height="22" font="1">is done at the sensor itself, we can avoid the huge bus wires, decrease clock rate and reduce</text>
<text top="1109" left="455" width="9" height="22" font="1">1</text>
<text top="835" left="48" width="0" height="27" font="5">arXiv:1709.07041v2  [eess.IV]  11 Jan 2018</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="6" size="15" family="Times" color="#0000ff"/>
<text top="109" left="108" width="703" height="22" font="1">the register widths. This will result in significant power savings as I/O read out will be reduced</text>
<text top="152" left="108" width="114" height="22" font="1">proportionately.</text>
<text top="196" left="134" width="676" height="22" font="1">In the recent years, a lot of research has been conducted for compressively sampling of natural</text>
<text top="239" left="108" width="703" height="22" font="1">images. According to CS theory, if a signal is sparse in some domain, it can be recovered faithfully</text>
<text top="282" left="108" width="703" height="22" font="1">from a small number of linear combinations of the signal values provided that the matrix repre-</text>
<text top="326" left="108" width="703" height="22" font="1">senting the linear combinations is incoherent with sparse domain basis vectors. But the traditional</text>
<text top="369" left="108" width="703" height="22" font="1">methods of CS makes matter worse when comes to acquisition effort per bit and storage effort per</text>
<text top="413" left="108" width="156" height="22" font="1">bit. Oike et al. (Ref. [</text>
<text top="413" left="264" width="9" height="22" font="6">1</text>
<text top="413" left="273" width="537" height="22" font="1">]) applied CS at Analog-to-Digital conversion level. The biggest issue with</text>
<text top="456" left="108" width="703" height="22" font="1">that approach is the sampled image looses image-like properties and hence image compression</text>
<text top="499" left="108" width="703" height="22" font="1">techniques like JPEG do not work well resulting in increase of storage effort per bit. Also, each</text>
<text top="543" left="108" width="703" height="22" font="1">pixel is read out multiple times which results in some wastage of energy and acquisition time. It</text>
<text top="586" left="108" width="703" height="22" font="1">also uses a pseudo-random generator which consumes additional energy. The design presented by</text>
<text top="629" left="108" width="165" height="22" font="1">Dadkhah et al. (Ref. [</text>
<text top="629" left="273" width="9" height="22" font="6">2</text>
<text top="629" left="282" width="529" height="22" font="1">]) does CS at the sensor level. But it wires the output of pseudo-random</text>
<text top="673" left="108" width="703" height="22" font="1">generator to each block. In addition to the problems associated with design presented by Oike et</text>
<text top="716" left="108" width="72" height="22" font="1">al. (Ref. [</text>
<text top="716" left="180" width="9" height="22" font="6">1</text>
<text top="716" left="189" width="622" height="22" font="1">]), it also consumes significant wiring area in the pixel and decreases the active area in</text>
<text top="760" left="108" width="703" height="22" font="1">the pixel. This will result in poor Peak-Signal-to-Noise-Ratio (PSNR) performance of pixel. Katic</text>
<text top="803" left="108" width="95" height="22" font="1">et al. (Ref. [</text>
<text top="803" left="203" width="9" height="22" font="6">3</text>
<text top="803" left="212" width="598" height="22" font="1">]) also present design on similar lines. Their design also contains random number</text>
<text top="846" left="108" width="703" height="22" font="1">generator which needs to be routed to pixels consuming wiring area and power. The goal of this</text>
<text top="890" left="108" width="703" height="22" font="1">paper is a very simplified implementation of CS such that it results in power savings, reduction</text>
<text top="933" left="108" width="703" height="22" font="1">in raw data rate, application of standard image compression techniques like JPEG post CS and</text>
<text top="976" left="108" width="703" height="22" font="1">simplification of hardware design while achieving optimal performance. To achieve this, the paper</text>
<text top="1020" left="108" width="703" height="22" font="1">presents a new system design methodology for an imaging system and a simplified novel pixel</text>
<text top="1063" left="108" width="703" height="22" font="1">design to be used in such system so that CS technique can be implemented easily at the sensor</text>
<text top="1109" left="455" width="9" height="22" font="1">2</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">level. We show that pixels in our design flow are even simpler than the normal ones. In our paper,</text>
<text top="152" left="108" width="703" height="22" font="1">we have circumvented the need for pseudo-random generator by employing CS Super-Resolution</text>
<text top="196" left="108" width="310" height="22" font="1">technique presented by Sen et al. (Ref. [</text>
<text top="196" left="417" width="9" height="22" font="6">4</text>
<text top="196" left="426" width="384" height="22" font="1">]) with modifications. We present results from both</text>
<text top="239" left="108" width="519" height="22" font="1">binary permuted block diagonal sampling matrix as mentioned in Ref. [</text>
<text top="239" left="627" width="9" height="22" font="6">5</text>
<text top="239" left="636" width="84" height="22" font="1">] and Ref. [</text>
<text top="239" left="720" width="9" height="22" font="6">6</text>
<text top="239" left="729" width="81" height="22" font="1">] as well as</text>
<text top="282" left="108" width="703" height="22" font="1">our novel non-binary block diagonal sampling matrix. These are easy to implement in hardware</text>
<text top="326" left="108" width="703" height="22" font="1">and help us to perform on-sensor image compression. These matrix preserve image like properties</text>
<text top="369" left="108" width="703" height="22" font="1">so JPEG can be applied to compressively sampled image unlike traditional designs. We show that</text>
<text top="413" left="108" width="561" height="22" font="1">our design methodology has the potential to achieve 23%-65% power savings.</text>
<text top="475" left="108" width="236" height="23" font="1">2 Background and Motivation</text>
<text top="529" left="108" width="703" height="22" font="1">This section introduces the background concepts and motivation behind our system design method-</text>
<text top="573" left="108" width="211" height="22" font="1">ology as well as pixel design.</text>
<text top="636" left="108" width="274" height="21" font="1">2.1 Compressed Sensing (CS) Theory</text>
<text top="688" left="108" width="468" height="24" font="1">Suppose we have signal X, having N samples such that, X ∈ R</text>
<text top="690" left="576" width="10" height="12" font="2">N</text>
<text top="689" left="587" width="16" height="14" font="2">×1</text>
<text top="688" left="604" width="205" height="22" font="1">. And we want to recover X</text>
<text top="732" left="108" width="106" height="22" font="1">from Y , where</text>
<text top="778" left="424" width="70" height="18" font="1">Y = ΦX,</text>
<text top="775" left="789" width="21" height="22" font="1">(1)</text>
<text top="838" left="108" width="703" height="24" font="1">such that Φ is a M ×N matrix and M &lt;&lt; N. Because number of unknowns is significantly larger</text>
<text top="881" left="108" width="482" height="22" font="1">than observations, it is difficult to recover X from Y because Eq. (</text>
<text top="881" left="589" width="9" height="22" font="6">1</text>
<text top="881" left="598" width="212" height="22" font="1">) has infinitely many possible</text>
<text top="925" left="108" width="703" height="22" font="1">solutions. But if X is sufficiently sparse, exact recovery is possible. This is compressed sensing</text>
<text top="968" left="108" width="50" height="22" font="1">(Ref. [</text>
<text top="968" left="157" width="9" height="22" font="6">7</text>
<text top="968" left="166" width="644" height="22" font="1">]). A popular choice for Φ i.e. measurement basis, is randomly generated matrix. In this</text>
<text top="1109" left="455" width="9" height="22" font="1">3</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="306" height="22" font="1">work we also assume Φ is orthonormal i.e.</text>
<text top="199" left="423" width="25" height="18" font="1">ΦΦ</text>
<text top="196" left="448" width="7" height="12" font="2">T</text>
<text top="199" left="463" width="33" height="18" font="1">= I.</text>
<text top="196" left="789" width="21" height="22" font="1">(2)</text>
<text top="258" left="134" width="676" height="22" font="1">Lets say that the signal X is sparse in some domain Ψ. Then the signal can be represented in</text>
<text top="302" left="108" width="191" height="22" font="1">sparse domain as follows -</text>
<text top="348" left="424" width="70" height="18" font="1">X = ΨT,</text>
<text top="345" left="789" width="21" height="22" font="1">(3)</text>
<text top="408" left="134" width="433" height="22" font="1">where T represents the signal X in the transform domain Ψ</text>
<text top="409" left="567" width="16" height="14" font="2">−1</text>
<text top="408" left="584" width="97" height="22" font="1">. Using Eq. (</text>
<text top="408" left="681" width="9" height="22" font="6">3</text>
<text top="408" left="690" width="79" height="22" font="1">) and Eq. (</text>
<text top="408" left="769" width="9" height="22" font="6">1</text>
<text top="408" left="778" width="32" height="22" font="1">) we</text>
<text top="451" left="108" width="26" height="22" font="1">get,</text>
<text top="541" left="419" width="81" height="18" font="1">Y = ΦΨT.</text>
<text top="538" left="789" width="21" height="22" font="1">(4)</text>
<text top="601" left="134" width="167" height="22" font="1">Lets assume following,</text>
<text top="648" left="425" width="68" height="18" font="1">A = ΦΨ.</text>
<text top="644" left="789" width="21" height="22" font="1">(5)</text>
<text top="707" left="134" width="121" height="22" font="1">Then using Eq. (</text>
<text top="707" left="255" width="9" height="22" font="6">4</text>
<text top="707" left="264" width="77" height="22" font="1">) and Eq. (</text>
<text top="707" left="341" width="9" height="22" font="6">5</text>
<text top="707" left="350" width="62" height="22" font="1">) we get,</text>
<text top="790" left="425" width="68" height="18" font="1">Y = AT.</text>
<text top="787" left="789" width="21" height="22" font="1">(6)</text>
<text top="866" left="134" width="676" height="24" font="1">Since A is M × N and M &lt;&lt; N recovery of the original signal is difficult because the system</text>
<text top="909" left="108" width="230" height="22" font="1">of equation represented by Eq. (</text>
<text top="909" left="338" width="9" height="22" font="6">6</text>
<text top="909" left="347" width="464" height="22" font="1">) has infinitely many solution. This is where CS comes to rescue.</text>
<text top="953" left="108" width="612" height="22" font="1">If the sensing matrix A satisfies the Restricted Isometric Property stated (RIP) (Ref. [</text>
<text top="953" left="720" width="9" height="22" font="6">8</text>
<text top="953" left="729" width="60" height="22" font="1">]) below</text>
<text top="1035" left="367" width="9" height="18" font="1">1</text>
<text top="1034" left="379" width="44" height="21" font="1">−  ≤</text>
<text top="1022" left="430" width="46" height="21" font="1">||AT ||</text>
<text top="1030" left="476" width="6" height="12" font="2">2</text>
<text top="1047" left="437" width="33" height="21" font="1">||T ||</text>
<text top="1054" left="469" width="6" height="12" font="2">2</text>
<text top="1034" left="490" width="61" height="21" font="1">≤ 1 + ,</text>
<text top="1032" left="789" width="21" height="22" font="1">(7)</text>
<text top="1109" left="455" width="9" height="22" font="1">4</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="134" width="676" height="22" font="1">for some  &gt; 0 then perfect reconstruction is guaranteed with very high probability. To recon-</text>
<text top="152" left="108" width="627" height="22" font="1">struct signal we can solve the following equation using linear programming techniques.</text>
<text top="242" left="346" width="29" height="18" font="1">min</text>
<text top="258" left="357" width="7" height="12" font="2">T</text>
<text top="242" left="379" width="33" height="21" font="1">||T ||</text>
<text top="249" left="411" width="10" height="12" font="2">l1</text>
<text top="242" left="427" width="145" height="18" font="1">such that Y = AT.</text>
<text top="239" left="789" width="21" height="22" font="1">(8)</text>
<text top="302" left="134" width="676" height="22" font="1">Another condition related to RIP is that sparsity basis should be incoherent with the sampling</text>
<text top="345" left="108" width="88" height="22" font="1">basis (Ref. [</text>
<text top="345" left="196" width="9" height="22" font="6">9</text>
<text top="345" left="205" width="465" height="22" font="1">]). The coherence between the two can be calculated as follows -</text>
<text top="435" left="318" width="77" height="18" font="1">µ(Φ, Ψ) =</text>
<text top="419" left="400" width="15" height="21" font="1">√</text>
<text top="435" left="415" width="14" height="18" font="1">N</text>
<text top="435" left="435" width="53" height="21" font="1">× max</text>
<text top="442" left="487" width="6" height="12" font="2">1</text>
<text top="442" left="493" width="46" height="14" font="2">≤k,j≤N</text>
<text top="435" left="542" width="15" height="21" font="1">|φ</text>
<text top="442" left="557" width="7" height="12" font="2">k</text>
<text top="435" left="565" width="19" height="18" font="1">, ψ</text>
<text top="442" left="584" width="5" height="12" font="2">j</text>
<text top="435" left="591" width="10" height="21" font="1">|,</text>
<text top="432" left="789" width="21" height="22" font="1">(9)</text>
<text top="495" left="108" width="703" height="22" font="1">where φ and ψ are the basis vectors in sampling basis Φ and sparsity basis Ψ respectively. The</text>
<text top="538" left="108" width="201" height="22" font="1">coherence ranges from 1 to</text>
<text top="526" left="314" width="15" height="21" font="1">√</text>
<text top="541" left="329" width="14" height="18" font="1">N</text>
<text top="538" left="345" width="465" height="22" font="1">. If µ is close to 1 then matrices are incoherent and vice versa.</text>
<text top="582" left="108" width="433" height="22" font="1">While the requirement of incoherence is implicit in Eq. (</text>
<text top="582" left="540" width="9" height="22" font="6">7</text>
<text top="582" left="549" width="261" height="22" font="1">), it is explicit in another sufficient</text>
<text top="625" left="108" width="703" height="22" font="1">condition for recovery of compressively sampled signals. Select M measurements uniformly at</text>
<text top="668" left="108" width="216" height="22" font="1">random in Φ domain. Then if,</text>
<text top="758" left="368" width="67" height="18" font="1">M &gt; Cµ</text>
<text top="755" left="435" width="6" height="12" font="2">2</text>
<text top="758" left="442" width="108" height="18" font="1">(Φ, Ψ)S log N,</text>
<text top="755" left="780" width="30" height="22" font="1">(10)</text>
<text top="818" left="108" width="703" height="22" font="1">for some positive constant C and S-sparse signal (i.e. only S coefficients of signal are non-zero),</text>
<text top="861" left="108" width="116" height="22" font="1">solution to Eq. (</text>
<text top="861" left="223" width="9" height="22" font="6">8</text>
<text top="861" left="232" width="347" height="22" font="1">) is guaranteed with very high probability (Ref. [</text>
<text top="861" left="579" width="18" height="22" font="6">10</text>
<text top="861" left="597" width="58" height="22" font="1">]). Eq. (</text>
<text top="861" left="655" width="18" height="22" font="6">10</text>
<text top="861" left="673" width="138" height="22" font="1">) also indicates that</text>
<text top="905" left="108" width="703" height="22" font="1">if incoherence is less we need more samples to reconstruct the original signal with high probability</text>
<text top="948" left="108" width="48" height="22" font="1">(Ref. [</text>
<text top="948" left="156" width="9" height="22" font="6">9</text>
<text top="948" left="165" width="16" height="22" font="1">]).</text>
<text top="991" left="134" width="676" height="22" font="1">The above discussion was applicable to strictly sparse signal which means the signal has a lot</text>
<text top="1035" left="108" width="703" height="22" font="1">of perfect zero values when represented in sparse domain. But such signals are rarely found in</text>
<text top="1109" left="455" width="9" height="22" font="1">5</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">nature. Images represented in the matrix form are no exception. Many natural signals are only</text>
<text top="152" left="108" width="703" height="22" font="1">approximately sparse, which means most of the coefficients are very small in magnitude. In such</text>
<text top="196" left="108" width="703" height="22" font="1">case, small coefficients can be discarded without much loss of perceptual quality. Lets say the</text>
<text top="239" left="108" width="703" height="22" font="1">signal X is approximately sparse. Lets set all but S largest elements of our approximately sparse</text>
<text top="282" left="108" width="389" height="22" font="1">signal X as zero and denote the resulting signal by X</text>
<text top="293" left="496" width="8" height="12" font="2">S</text>
<text top="282" left="506" width="305" height="22" font="1">. Lets denote the corresponding transform</text>
<text top="326" left="108" width="33" height="22" font="1">by T</text>
<text top="336" left="140" width="8" height="12" font="2">S</text>
<text top="326" left="150" width="243" height="22" font="1">. Because Ψ is orthonormal basis,</text>
<text top="408" left="360" width="55" height="21" font="1">||T − T</text>
<text top="415" left="415" width="8" height="12" font="2">S</text>
<text top="408" left="424" width="10" height="21" font="1">||</text>
<text top="415" left="434" width="6" height="12" font="2">2</text>
<text top="408" left="446" width="14" height="18" font="1">=</text>
<text top="408" left="465" width="62" height="21" font="1">||X − X</text>
<text top="415" left="527" width="8" height="12" font="2">S</text>
<text top="408" left="536" width="10" height="21" font="1">||</text>
<text top="415" left="546" width="6" height="12" font="2">2</text>
<text top="408" left="553" width="5" height="18" font="1">.</text>
<text top="405" left="780" width="30" height="22" font="1">(11)</text>
<text top="484" left="134" width="676" height="22" font="1">So if T can be classified as sparse or compressible, meaning sorted magnitudes of the T decay</text>
<text top="528" left="108" width="316" height="22" font="1">quickly, then X can be approximated by X</text>
<text top="538" left="423" width="8" height="12" font="2">S</text>
<text top="528" left="438" width="243" height="24" font="1">and, therefore, the error ||X − X</text>
<text top="538" left="681" width="8" height="12" font="2">S</text>
<text top="530" left="690" width="10" height="21" font="1">||</text>
<text top="538" left="700" width="6" height="12" font="2">2</text>
<text top="528" left="712" width="98" height="22" font="1">is small (Ref.</text>
<text top="571" left="108" width="6" height="22" font="1">[</text>
<text top="571" left="114" width="18" height="22" font="6">10</text>
<text top="571" left="132" width="679" height="22" font="1">]). This means we can discard a significant fraction of coefficients without much loss of quality.</text>
<text top="614" left="108" width="344" height="22" font="1">This is why CS works well with natural images.</text>
<text top="658" left="134" width="676" height="22" font="1">For images popular sparsity basis are Wavelet, Fourier or Gradient. The measurement ma-</text>
<text top="701" left="108" width="703" height="22" font="1">trices which satisfy incoherence requirements broadly fall in 4 categories - random or Gaussian</text>
<text top="745" left="108" width="176" height="22" font="1">random matrices (Ref. [</text>
<text top="745" left="284" width="18" height="22" font="6">11</text>
<text top="745" left="302" width="274" height="22" font="1">]), scrambled Fourier matrices (Ref. [</text>
<text top="745" left="576" width="18" height="22" font="6">12</text>
<text top="745" left="594" width="195" height="22" font="1">]), Partial Noiselets (Ref. [</text>
<text top="745" left="789" width="9" height="22" font="6">9</text>
<text top="745" left="798" width="12" height="22" font="1">])</text>
<text top="788" left="108" width="354" height="22" font="1">and scrambled block Hadamard matrices (Ref. [</text>
<text top="788" left="462" width="9" height="22" font="6">5</text>
<text top="788" left="471" width="4" height="22" font="1">,</text>
<text top="788" left="478" width="18" height="22" font="6">13</text>
<text top="788" left="496" width="314" height="22" font="1">]). Unfortunately, these matrices have very</text>
<text top="831" left="108" width="703" height="22" font="1">expensive and challenging hardware implementation. Any attempt to implement these matrices</text>
<text top="875" left="108" width="703" height="22" font="1">negates the advantage gained by CS in terms of sampling effort per bit. To make matter worse,</text>
<text top="918" left="108" width="449" height="22" font="1">storage of the sampled image becomes even more challenging.</text>
<text top="962" left="134" width="676" height="22" font="1">For images, the sampling matrix can be quite huge i.e. of the order of 1 Million. Storing or</text>
<text top="1005" left="108" width="703" height="22" font="1">generating a matrix of such size is not feasible in a camera or a portable device. To solve this</text>
<text top="1048" left="108" width="514" height="22" font="1">problem Block-Based CS is used which is explained in next subsection.</text>
<text top="1109" left="455" width="9" height="22" font="1">6</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="149" height="21" font="1">2.2 Block-Based CS</text>
<text top="161" left="108" width="703" height="24" font="1">In block-based CS sampling, the image is divided into B × B blocks. The sampling is done using</text>
<text top="205" left="109" width="12" height="12" font="2">M</text>
<text top="218" left="111" width="10" height="12" font="2">N</text>
<text top="207" left="129" width="32" height="21" font="1">× B</text>
<text top="206" left="162" width="6" height="12" font="2">2</text>
<text top="205" left="175" width="317" height="22" font="1">sampling matrix where compression ratio =</text>
<text top="205" left="499" width="12" height="12" font="2">M</text>
<text top="218" left="500" width="10" height="12" font="2">N</text>
<text top="205" left="515" width="221" height="22" font="1">. Hence we need to store only</text>
<text top="205" left="743" width="12" height="12" font="2">M</text>
<text top="218" left="744" width="10" height="12" font="2">N</text>
<text top="208" left="759" width="13" height="18" font="1">B</text>
<text top="207" left="777" width="32" height="21" font="1">× B</text>
<text top="248" left="108" width="703" height="22" font="1">numbers rather than the full ensemble which results in huge savings in circuitry and power (Ref.</text>
<text top="291" left="108" width="6" height="22" font="1">[</text>
<text top="291" left="114" width="18" height="22" font="6">14</text>
<text top="291" left="132" width="16" height="22" font="1">]).</text>
<text top="474" left="340" width="31" height="18" font="1">Φ =</text>
<text top="341" left="377" width="16" height="21" font="1"></text>
<text top="372" left="377" width="16" height="21" font="1"></text>
<text top="383" left="377" width="16" height="21" font="1"></text>
<text top="394" left="377" width="16" height="21" font="1"></text>
<text top="404" left="377" width="16" height="21" font="1"></text>
<text top="415" left="377" width="16" height="21" font="1"></text>
<text top="426" left="377" width="16" height="21" font="1"></text>
<text top="437" left="377" width="16" height="21" font="1"></text>
<text top="448" left="377" width="16" height="21" font="1"></text>
<text top="458" left="377" width="16" height="21" font="1"></text>
<text top="469" left="377" width="16" height="21" font="1"></text>
<text top="480" left="377" width="16" height="21" font="1"></text>
<text top="491" left="377" width="16" height="21" font="1"></text>
<text top="501" left="377" width="16" height="21" font="1"></text>
<text top="512" left="377" width="16" height="21" font="1"></text>
<text top="523" left="377" width="16" height="21" font="1"></text>
<text top="534" left="377" width="16" height="21" font="1"></text>
<text top="544" left="377" width="16" height="21" font="1"></text>
<text top="555" left="377" width="16" height="21" font="1"></text>
<text top="567" left="377" width="16" height="21" font="1"></text>
<text top="370" left="392" width="10" height="18" font="1">φ</text>
<text top="377" left="403" width="10" height="12" font="2">B</text>
<text top="413" left="429" width="10" height="18" font="1">φ</text>
<text top="420" left="439" width="10" height="12" font="2">B</text>
<text top="456" left="465" width="10" height="18" font="1">φ</text>
<text top="464" left="475" width="10" height="12" font="2">B</text>
<text top="500" left="501" width="5" height="18" font="1">.</text>
<text top="543" left="521" width="5" height="18" font="1">.</text>
<text top="587" left="541" width="10" height="18" font="1">φ</text>
<text top="594" left="551" width="10" height="12" font="2">B</text>
<text top="341" left="562" width="16" height="21" font="1"></text>
<text top="372" left="562" width="16" height="21" font="1"></text>
<text top="383" left="562" width="16" height="21" font="1"></text>
<text top="394" left="562" width="16" height="21" font="1"></text>
<text top="404" left="562" width="16" height="21" font="1"></text>
<text top="415" left="562" width="16" height="21" font="1"></text>
<text top="426" left="562" width="16" height="21" font="1"></text>
<text top="437" left="562" width="16" height="21" font="1"></text>
<text top="448" left="562" width="16" height="21" font="1"></text>
<text top="458" left="562" width="16" height="21" font="1"></text>
<text top="469" left="562" width="16" height="21" font="1"></text>
<text top="480" left="562" width="16" height="21" font="1"></text>
<text top="491" left="562" width="16" height="21" font="1"></text>
<text top="501" left="562" width="16" height="21" font="1"></text>
<text top="512" left="562" width="16" height="21" font="1"></text>
<text top="523" left="562" width="16" height="21" font="1"></text>
<text top="534" left="562" width="16" height="21" font="1"></text>
<text top="544" left="562" width="16" height="21" font="1"></text>
<text top="555" left="562" width="16" height="21" font="1"></text>
<text top="567" left="562" width="16" height="21" font="1"></text>
<text top="471" left="780" width="30" height="22" font="1">(12)</text>
<text top="630" left="108" width="305" height="22" font="1">where, off-diagonal elements are all zeros.</text>
<text top="673" left="134" width="676" height="22" font="1">For block-based CS image has to be vectorized in one dimension either by using raster scan or</text>
<text top="716" left="108" width="703" height="22" font="1">by just reshaping the matrix. There is a trade-off involved between memory and reconstruction per-</text>
<text top="760" left="108" width="703" height="22" font="1">formance in the selection of block dimension. Small B means less memory but poor reconstruction</text>
<text top="803" left="108" width="703" height="22" font="1">performance while large B means more memory but superior reconstruction performance. Here</text>
<text top="847" left="108" width="703" height="22" font="1">we have used an even simplified version of block CS. We have not vectorized the image in one</text>
<text top="890" left="108" width="703" height="24" font="1">dimension. Instead, we keep the image as such and use (M/N × B) × B sampling matrix. This</text>
<text top="933" left="108" width="703" height="22" font="1">leads to even more simplified implementation. For our case, the block size does not have any affect</text>
<text top="977" left="108" width="703" height="22" font="1">on reconstruction performance in our simulation. An explanation about this has been provided in</text>
<text top="1020" left="108" width="30" height="22" font="1">Sec.</text>
<text top="1020" left="144" width="9" height="22" font="6">3</text>
<text top="1020" left="153" width="528" height="24" font="1">. Hence we choose smallest possible block size (i.e. 2 × 4) for simplicity.</text>
<text top="1063" left="134" width="676" height="22" font="1">The next subsection introduces the transform domain in which natural images are sparse, a key</text>
<text top="1109" left="455" width="9" height="22" font="1">7</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1188" width="918">
<text top="344" left="387" width="144" height="19" font="4">Fig 1 The six wavelets.</text>
<text top="385" left="108" width="372" height="22" font="1">requirement for compressed sensing/reconstruction.</text>
<text top="448" left="108" width="392" height="21" font="1">2.3 Directional Transforms for Sparse Representation</text>
<text top="500" left="108" width="703" height="22" font="1">There are many transforms which can be used to represent an image as a sparse or approximately</text>
<text top="543" left="108" width="703" height="22" font="1">sparse signal. A popular one is Discrete Wavelet Transform (DWT). DWT lacks important proper-</text>
<text top="587" left="108" width="703" height="22" font="1">ties such as shift invariance or directional selectivity. There are many modifications to DWT which</text>
<text top="630" left="108" width="703" height="22" font="1">have been extensively studied to preserve a much higher degree of directional representation than</text>
<text top="673" left="108" width="578" height="22" font="1">DWTs. One of them is DDWT (Dual Tree Discrete Wavelet Transform) (Ref. [</text>
<text top="673" left="686" width="18" height="22" font="6">15</text>
<text top="673" left="704" width="106" height="22" font="1">]). DDWT has</text>
<text top="717" left="108" width="703" height="22" font="1">an advantage over DWT as it provides efficient representation of directional features such as edges</text>
<text top="760" left="108" width="280" height="22" font="1">and contours. It has a redundancy of 2</text>
<text top="761" left="388" width="11" height="12" font="2">m</text>
<text top="763" left="406" width="20" height="18" font="1">: 1</text>
<text top="760" left="430" width="380" height="22" font="1">for m-dimensional signals. Hence for 2-dimensional</text>
<text top="804" left="108" width="703" height="22" font="1">image, redundancy will be 4:1. It consists of both real and imaginary part but only real or imaginary</text>
<text top="847" left="108" width="703" height="22" font="1">part of DDWT guarantees perfect reconstruction and hence can be used as a standalone transform</text>
<text top="890" left="108" width="50" height="22" font="1">(Ref. [</text>
<text top="890" left="158" width="18" height="22" font="6">16</text>
<text top="890" left="176" width="634" height="24" font="1">]). While DWT is ambiguous in directionality property, mixing +45 and −45 together,</text>
<text top="934" left="108" width="703" height="24" font="1">DDWT has unique wavelet in each direction. They are oriented at +/ − 75, +/ − 15, +/ − 45. The</text>
<text top="977" left="108" width="191" height="22" font="1">wavelets are shown in Fig.</text>
<text top="977" left="304" width="9" height="22" font="6">1</text>
<text top="977" left="313" width="4" height="22" font="1">.</text>
<text top="1020" left="134" width="676" height="22" font="1">The next subsection introduces the reconstruction algorithms for images sampled using CS</text>
<text top="1064" left="108" width="74" height="22" font="1">technique.</text>
<text top="1109" left="455" width="9" height="22" font="1">8</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="219" height="21" font="1">2.4 Reconstruction Algorithm</text>
<text top="161" left="108" width="703" height="22" font="1">A major problem associated with Block based CS is blocking-artifacts. A solution to this prob-</text>
<text top="205" left="108" width="297" height="22" font="1">lem was presented by Gan et al. (Ref. [</text>
<text top="205" left="404" width="18" height="22" font="6">14</text>
<text top="205" left="422" width="388" height="22" font="1">]) by incorporating Weiner filtering into the basic PL</text>
<text top="248" left="108" width="703" height="22" font="1">(Projected Landweber) framework. This filtering helps to impose smoothness as well as sparsity</text>
<text top="291" left="108" width="342" height="22" font="1">inherent in PL algorithm. The algorithm (Ref. [</text>
<text top="291" left="449" width="18" height="22" font="6">17</text>
<text top="291" left="467" width="120" height="22" font="1">]) is given below</text>
<text top="338" left="134" width="85" height="18" font="1">f unction x</text>
<text top="336" left="219" width="21" height="12" font="2">i+1</text>
<text top="338" left="245" width="78" height="18" font="1">= SP L(X</text>
<text top="336" left="324" width="4" height="12" font="2">i</text>
<text top="338" left="329" width="35" height="18" font="1">, y, φ</text>
<text top="345" left="365" width="10" height="12" font="2">B</text>
<text top="338" left="376" width="47" height="18" font="1">, Ψ, λ)</text>
<text top="376" left="154" width="9" height="18" font="1">ˆ</text>
<text top="381" left="148" width="15" height="18" font="1">X</text>
<text top="380" left="164" width="4" height="12" font="2">i</text>
<text top="381" left="174" width="100" height="18" font="1">= W iener(X</text>
<text top="379" left="276" width="4" height="12" font="2">i</text>
<text top="381" left="281" width="7" height="18" font="1">)</text>
<text top="425" left="148" width="124" height="18" font="1">f or each block j</text>
<text top="459" left="171" width="9" height="23" font="1">ˆˆ</text>
<text top="468" left="166" width="15" height="18" font="1">X</text>
<text top="466" left="182" width="4" height="12" font="2">i</text>
<text top="477" left="181" width="5" height="12" font="2">j</text>
<text top="468" left="192" width="33" height="18" font="1">= ˆ</text>
<text top="468" left="211" width="15" height="18" font="1">X</text>
<text top="466" left="227" width="4" height="12" font="2">i</text>
<text top="477" left="225" width="5" height="12" font="2">j</text>
<text top="468" left="236" width="28" height="18" font="1">+ φ</text>
<text top="466" left="264" width="7" height="12" font="2">T</text>
<text top="477" left="264" width="10" height="12" font="2">B</text>
<text top="468" left="275" width="15" height="18" font="1">(y</text>
<text top="467" left="295" width="28" height="21" font="1">− φ</text>
<text top="475" left="323" width="10" height="12" font="2">B</text>
<text top="463" left="339" width="9" height="18" font="1">ˆ</text>
<text top="468" left="334" width="15" height="18" font="1">X</text>
<text top="466" left="350" width="4" height="12" font="2">i</text>
<text top="477" left="349" width="5" height="12" font="2">j</text>
<text top="468" left="355" width="7" height="18" font="1">)</text>
<text top="503" left="151" width="9" height="22" font="1">ˇˇ</text>
<text top="511" left="148" width="10" height="18" font="1">T</text>
<text top="509" left="161" width="4" height="12" font="2">i</text>
<text top="511" left="171" width="32" height="18" font="1">= Ψ</text>
<text top="509" left="203" width="16" height="14" font="2">−1</text>
<text top="502" left="225" width="9" height="23" font="1">ˆˆ</text>
<text top="511" left="220" width="15" height="18" font="1">X</text>
<text top="550" left="151" width="9" height="18" font="1">ˇ</text>
<text top="555" left="148" width="10" height="18" font="1">T</text>
<text top="553" left="161" width="4" height="12" font="2">i</text>
<text top="555" left="171" width="119" height="18" font="1">= T hreshold( ˇˇ</text>
<text top="555" left="277" width="10" height="18" font="1">T</text>
<text top="553" left="290" width="4" height="12" font="2">i</text>
<text top="555" left="295" width="25" height="18" font="1">, λ)</text>
<text top="594" left="153" width="9" height="18" font="1">¯</text>
<text top="598" left="148" width="15" height="18" font="1">X</text>
<text top="596" left="164" width="4" height="12" font="2">i</text>
<text top="598" left="174" width="45" height="18" font="1">= Ψ ˇ</text>
<text top="598" left="206" width="10" height="18" font="1">T</text>
<text top="596" left="219" width="4" height="12" font="2">i</text>
<text top="641" left="148" width="124" height="18" font="1">f or each block j</text>
<text top="685" left="166" width="15" height="18" font="1">X</text>
<text top="683" left="182" width="21" height="12" font="2">i+1</text>
<text top="685" left="208" width="33" height="18" font="1">= ¯</text>
<text top="685" left="227" width="15" height="18" font="1">X</text>
<text top="683" left="243" width="4" height="12" font="2">i</text>
<text top="694" left="242" width="5" height="12" font="2">j</text>
<text top="685" left="252" width="28" height="18" font="1">+ φ</text>
<text top="683" left="280" width="7" height="12" font="2">T</text>
<text top="694" left="280" width="10" height="12" font="2">B</text>
<text top="685" left="291" width="15" height="18" font="1">(y</text>
<text top="684" left="311" width="28" height="21" font="1">− φ</text>
<text top="692" left="339" width="10" height="12" font="2">B</text>
<text top="680" left="355" width="9" height="18" font="1">¯</text>
<text top="685" left="350" width="15" height="18" font="1">X</text>
<text top="683" left="366" width="4" height="12" font="2">i</text>
<text top="694" left="365" width="5" height="12" font="2">j</text>
<text top="685" left="372" width="12" height="18" font="1">).</text>
<text top="768" left="134" width="676" height="22" font="1">In the above algorithm Weiner() represents pixel-wise adaptive weiner filtering using a neigh-</text>
<text top="812" left="108" width="364" height="24" font="1">borhood of 3 × 3. The initial value is given below:</text>
<text top="902" left="420" width="10" height="18" font="1">x</text>
<text top="899" left="430" width="6" height="12" font="2">0</text>
<text top="902" left="442" width="31" height="18" font="1">= Φ</text>
<text top="899" left="474" width="7" height="12" font="2">T</text>
<text top="902" left="484" width="14" height="18" font="1">y,</text>
<text top="899" left="780" width="30" height="22" font="1">(13)</text>
<text top="961" left="134" width="299" height="22" font="1">and the termination criteria is as follows -</text>
<text top="1043" left="373" width="20" height="21" font="1">|D</text>
<text top="1041" left="393" width="30" height="12" font="2">(i+1)</text>
<text top="1043" left="429" width="33" height="21" font="1">− D</text>
<text top="1041" left="462" width="14" height="12" font="2">(i)</text>
<text top="1043" left="477" width="46" height="21" font="1">| &lt; 10</text>
<text top="1041" left="523" width="16" height="14" font="2">−4</text>
<text top="1044" left="540" width="5" height="18" font="1">,</text>
<text top="1041" left="780" width="30" height="22" font="1">(14)</text>
<text top="1109" left="455" width="9" height="22" font="1">9</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1188" width="918">
<text top="155" left="329" width="75" height="18" font="1">where, D</text>
<text top="152" left="405" width="14" height="12" font="2">(i)</text>
<text top="155" left="425" width="14" height="18" font="1">=</text>
<text top="143" left="457" width="9" height="18" font="1">1</text>
<text top="154" left="446" width="15" height="21" font="1">√</text>
<text top="170" left="461" width="14" height="18" font="1">N</text>
<text top="155" left="478" width="20" height="21" font="1">||x</text>
<text top="152" left="498" width="4" height="12" font="2">i</text>
<text top="155" left="507" width="28" height="21" font="1">− ˆˆx</text>
<text top="152" left="535" width="9" height="12" font="2">(i</text>
<text top="152" left="545" width="21" height="14" font="2">−1)</text>
<text top="155" left="567" width="10" height="21" font="1">||</text>
<text top="163" left="577" width="6" height="12" font="2">2</text>
<text top="155" left="584" width="5" height="18" font="1">.</text>
<text top="152" left="780" width="30" height="22" font="1">(15)</text>
<text top="215" left="134" width="676" height="22" font="1">The above sections were about compressed sensing and reconstruction. The next subsection</text>
<text top="258" left="108" width="657" height="22" font="1">introduces a popular image storage technique which is a key component in our system flow.</text>
<text top="318" left="108" width="131" height="21" font="1">2.5 JPEG Theory</text>
<text top="370" left="108" width="703" height="22" font="1">JPEG stands for Joint Photographics Expert Group. It is a very widely used lossy image com-</text>
<text top="413" left="108" width="703" height="22" font="1">pression technique. It can perform both lossless and lossy compression, though lossy compression</text>
<text top="457" left="108" width="703" height="22" font="1">is very widely used mode of compression. Lossy compression relies on the fact that most of the</text>
<text top="500" left="108" width="703" height="22" font="1">image information is contained in very few coefficients in the Discrete Cosine Transform (DCT)</text>
<text top="543" left="108" width="703" height="22" font="1">domain. So a vast majority of insignificant coefficients can be discarded without much loss in</text>
<text top="587" left="108" width="399" height="22" font="1">perceptual quality resulting in large compression ratios.</text>
<text top="630" left="134" width="676" height="24" font="1">JPEG first divides the image into 8 × 8 pixel blocks and then calculates DCT of each block.</text>
<text top="673" left="108" width="703" height="22" font="1">A quantizer rounds off the resulting DCT coefficients according to the quantization matrix, which</text>
<text top="717" left="108" width="703" height="22" font="1">controls the amount of compression one wants to do. This step represents ”lossy” part of JPEG</text>
<text top="760" left="108" width="703" height="22" font="1">but allows for large compression ratios. We can also control the amount of compression by appro-</text>
<text top="804" left="108" width="703" height="22" font="1">priately setting the quantization matrix. After quantization, data is compressed further by the use</text>
<text top="847" left="108" width="703" height="22" font="1">of variable length encoding of these coefficients. While JPEG has been applied previously to CS</text>
<text top="890" left="108" width="168" height="22" font="1">sampled images (Ref. [</text>
<text top="890" left="275" width="18" height="22" font="6">18</text>
<text top="890" left="293" width="517" height="22" font="1">]) but compression performance has not been mentioned. Li et. al. (Ref.</text>
<text top="934" left="108" width="6" height="22" font="1">[</text>
<text top="934" left="114" width="18" height="22" font="6">18</text>
<text top="934" left="132" width="679" height="22" font="1">]) also use the Gaussian random matrix to compressively sample the image. When we sample</text>
<text top="977" left="108" width="703" height="22" font="1">an image with the Gaussian random matrix, the sampled image has Gaussian distribution and the</text>
<text top="1020" left="108" width="703" height="22" font="1">image-like properties are lost. This results in a very poor JPEG compression performance which</text>
<text top="1064" left="108" width="510" height="22" font="1">will significantly increase the effort/energy required to store the image.</text>
<text top="1109" left="450" width="18" height="22" font="1">10</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="353" height="21" font="1">2.6 Deterministic CS and Super-Resolution (SR)</text>
<text top="161" left="108" width="703" height="22" font="1">Traditionally, the projection or sampling matrix Φ is chosen as Gaussian Random matrix as it</text>
<text top="205" left="108" width="703" height="22" font="1">possess good RIP and is highly incoherent with most sparsifying basis. However, hardware im-</text>
<text top="248" left="108" width="703" height="22" font="1">plementation of Gaussian random matrix is infeasible. A deterministic construction of sampling</text>
<text top="291" left="108" width="703" height="22" font="1">matrix can result in considerable simplification of hardware implementation. A method for deter-</text>
<text top="335" left="108" width="513" height="22" font="1">ministic construction of matrices were first introduced in detail in Ref. [</text>
<text top="335" left="621" width="18" height="22" font="6">19</text>
<text top="335" left="638" width="172" height="22" font="1">]. The author used finite</text>
<text top="378" left="108" width="703" height="22" font="1">fields to construct cyclic matrices which satisfy RIP. This is popularly known as deterministic CS.</text>
<text top="421" left="108" width="679" height="22" font="1">Other methods for deterministic construction have also been proposed such as one in Ref. [</text>
<text top="421" left="786" width="18" height="22" font="6">20</text>
<text top="421" left="804" width="6" height="22" font="1">]</text>
<text top="465" left="108" width="703" height="22" font="1">where authors used Euler Square based binary CS matrices which outperformed their Gaussian</text>
<text top="508" left="108" width="93" height="22" font="1">counterparts.</text>
<text top="552" left="134" width="676" height="22" font="1">Super-resolution (SR) implies construction of high-resolution images from one or more low</text>
<text top="595" left="108" width="703" height="22" font="1">resolution images. Traditionally SR had been done using a set of low-resolution images. The idea</text>
<text top="638" left="108" width="703" height="22" font="1">is to enforce the constraint of sparsity in the transform domain such as wavelet to reconstruct the</text>
<text top="682" left="108" width="703" height="22" font="1">image. But using CS for SR means, that sampling matrix is no longer random but deterministic.</text>
<text top="725" left="108" width="703" height="22" font="1">The sampling or projection matrix for SR is guided by imaging model. SR sampling matrix L can</text>
<text top="768" left="108" width="425" height="22" font="1">be viewed as product of two matrices as follows (see Ref. [</text>
<text top="768" left="532" width="18" height="22" font="6">21</text>
<text top="768" left="550" width="27" height="22" font="1">] ) -</text>
<text top="858" left="407" width="58" height="18" font="1">L = R</text>
<text top="858" left="469" width="30" height="21" font="1">× L</text>
<text top="866" left="499" width="6" height="12" font="2">p</text>
<text top="858" left="506" width="5" height="18" font="1">,</text>
<text top="855" left="780" width="30" height="22" font="1">(16)</text>
<text top="918" left="108" width="407" height="22" font="1">where R is decimation operator or downsampler and L</text>
<text top="928" left="515" width="6" height="12" font="2">p</text>
<text top="918" left="528" width="282" height="22" font="1">is low pass filter. Since there is a low</text>
<text top="961" left="108" width="703" height="22" font="1">pass filter involved in construction of L, it will have frequency discriminative nature. It will filter</text>
<text top="1005" left="108" width="703" height="22" font="1">out high frequency components but preserve low frequency components. Where as, a Gaussian</text>
<text top="1048" left="108" width="703" height="22" font="1">random matrix will preserve all frequencies. This means L exhibits good RIP characteristics for</text>
<text top="1109" left="450" width="18" height="22" font="1">11</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">a class of signals that contain low frequency information only, but Gaussian random matrix has</text>
<text top="152" left="108" width="400" height="22" font="1">good characteristics for any class of signals (see Ref. [</text>
<text top="152" left="508" width="18" height="22" font="6">21</text>
<text top="152" left="526" width="284" height="22" font="1">]). However, in case of natural images,</text>
<text top="196" left="108" width="703" height="22" font="1">most of the energy in concentrated in low frequency signals only. Hence if cutoff frequency for</text>
<text top="242" left="108" width="12" height="18" font="1">L</text>
<text top="249" left="120" width="6" height="12" font="2">p</text>
<text top="239" left="134" width="677" height="22" font="1">is appropriately set, the loss might not be too much resulting in reasonable reconstruction.</text>
<text top="282" left="108" width="703" height="22" font="1">Lossy image compression algorithm too weed out or reduce the high frequency component while</text>
<text top="326" left="108" width="581" height="22" font="1">the process of compression. Sen et al. performed SR CS reconstruction (Ref. [</text>
<text top="326" left="689" width="9" height="22" font="6">4</text>
<text top="326" left="698" width="113" height="22" font="1">]) using filtered</text>
<text top="369" left="108" width="703" height="22" font="1">and point down sampled image. In our work, we present a novel image sensor design (see Sec.</text>
<text top="413" left="108" width="9" height="22" font="6">4</text>
<text top="413" left="117" width="694" height="22" font="1">) for filtering and downsampling the image in the CMOS image sensor itself without additional</text>
<text top="456" left="108" width="703" height="22" font="1">hardware and resulting in significant power savings. An advantage is that because we are using</text>
<text top="499" left="108" width="703" height="22" font="1">filtering and downsampling, we do not need randomization of sampling matrix. This also results</text>
<text top="543" left="108" width="703" height="22" font="1">in significant savings in terms of hardware and power consumption as there is no need of random</text>
<text top="586" left="108" width="232" height="22" font="1">generator and associated wiring.</text>
<text top="629" left="134" width="503" height="22" font="1">Next subsections will introduce the hardware aspect of image sensors.</text>
<text top="693" left="108" width="142" height="21" font="1">2.7 Photodetectors</text>
<text top="745" left="108" width="703" height="22" font="1">There are mainly 3 types of photo sensing elements - photogates, phototransistors and photodiodes.</text>
<text top="789" left="108" width="703" height="22" font="1">In this work, we have used photodiodes. There are different types of photodiodes too. We have</text>
<text top="832" left="108" width="703" height="22" font="1">used simple p-n junction, although we can use more sophisticated p-i-n junction to improve the</text>
<text top="875" left="108" width="703" height="22" font="1">efficiency of an image sensor. As the name implies, p-i-n junction consists of intrinsic region</text>
<text top="919" left="108" width="703" height="22" font="1">between p and n region. The p-i-n junction device reduces dark current and charge-transfer noise</text>
<text top="962" left="108" width="48" height="22" font="1">(Ref. [</text>
<text top="962" left="155" width="18" height="22" font="6">22</text>
<text top="962" left="173" width="637" height="22" font="1">]). Hence using p-n junction over p-i-n junction does not affect the demonstration of main</text>
<text top="1006" left="108" width="348" height="22" font="1">functionality of our system design methodology.</text>
<text top="1049" left="134" width="676" height="22" font="1">There are various types of p-n junction photodiodes also. They are - n+/p-sub, n-well/p-sub,</text>
<text top="1109" left="450" width="18" height="22" font="1">12</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="7" size="12" family="Times" color="#0000ff"/>
<text top="269" left="338" width="208" height="19" font="4">Fig 2 n+/p-sub photodiode (Ref. [</text>
<text top="270" left="546" width="15" height="18" font="7">24</text>
<text top="270" left="561" width="14" height="18" font="4">]).</text>
<text top="311" left="108" width="275" height="22" font="1">p+/n-well/p-sub. Murari el al. (Ref. [</text>
<text top="311" left="383" width="18" height="22" font="6">23</text>
<text top="311" left="401" width="410" height="22" font="1">]) list the parameters and advantages of various photodi-</text>
<text top="355" left="108" width="703" height="22" font="1">odes. We are using n+/p-sub because of the large fill factor, low dark current per unit area values</text>
<text top="398" left="108" width="684" height="22" font="1">and ease of implementation to demonstrate our concept. Its schematic diagram is shown in Fig.</text>
<text top="398" left="797" width="9" height="22" font="6">2</text>
<text top="398" left="806" width="4" height="22" font="1">.</text>
<text top="462" left="108" width="138" height="21" font="1">2.8 Image Sensors</text>
<text top="514" left="108" width="703" height="22" font="1">In the past decade, extensive research has been done on CMOS sensors. An image pixel can be</text>
<text top="557" left="108" width="703" height="22" font="1">broadly divided into two parts, photo-detector element, and sensing circuit. Depending on sensing</text>
<text top="601" left="108" width="703" height="22" font="1">circuit there are two main families of image pixels, active pixel sensor, and passive pixel sensor.</text>
<text top="644" left="108" width="703" height="22" font="1">Passive pixel sensor carries out the charge of the photodetector and amplifies them later. Active</text>
<text top="688" left="108" width="703" height="22" font="1">pixel sensor has a photodetector and an active amplifier. Passive pixel sensors have mostly been</text>
<text top="731" left="108" width="703" height="22" font="1">implemented with Charge Coupled Device (CCD) technology while active pixel sensors are imple-</text>
<text top="774" left="108" width="703" height="22" font="1">mented using CMOS technology. Decreasing size and cost of CMOS elements has made CMOS</text>
<text top="818" left="108" width="388" height="22" font="1">image sensors viable and technology of choice (Ref. [</text>
<text top="818" left="496" width="18" height="22" font="6">25</text>
<text top="818" left="514" width="296" height="22" font="1">]). Ever decreasing size of transistors has</text>
<text top="861" left="108" width="703" height="22" font="1">made high-resolution image sensors possible. The most popular active pixel sensors design are 3T,</text>
<text top="904" left="108" width="445" height="22" font="1">4T and CTIA (Capacitive Trans-Impedance Amplifier) pixels.</text>
<text top="948" left="134" width="676" height="22" font="1">CTIA is mostly used in scientific applications while 3T and 4T are mostly used in commercial</text>
<text top="991" left="108" width="703" height="22" font="1">systems. We will not be discussing CTIA but the results presented can be applied in CTIA pixel</text>
<text top="1035" left="108" width="491" height="22" font="1">as well. The schematic diagram for 3T and 4T pixel is shown in Fig.</text>
<text top="1035" left="605" width="9" height="22" font="6">3</text>
<text top="1035" left="614" width="4" height="22" font="1">.</text>
<text top="1109" left="450" width="18" height="22" font="1">13</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="1188" width="918">
<text top="356" left="108" width="703" height="19" font="4">Fig 3 3T and 4T Pixel Schematic diagram. M R stands for reset transistor, M Tx stands for transmission gate, M SF</text>
<text top="378" left="108" width="703" height="18" font="4">stands for source follower, M RS stands for row select transistor, PD stands for photodiode, PPD stands for pinned</text>
<text top="400" left="108" width="321" height="18" font="4">photodiode and FD stands for floating diffusion node.</text>
<text top="441" left="134" width="676" height="22" font="1">3T pixel is very compact but has less sensitivity and unstable bias voltage across photodiode.</text>
<text top="485" left="108" width="703" height="22" font="1">This pixel architecture consists of a photodiode and three transistors- Reset (M R), Source Fol-</text>
<text top="528" left="108" width="703" height="22" font="1">lower (M SF) and a Row Select Transistor (M RS). In 3T pixel operation, first the photodiode is</text>
<text top="572" left="108" width="703" height="22" font="1">reset using Reset transistor. Now, the charge gets collected on the photodiode proportional to light</text>
<text top="615" left="108" width="703" height="22" font="1">signal and exposure time. After a set integration time, the row select transistor is turned on to read</text>
<text top="658" left="108" width="329" height="22" font="1">out the signal using external readout circuitry.</text>
<text top="702" left="134" width="425" height="22" font="1">The 4T (four transistor) pixel architecture is shown in Fig.</text>
<text top="702" left="567" width="9" height="22" font="6">3</text>
<text top="702" left="581" width="50" height="22" font="1">(Ref. [</text>
<text top="702" left="631" width="18" height="22" font="6">26</text>
<text top="702" left="649" width="161" height="22" font="1">]). Its architecture has</text>
<text top="745" left="108" width="703" height="22" font="1">two additional elements compared to the 3T architecture namely, the transfer gate (TX) and the</text>
<text top="788" left="108" width="703" height="22" font="1">floating diffusion node (FD). It uses either a Pinned Photo-Diode (PPD) or a normal Photo-Diode</text>
<text top="832" left="108" width="338" height="22" font="1">(PD) depending upon the design shown in Fig.</text>
<text top="832" left="453" width="9" height="22" font="6">3</text>
<text top="832" left="462" width="348" height="22" font="1">. As long as TX is off, charge is accumulated in</text>
<text top="875" left="108" width="703" height="22" font="1">PPD or PD. When TX is on for set Integration time period, charge is transferred to the diffusion</text>
<text top="919" left="108" width="703" height="22" font="1">node. We have used 4T pixel design with PD as our choice for implementation as we did not have</text>
<text top="962" left="108" width="703" height="22" font="1">pinned photodiode (PPD) model to perform the simulation. It is expected that result will be similar</text>
<text top="1005" left="108" width="298" height="22" font="1">with PPD as explained earlier subsection.</text>
<text top="1049" left="134" width="676" height="22" font="1">Because charge collection area and readout area are separated in the 4T pixel via M Tx tran-</text>
<text top="1109" left="450" width="18" height="22" font="1">14</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="1188" width="918">
<text top="239" left="272" width="370" height="19" font="4">Fig 4 Correlated Double Sampling (CDS) for a single image.</text>
<text top="281" left="108" width="703" height="22" font="1">sistor, it offers some key advantages. While the 3T design can only implement rolling shutter, the</text>
<text top="324" left="108" width="703" height="22" font="1">4T design can implement both rolling as well as global shutter. Global shutter is very important</text>
<text top="368" left="108" width="703" height="22" font="1">for the high speed imaging application. The 4T pixel also allows low noise operation through the</text>
<text top="411" left="108" width="703" height="22" font="1">use of the Correlated Double Sampling (CDS) technique. The reset noise or kTC noise is the main</text>
<text top="454" left="108" width="703" height="22" font="1">source of noise resulting from the resetting operation of floating diffusion node through the resis-</text>
<text top="498" left="108" width="703" height="22" font="1">tive channel of the reset transistor. Thus, CDS technique can be employed to sample the floating</text>
<text top="541" left="108" width="703" height="22" font="1">diffusion node before and after M Tx is turned on within a short time interval, thereby eliminating</text>
<text top="585" left="108" width="307" height="22" font="1">kTC noise. This operation is shown in Fig.</text>
<text top="585" left="421" width="9" height="22" font="6">4</text>
<text top="585" left="429" width="4" height="22" font="1">.</text>
<text top="628" left="134" width="676" height="22" font="1">Transfer transistor or M Tx makes the bias voltage across photodiode very stable. It also helps</text>
<text top="671" left="108" width="703" height="22" font="1">us to increase sensitivity because the integration capacitor can be kept small. CTIA has around 8</text>
<text top="715" left="108" width="703" height="22" font="1">transistors but has highest sensitivity among all of them and stable photodiode voltage. Because</text>
<text top="758" left="108" width="703" height="22" font="1">of large pixel size, it is not much used in commercial systems. It is mostly used in scientific</text>
<text top="802" left="108" width="91" height="22" font="1">applications.</text>
<text top="865" left="108" width="257" height="21" font="1">2.9 Nonidealities in Image Sensors</text>
<text top="917" left="108" width="703" height="22" font="1">Non-idealities can be broadly classified into two major groups - pixel level non-idealities and</text>
<text top="961" left="108" width="255" height="22" font="1">readout-level non-idealities (Ref. [</text>
<text top="961" left="362" width="9" height="22" font="6">3</text>
<text top="961" left="371" width="439" height="22" font="1">]). Both of them present challenges to the image sensor de-</text>
<text top="1004" left="108" width="703" height="22" font="1">signers. Major pixel level non-idealities are - Dark Signal Non-Uniformity, Offset Fixed Pattern</text>
<text top="1047" left="108" width="703" height="22" font="1">Noise, Photo-response non-uniformity, Pixel response non-linearity and pixel temporal noise. Ma-</text>
<text top="1109" left="450" width="18" height="22" font="1">15</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="1188" width="918">
<text top="344" left="297" width="320" height="19" font="4">Fig 5 Column and Pixel fixed pattern noise example.</text>
<text top="384" left="108" width="703" height="22" font="1">jor readout level non-linearities are - offset column fixed pattern noise, gain error column fixed</text>
<text top="427" left="108" width="703" height="22" font="1">pattern noise, readout non-linearity, readout temporal noise, readout output voltage range and</text>
<text top="471" left="108" width="93" height="22" font="1">quantization.</text>
<text top="514" left="134" width="676" height="22" font="1">In this paper, we will not deal with temporal noise but we will consider the fixed pattern noise</text>
<text top="557" left="108" width="703" height="22" font="1">and application of CS to overcome the challenges posed by fixed pattern noise. We are also not</text>
<text top="601" left="108" width="703" height="22" font="1">dealing with readout output voltage range and quantization noise as it is a research problem by</text>
<text top="644" left="108" width="703" height="22" font="1">itself and has been included in future course of our work. Offset fixed pattern noise can be easily</text>
<text top="688" left="108" width="703" height="22" font="1">dealt with by using correlated double sampling technique. But photoresponse non-uniformity,</text>
<text top="731" left="108" width="703" height="22" font="1">pixel response non-linearity and gain error fixed pattern noise require sophisticated circuitry to</text>
<text top="774" left="108" width="553" height="22" font="1">deal with. A simple way to deal with this problem is discussed in the Sec.</text>
<text top="774" left="671" width="9" height="22" font="6">3</text>
<text top="774" left="686" width="124" height="22" font="1">of the paper. An</text>
<text top="818" left="108" width="568" height="22" font="1">example image with column and pixel level fixed pattern noise is shown in Fig.</text>
<text top="818" left="682" width="9" height="22" font="6">5</text>
<text top="818" left="691" width="4" height="22" font="1">.</text>
<text top="880" left="108" width="104" height="23" font="1">3 Simulation</text>
<text top="934" left="108" width="682" height="22" font="1">Our entire novel system design methodology can be described using the block diagram in Fig.</text>
<text top="934" left="797" width="9" height="22" font="6">6</text>
<text top="934" left="806" width="4" height="22" font="1">.</text>
<text top="977" left="108" width="703" height="22" font="1">The input to the system is an image. The image gets sampled using compressed sampling technique</text>
<text top="1020" left="108" width="703" height="22" font="1">using either of the sampling matrices. This sampling function is implemented in the image sensor</text>
<text top="1064" left="108" width="432" height="22" font="1">itself. The design of such image sensor is discussed in Sec.</text>
<text top="1064" left="547" width="9" height="22" font="6">4</text>
<text top="1064" left="561" width="249" height="22" font="1">of this paper. Depending upon the</text>
<text top="1109" left="450" width="18" height="22" font="1">16</text>
</page>
<page number="17" position="absolute" top="0" left="0" height="1188" width="918">
<text top="298" left="360" width="194" height="19" font="4">Fig 6 Block diagram of system.</text>
<text top="341" left="108" width="703" height="22" font="1">quality desired, a desired number of bits are truncated while sampling. From here, the image goes</text>
<text top="384" left="108" width="703" height="22" font="1">to the image processor of the camera system. Here the image is compressed using JPEG technique</text>
<text top="427" left="108" width="703" height="22" font="1">as mentioned earlier. JPEG encoding can be done using ASIC chip or FPGA as well. We have used</text>
<text top="471" left="108" width="703" height="22" font="1">different levels of compression in JPEG to study the performance of our system which ranges from</text>
<text top="514" left="108" width="703" height="22" font="1">different levels of lossy to lossless compression. After compression, the image may get transmitted</text>
<text top="557" left="108" width="703" height="22" font="1">over a communication medium. The compressed image is then uncompressed. If the compression</text>
<text top="601" left="108" width="703" height="22" font="1">was lossy, there will be some loss of information. This uncompressed image is then reconstructed</text>
<text top="644" left="108" width="703" height="22" font="1">using SPL algorithm mentioned previously. The reconstruction performance is measured using</text>
<text top="688" left="108" width="100" height="22" font="1">PSNR metric.</text>
<text top="731" left="134" width="676" height="22" font="1">Now we demonstrate the reconstruction results of our proposed novel system flow. We use</text>
<text top="774" left="108" width="703" height="22" font="1">both binary and non-binary block diagonal matrix to compressively sample the image. The binary</text>
<text top="818" left="108" width="129" height="22" font="1">block diagonal (Φ</text>
<text top="828" left="237" width="10" height="12" font="2">B</text>
<text top="818" left="248" width="253" height="22" font="1">) and non-binary block diagonal (Φ</text>
<text top="828" left="501" width="21" height="12" font="2">N B</text>
<text top="818" left="524" width="286" height="22" font="1">) sampling matrix are mentioned below.</text>
<text top="914" left="380" width="13" height="18" font="1">Φ</text>
<text top="921" left="392" width="10" height="12" font="2">B</text>
<text top="914" left="408" width="14" height="18" font="1">=</text>
<text top="866" left="427" width="16" height="21" font="1"></text>
<text top="898" left="427" width="16" height="21" font="1"></text>
<text top="909" left="427" width="16" height="21" font="1"></text>
<text top="920" left="427" width="16" height="21" font="1"></text>
<text top="896" left="443" width="80" height="18" font="1">1 1 0 0</text>
<text top="939" left="443" width="80" height="18" font="1">0 0 1 1</text>
<text top="866" left="523" width="16" height="21" font="1"></text>
<text top="898" left="523" width="16" height="21" font="1"></text>
<text top="909" left="523" width="16" height="21" font="1"></text>
<text top="920" left="523" width="16" height="21" font="1"></text>
<text top="910" left="780" width="30" height="22" font="1">(17)</text>
<text top="1026" left="374" width="13" height="18" font="1">Φ</text>
<text top="1033" left="387" width="21" height="12" font="2">N B</text>
<text top="1026" left="414" width="14" height="18" font="1">=</text>
<text top="979" left="433" width="16" height="21" font="1"></text>
<text top="1010" left="433" width="16" height="21" font="1"></text>
<text top="1021" left="433" width="16" height="21" font="1"></text>
<text top="1032" left="433" width="16" height="21" font="1"></text>
<text top="1008" left="448" width="80" height="18" font="1">9 7 0 0</text>
<text top="1052" left="448" width="80" height="18" font="1">0 0 9 7</text>
<text top="979" left="528" width="16" height="21" font="1"></text>
<text top="1010" left="528" width="16" height="21" font="1"></text>
<text top="1021" left="528" width="16" height="21" font="1"></text>
<text top="1032" left="528" width="16" height="21" font="1"></text>
<text top="1023" left="780" width="30" height="22" font="1">(18)</text>
<text top="1109" left="450" width="18" height="22" font="1">17</text>
</page>
<page number="18" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="134" width="109" height="22" font="1">Since matrix Φ</text>
<text top="119" left="243" width="10" height="12" font="2">B</text>
<text top="109" left="259" width="551" height="22" font="1">adds two neighboring pixels, it does not significantly alter the statistical dis-</text>
<text top="152" left="108" width="541" height="22" font="1">tribution of image and hence preserves image-like properties. But matrix Φ</text>
<text top="163" left="648" width="21" height="12" font="2">N B</text>
<text top="152" left="675" width="135" height="22" font="1">performs weighted</text>
<text top="196" left="108" width="703" height="22" font="1">addition, so it does alter the distribution but still preserves some image-like properties. It does not</text>
<text top="239" left="108" width="703" height="22" font="1">alter the image as significantly as random Gaussian sampling matrix which makes the distribution</text>
<text top="282" left="108" width="422" height="22" font="1">of resulting sampled image as Gaussian. We arrived at Φ</text>
<text top="293" left="529" width="21" height="12" font="2">N B</text>
<text top="282" left="557" width="253" height="22" font="1">empirically and it was found to be</text>
<text top="326" left="108" width="636" height="22" font="1">most optimal. One pixel is weighed approximately 1.3 times relative to the other in Φ</text>
<text top="336" left="744" width="21" height="12" font="2">N B</text>
<text top="326" left="766" width="44" height="22" font="1">. One</text>
<text top="369" left="108" width="703" height="22" font="1">can try higher relative weights also but it will be difficult to implement in hardware due to large</text>
<text top="413" left="108" width="703" height="22" font="1">capacitor requirement (as per out design presented in next section). Since we have fixed bitwidth</text>
<text top="456" left="108" width="703" height="22" font="1">ADC’s, we can only use integer weights to sample image otherwise we will loose the information</text>
<text top="499" left="108" width="426" height="22" font="1">contained in the decimal part. The image sampled using Φ</text>
<text top="510" left="534" width="21" height="12" font="2">N B</text>
<text top="499" left="561" width="249" height="22" font="1">requires 12 bits to store each pixel</text>
<text top="543" left="108" width="183" height="22" font="1">of resulting image. For Φ</text>
<text top="553" left="290" width="10" height="12" font="2">B</text>
<text top="546" left="306" width="9" height="18" font="1">9</text>
<text top="543" left="319" width="214" height="22" font="1">bits are required for the same.</text>
<text top="586" left="134" width="676" height="22" font="1">Because of the way our sampling matrix is constructed, block size will not have any affect on</text>
<text top="629" left="108" width="703" height="22" font="1">reconstruction performance. We can see this from two matrices of different block sizes presented</text>
<text top="673" left="108" width="47" height="22" font="1">below.</text>
<text top="769" left="367" width="13" height="18" font="1">Φ</text>
<text top="776" left="379" width="20" height="12" font="2">B,2</text>
<text top="776" left="399" width="16" height="14" font="2">×4</text>
<text top="769" left="421" width="14" height="18" font="1">=</text>
<text top="721" left="440" width="16" height="21" font="1"></text>
<text top="753" left="440" width="16" height="21" font="1"></text>
<text top="764" left="440" width="16" height="21" font="1"></text>
<text top="775" left="440" width="16" height="21" font="1"></text>
<text top="751" left="456" width="80" height="18" font="1">1 1 0 0</text>
<text top="795" left="456" width="80" height="18" font="1">0 0 1 1</text>
<text top="721" left="536" width="16" height="21" font="1"></text>
<text top="753" left="536" width="16" height="21" font="1"></text>
<text top="764" left="536" width="16" height="21" font="1"></text>
<text top="775" left="536" width="16" height="21" font="1"></text>
<text top="766" left="780" width="30" height="22" font="1">(19)</text>
<text top="924" left="319" width="13" height="18" font="1">Φ</text>
<text top="931" left="332" width="20" height="12" font="2">B,4</text>
<text top="931" left="352" width="16" height="14" font="2">×8</text>
<text top="924" left="374" width="14" height="18" font="1">=</text>
<text top="834" left="392" width="16" height="21" font="1"></text>
<text top="866" left="392" width="16" height="21" font="1"></text>
<text top="876" left="392" width="16" height="21" font="1"></text>
<text top="887" left="392" width="16" height="21" font="1"></text>
<text top="898" left="392" width="16" height="21" font="1"></text>
<text top="909" left="392" width="16" height="21" font="1"></text>
<text top="919" left="392" width="16" height="21" font="1"></text>
<text top="930" left="392" width="16" height="21" font="1"></text>
<text top="941" left="392" width="16" height="21" font="1"></text>
<text top="952" left="392" width="16" height="21" font="1"></text>
<text top="962" left="392" width="16" height="21" font="1"></text>
<text top="974" left="392" width="16" height="21" font="1"></text>
<text top="863" left="408" width="175" height="18" font="1">1 1 0 0 0 0 0 0</text>
<text top="907" left="408" width="175" height="18" font="1">0 0 1 1 0 0 0 0</text>
<text top="950" left="408" width="175" height="18" font="1">0 0 0 0 1 1 0 0</text>
<text top="994" left="408" width="175" height="18" font="1">0 0 0 0 0 0 1 1</text>
<text top="834" left="583" width="16" height="21" font="1"></text>
<text top="866" left="583" width="16" height="21" font="1"></text>
<text top="876" left="583" width="16" height="21" font="1"></text>
<text top="887" left="583" width="16" height="21" font="1"></text>
<text top="898" left="583" width="16" height="21" font="1"></text>
<text top="909" left="583" width="16" height="21" font="1"></text>
<text top="919" left="583" width="16" height="21" font="1"></text>
<text top="930" left="583" width="16" height="21" font="1"></text>
<text top="941" left="583" width="16" height="21" font="1"></text>
<text top="952" left="583" width="16" height="21" font="1"></text>
<text top="962" left="583" width="16" height="21" font="1"></text>
<text top="974" left="583" width="16" height="21" font="1"></text>
<text top="921" left="780" width="30" height="22" font="1">(20)</text>
<text top="1037" left="134" width="676" height="22" font="1">We can see that both the above block matrix, when used as sampling matrix actually perform</text>
<text top="1109" left="450" width="18" height="22" font="1">18</text>
</page>
<page number="19" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="24" font="1">the same function of adding two rows. 4 × 8 matrix is actually two 2 × 4 matrix along the main</text>
<text top="152" left="108" width="347" height="22" font="1">diagonal of the sampling matrix presented in Eq.</text>
<text top="152" left="460" width="18" height="22" font="6">12</text>
<text top="152" left="478" width="332" height="24" font="1">. Thus 4 × 8 can be expressed in terms of 2 × 4</text>
<text top="196" left="108" width="135" height="22" font="1">matrix as follows -</text>
<text top="292" left="345" width="13" height="18" font="1">Φ</text>
<text top="299" left="358" width="20" height="12" font="2">B,4</text>
<text top="298" left="378" width="16" height="14" font="2">×8</text>
<text top="292" left="400" width="14" height="18" font="1">=</text>
<text top="244" left="419" width="16" height="21" font="1"></text>
<text top="276" left="419" width="16" height="21" font="1"></text>
<text top="287" left="419" width="16" height="21" font="1"></text>
<text top="298" left="419" width="16" height="21" font="1"></text>
<text top="274" left="435" width="13" height="18" font="1">Φ</text>
<text top="281" left="447" width="20" height="12" font="2">B,2</text>
<text top="281" left="467" width="16" height="14" font="2">×4</text>
<text top="317" left="499" width="13" height="18" font="1">Φ</text>
<text top="325" left="512" width="20" height="12" font="2">B,2</text>
<text top="324" left="532" width="16" height="14" font="2">×4</text>
<text top="244" left="549" width="16" height="21" font="1"></text>
<text top="276" left="549" width="16" height="21" font="1"></text>
<text top="287" left="549" width="16" height="21" font="1"></text>
<text top="298" left="549" width="24" height="21" font="1"> .</text>
<text top="288" left="780" width="30" height="22" font="1">(21)</text>
<text top="360" left="134" width="484" height="22" font="1">Thus both of them lead to same sampling matrix presented in Eq.</text>
<text top="360" left="628" width="18" height="22" font="6">12</text>
<text top="360" left="646" width="165" height="22" font="1">. Hence there will not</text>
<text top="404" left="108" width="703" height="22" font="1">be any affect in performance. The same reasoning applies to non-binary sampling matrix also.</text>
<text top="447" left="108" width="142" height="22" font="1">According to Eq. (</text>
<text top="447" left="250" width="18" height="22" font="6">16</text>
<text top="447" left="268" width="57" height="22" font="1">), Eq. (</text>
<text top="447" left="325" width="18" height="22" font="6">19</text>
<text top="447" left="343" width="468" height="22" font="1">) can be viewed as product of downsampler (R) and a circulant</text>
<text top="491" left="108" width="131" height="22" font="1">averaging filter (L</text>
<text top="501" left="239" width="6" height="12" font="2">p</text>
<text top="491" left="246" width="238" height="22" font="1">). These matrices are as follows -</text>
<text top="627" left="382" width="12" height="18" font="1">L</text>
<text top="635" left="394" width="6" height="12" font="2">p</text>
<text top="627" left="406" width="14" height="18" font="1">=</text>
<text top="537" left="425" width="16" height="21" font="1"></text>
<text top="569" left="425" width="16" height="21" font="1"></text>
<text top="579" left="425" width="16" height="21" font="1"></text>
<text top="590" left="425" width="16" height="21" font="1"></text>
<text top="601" left="425" width="16" height="21" font="1"></text>
<text top="612" left="425" width="16" height="21" font="1"></text>
<text top="623" left="425" width="16" height="21" font="1"></text>
<text top="633" left="425" width="16" height="21" font="1"></text>
<text top="644" left="425" width="16" height="21" font="1"></text>
<text top="655" left="425" width="16" height="21" font="1"></text>
<text top="666" left="425" width="16" height="21" font="1"></text>
<text top="677" left="425" width="16" height="21" font="1"></text>
<text top="567" left="440" width="80" height="18" font="1">1 1 0 0</text>
<text top="610" left="440" width="80" height="18" font="1">0 1 1 0</text>
<text top="653" left="440" width="80" height="18" font="1">0 0 1 1</text>
<text top="697" left="440" width="80" height="18" font="1">1 0 0 1</text>
<text top="537" left="520" width="16" height="21" font="1"></text>
<text top="569" left="520" width="16" height="21" font="1"></text>
<text top="579" left="520" width="16" height="21" font="1"></text>
<text top="590" left="520" width="16" height="21" font="1"></text>
<text top="601" left="520" width="16" height="21" font="1"></text>
<text top="612" left="520" width="16" height="21" font="1"></text>
<text top="623" left="520" width="16" height="21" font="1"></text>
<text top="633" left="520" width="16" height="21" font="1"></text>
<text top="644" left="520" width="16" height="21" font="1"></text>
<text top="655" left="520" width="16" height="21" font="1"></text>
<text top="666" left="520" width="16" height="21" font="1"></text>
<text top="677" left="520" width="16" height="21" font="1"></text>
<text top="624" left="780" width="30" height="22" font="1">(22)</text>
<text top="796" left="385" width="32" height="18" font="1">R =</text>
<text top="749" left="422" width="16" height="21" font="1"></text>
<text top="781" left="422" width="16" height="21" font="1"></text>
<text top="792" left="422" width="16" height="21" font="1"></text>
<text top="803" left="422" width="16" height="21" font="1"></text>
<text top="779" left="438" width="80" height="18" font="1">1 0 0 0</text>
<text top="822" left="438" width="80" height="18" font="1">0 0 1 0</text>
<text top="749" left="518" width="16" height="21" font="1"></text>
<text top="781" left="518" width="16" height="21" font="1"></text>
<text top="792" left="518" width="16" height="21" font="1"></text>
<text top="803" left="518" width="16" height="21" font="1"></text>
<text top="793" left="780" width="30" height="22" font="1">(23)</text>
<text top="865" left="134" width="287" height="22" font="1">Similar lines of reasoning hold for Eq. (</text>
<text top="865" left="421" width="18" height="22" font="6">18</text>
<text top="865" left="439" width="10" height="22" font="1">).</text>
<text top="909" left="134" width="208" height="22" font="1">Our sampling matrix in Eq. (</text>
<text top="909" left="342" width="18" height="22" font="6">17</text>
<text top="909" left="360" width="77" height="22" font="1">) and Eq. (</text>
<text top="909" left="437" width="18" height="22" font="6">18</text>
<text top="909" left="455" width="356" height="22" font="1">) is sparse leading to less incoherency with sparse</text>
<text top="952" left="108" width="546" height="22" font="1">transforms such as wavelet transform which is used as sparse basis (Ref. [</text>
<text top="952" left="653" width="9" height="22" font="6">5</text>
<text top="952" left="662" width="148" height="22" font="1">]). But it still works</text>
<text top="996" left="108" width="297" height="22" font="1">well for CS because according to Eq. (</text>
<text top="996" left="405" width="18" height="22" font="6">10</text>
<text top="996" left="423" width="93" height="22" font="1">) and Ref. [</text>
<text top="996" left="516" width="9" height="22" font="6">5</text>
<text top="996" left="525" width="285" height="22" font="1">] if incoherence is less, we need more</text>
<text top="1039" left="108" width="703" height="22" font="1">samples to reconstruct signal with high probability. Since we are using 50% compression in CS,</text>
<text top="1109" left="450" width="18" height="22" font="1">19</text>
</page>
<page number="20" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="648" height="22" font="1">this matrix works well as shown by our experimental results. Our sampling matrix in Eq. (</text>
<text top="109" left="756" width="18" height="22" font="6">17</text>
<text top="109" left="774" width="36" height="22" font="1">) and</text>
<text top="152" left="108" width="40" height="22" font="1">Eq. (</text>
<text top="152" left="148" width="18" height="22" font="6">18</text>
<text top="152" left="166" width="158" height="22" font="1">) do not satisfy Eq. (</text>
<text top="152" left="324" width="9" height="22" font="6">2</text>
<text top="152" left="333" width="331" height="22" font="1">) also. We call our sampling matrix in Eq. (</text>
<text top="152" left="664" width="18" height="22" font="6">17</text>
<text top="152" left="682" width="84" height="22" font="1">) and Eq. (</text>
<text top="152" left="766" width="18" height="22" font="6">18</text>
<text top="152" left="783" width="27" height="22" font="1">) as</text>
<text top="196" left="108" width="703" height="22" font="1">front-end sampling matrix. We have to perform a transformation on front-end sampling matrix so</text>
<text top="239" left="108" width="146" height="22" font="1">that it satisfies Eq. (</text>
<text top="239" left="254" width="9" height="22" font="6">2</text>
<text top="239" left="263" width="548" height="22" font="1">). The matrix resulting from transformation is known as back-end sampling</text>
<text top="282" left="108" width="703" height="22" font="1">matrix. We use front-end sampling matrix because it is very easy to implement on sensor level.</text>
<text top="326" left="108" width="703" height="22" font="1">The transformation from front-end to back-end is very simple. We have to just multiply the front-</text>
<text top="369" left="108" width="703" height="22" font="1">end sampling matrix by a normalization constant. The normalization constant is simply the square</text>
<text top="413" left="108" width="488" height="22" font="1">root of the sum of squares of all the elements in a row of the matrix.</text>
<text top="502" left="396" width="13" height="18" font="1">Φ</text>
<text top="510" left="408" width="10" height="12" font="2">B</text>
<text top="502" left="424" width="14" height="18" font="1">=</text>
<text top="490" left="456" width="9" height="18" font="1">1</text>
<text top="501" left="445" width="15" height="21" font="1">√</text>
<text top="517" left="460" width="14" height="18" font="1">N</text>
<text top="502" left="481" width="31" height="21" font="1">× Φ</text>
<text top="510" left="512" width="8" height="12" font="2">F</text>
<text top="499" left="780" width="30" height="22" font="1">(24)</text>
<text top="562" left="134" width="426" height="22" font="1">where, N=Sum of squares of row elements of matrix.</text>
<text top="606" left="134" width="391" height="22" font="1">The back end sampling matrix generated from Eq. (</text>
<text top="606" left="525" width="18" height="22" font="6">24</text>
<text top="606" left="543" width="141" height="22" font="1">) will satisfy Eq. (</text>
<text top="606" left="684" width="9" height="22" font="6">2</text>
<text top="606" left="693" width="118" height="22" font="1">) and this trans-</text>
<text top="649" left="108" width="703" height="22" font="1">formation can be implemented in the reconstruction algorithm itself. Multiplication of this trans-</text>
<text top="692" left="108" width="703" height="22" font="1">formation constant with the compressively sampled image (using front end sampling matrix) is</text>
<text top="736" left="108" width="703" height="22" font="1">equivalent to sampling the image using back-end sampling matrix which is what is desired. Thus</text>
<text top="779" left="108" width="703" height="22" font="1">we use back-end sampling matrix as the sampling matrix in the reconstruction algorithm. Using</text>
<text top="822" left="108" width="543" height="22" font="1">the transformation we calculated our back-end sampling matrix as follows -</text>
<text top="918" left="290" width="13" height="18" font="1">Φ</text>
<text top="925" left="303" width="59" height="12" font="2">B,backend</text>
<text top="918" left="367" width="14" height="18" font="1">=</text>
<text top="871" left="386" width="16" height="21" font="1"></text>
<text top="903" left="386" width="16" height="21" font="1"></text>
<text top="913" left="386" width="16" height="21" font="1"></text>
<text top="925" left="386" width="16" height="21" font="1"></text>
<text top="901" left="402" width="18" height="18" font="1">1/</text>
<text top="885" left="419" width="15" height="21" font="1">√</text>
<text top="901" left="434" width="41" height="18" font="1">2 1/</text>
<text top="885" left="476" width="15" height="21" font="1">√</text>
<text top="901" left="491" width="9" height="18" font="1">2</text>
<text top="901" left="531" width="9" height="18" font="1">0</text>
<text top="901" left="587" width="9" height="18" font="1">0</text>
<text top="944" left="418" width="9" height="18" font="1">0</text>
<text top="944" left="474" width="9" height="18" font="1">0</text>
<text top="944" left="514" width="18" height="18" font="1">1/</text>
<text top="929" left="532" width="15" height="21" font="1">√</text>
<text top="944" left="547" width="41" height="18" font="1">2 1/</text>
<text top="929" left="588" width="15" height="21" font="1">√</text>
<text top="944" left="603" width="9" height="18" font="1">2</text>
<text top="871" left="612" width="16" height="21" font="1"></text>
<text top="903" left="612" width="16" height="21" font="1"></text>
<text top="913" left="612" width="16" height="21" font="1"></text>
<text top="925" left="612" width="16" height="21" font="1"></text>
<text top="915" left="780" width="30" height="22" font="1">(25)</text>
<text top="1030" left="287" width="13" height="18" font="1">Φ</text>
<text top="1038" left="300" width="70" height="12" font="2">N B,backend</text>
<text top="1030" left="376" width="14" height="18" font="1">=</text>
<text top="983" left="394" width="16" height="21" font="1"></text>
<text top="1015" left="394" width="16" height="21" font="1"></text>
<text top="1026" left="394" width="16" height="21" font="1"></text>
<text top="1037" left="394" width="16" height="21" font="1"></text>
<text top="1013" left="410" width="95" height="18" font="1">.7894 .6139</text>
<text top="1013" left="536" width="9" height="18" font="1">0</text>
<text top="1013" left="591" width="9" height="18" font="1">0</text>
<text top="1056" left="426" width="9" height="18" font="1">0</text>
<text top="1056" left="481" width="9" height="18" font="1">0</text>
<text top="1056" left="520" width="95" height="18" font="1">.7894 .6139</text>
<text top="983" left="615" width="16" height="21" font="1"></text>
<text top="1015" left="615" width="16" height="21" font="1"></text>
<text top="1026" left="615" width="16" height="21" font="1"></text>
<text top="1037" left="615" width="16" height="21" font="1"></text>
<text top="1027" left="780" width="30" height="22" font="1">(26)</text>
<text top="1109" left="450" width="18" height="22" font="1">20</text>
</page>
<page number="21" position="absolute" top="0" left="0" height="1188" width="918">
<text top="450" left="372" width="169" height="19" font="4">Fig 7 The set of 30 images.</text>
<text top="492" left="134" width="676" height="22" font="1">The level of lossy compression in JPEG is controlled using the quality parameter of MATLAB</text>
<text top="536" left="108" width="703" height="22" font="1">function. We have measured the size of this compressed image. The baseline for image size is</text>
<text top="579" left="108" width="703" height="22" font="1">taken as the size of JPEG image (quality = 75, bits = 8), i.e. raw image stored as JPEG with</text>
<text top="626" left="108" width="101" height="18" font="1">quality = 75</text>
<text top="622" left="214" width="596" height="22" font="1">and bitdepth = 8. The size of a compressively sampled image is reported as the</text>
<text top="666" left="108" width="703" height="22" font="1">relative percentage of this baseline. The baseline image for PSNR measurement is the raw image.</text>
<text top="709" left="108" width="304" height="22" font="1">The metrics for baseline is shown in Table</text>
<text top="709" left="416" width="9" height="22" font="6">1</text>
<text top="709" left="425" width="4" height="22" font="1">.</text>
<text top="753" left="134" width="676" height="22" font="1">We have used a set of 30 images to perform the above simulation. These images are shown</text>
<text top="796" left="108" width="48" height="22" font="1">in Fig.</text>
<text top="796" left="164" width="9" height="22" font="6">7</text>
<text top="796" left="173" width="440" height="24" font="1">. All the images are in Grayscale 512 × 512 format. In Fig.</text>
<text top="796" left="621" width="9" height="22" font="6">8</text>
<text top="796" left="636" width="175" height="22" font="1">we have shown how the</text>
<text top="839" left="108" width="703" height="22" font="1">average of the normalized size of the raw image stored in JPEG format scales with the Quality</text>
<text top="883" left="108" width="170" height="22" font="1">factor. Similarly in Fig.</text>
<text top="883" left="284" width="9" height="22" font="6">9</text>
<text top="883" left="298" width="513" height="22" font="1">we have shown how reconstruction performance of JPEG (measured as</text>
<text top="926" left="108" width="537" height="22" font="1">the average of PSNR of 30 images) varies with the Quality factor of JPEG.</text>
<text top="969" left="134" width="74" height="22" font="1">The Table</text>
<text top="969" left="214" width="9" height="22" font="6">2</text>
<text top="969" left="230" width="317" height="22" font="1">lists the results for system depicted in Fig.</text>
<text top="969" left="558" width="9" height="22" font="6">6</text>
<text top="969" left="573" width="237" height="22" font="1">for binary sampling matrix with</text>
<text top="1013" left="108" width="703" height="22" font="1">input parameters such as Quality factor of JPEG and Bitdepth of the image. The output values are</text>
<text top="1109" left="450" width="18" height="22" font="1">21</text>
</page>
<page number="22" position="absolute" top="0" left="0" height="1188" width="918">
<text top="499" left="249" width="414" height="19" font="4">Fig 8 Variation of Normalized Image Size with JPEG Quality factor.</text>
<text top="993" left="301" width="311" height="19" font="4">Fig 9 Variation of PSNR with JPEG Quality factor.</text>
<text top="1109" left="450" width="18" height="22" font="1">22</text>
</page>
<page number="23" position="absolute" top="0" left="0" height="1188" width="918">
<text top="455" left="289" width="20" height="22" font="1">(a)</text>
<text top="455" left="615" width="21" height="22" font="1">(b)</text>
<text top="495" left="153" width="608" height="19" font="4">Fig 10 (a) Best Case Reconstruction. PSNR = 39.71. (b) Worst Case Reconstruction. PSNR = 24.45.</text>
<text top="537" left="108" width="500" height="22" font="1">Normalized Size, PSNR for reconstruction and On-chip compression.</text>
<text top="626" left="288" width="24" height="18" font="1">On</text>
<text top="626" left="316" width="178" height="21" font="1">− chip Compression =</text>
<text top="614" left="501" width="24" height="18" font="1">(16</text>
<text top="614" left="530" width="94" height="21" font="1">− Bitdepth)</text>
<text top="639" left="554" width="18" height="18" font="1">16</text>
<text top="626" left="625" width="5" height="18" font="1">,</text>
<text top="623" left="780" width="30" height="22" font="1">(27)</text>
<text top="686" left="108" width="703" height="22" font="1">where, Bitdepth is the number of bits required to represent each pixel of compressively sampled</text>
<text top="730" left="108" width="703" height="22" font="1">image. Since each raw-pixel is 8 bits, and we are adding 2 pixels while doing CS, we are calculating</text>
<text top="773" left="108" width="338" height="22" font="1">on-chip compression relative to 16 bits in Eq. (</text>
<text top="773" left="446" width="18" height="22" font="6">27</text>
<text top="773" left="464" width="10" height="22" font="1">).</text>
<text top="816" left="134" width="116" height="22" font="1">Similarly, Table</text>
<text top="816" left="256" width="9" height="22" font="6">3</text>
<text top="816" left="271" width="539" height="22" font="1">shows the same for the non-binary matrix. The best case and worst case</text>
<text top="860" left="108" width="626" height="22" font="1">image reconstruction for the non-binary CS followed by lossless JPEG is shown in Fig.</text>
<text top="860" left="740" width="18" height="22" font="6">10</text>
<text top="860" left="758" width="4" height="22" font="1">.</text>
<text top="897" left="354" width="210" height="19" font="4">Table 1 Result for Baseline Image.</text>
<text top="943" left="202" width="90" height="18" font="1">ImageT ype</text>
<text top="943" left="310" width="60" height="18" font="1">Quality</text>
<text top="943" left="388" width="69" height="18" font="1">Bitdepth</text>
<text top="943" left="475" width="245" height="18" font="1">N ormalized Size P SN R(dB)</text>
<text top="972" left="221" width="53" height="18" font="1">JP EG</text>
<text top="969" left="331" width="18" height="22" font="1">75</text>
<text top="969" left="418" width="9" height="22" font="1">8</text>
<text top="969" left="529" width="27" height="22" font="1">100</text>
<text top="969" left="654" width="40" height="22" font="1">34.87</text>
<text top="1058" left="134" width="676" height="22" font="1">Since we are adding two 8 bit pixels for the binary sampling matrix, we need 9 bits to represent</text>
<text top="1109" left="450" width="18" height="22" font="1">23</text>
</page>
<page number="24" position="absolute" top="0" left="0" height="1188" width="918">
<text top="103" left="306" width="305" height="19" font="4">Table 2 Results for Binary Block Diagonal matrix.</text>
<text top="168" left="130" width="90" height="18" font="1">ImageT ype</text>
<text top="168" left="247" width="60" height="18" font="1">Quality</text>
<text top="168" left="326" width="69" height="18" font="1">Bitdepth</text>
<text top="168" left="413" width="287" height="18" font="1">N ormalized Size P SN R(dB) On</text>
<text top="167" left="704" width="194" height="21" font="1">− Chip Compression(%)</text>
<text top="197" left="121" width="53" height="18" font="1">JP EG</text>
<text top="194" left="179" width="39" height="22" font="1">+ CS</text>
<text top="204" left="218" width="10" height="12" font="2">B</text>
<text top="197" left="247" width="61" height="18" font="1">lossless</text>
<text top="194" left="356" width="9" height="22" font="1">9</text>
<text top="194" left="456" width="49" height="22" font="1">220.42</text>
<text top="194" left="591" width="40" height="22" font="1">32.45</text>
<text top="194" left="767" width="40" height="22" font="1">43.75</text>
<text top="226" left="121" width="53" height="18" font="1">JP EG</text>
<text top="223" left="179" width="39" height="22" font="1">+ CS</text>
<text top="233" left="218" width="10" height="12" font="2">B</text>
<text top="226" left="247" width="61" height="18" font="1">lossless</text>
<text top="223" left="356" width="9" height="22" font="1">8</text>
<text top="223" left="456" width="49" height="22" font="1">188.05</text>
<text top="223" left="591" width="40" height="22" font="1">32.43</text>
<text top="223" left="778" width="18" height="22" font="1">50</text>
<text top="255" left="121" width="53" height="18" font="1">JP EG</text>
<text top="252" left="179" width="39" height="22" font="1">+ CS</text>
<text top="262" left="218" width="10" height="12" font="2">B</text>
<text top="255" left="247" width="61" height="18" font="1">lossless</text>
<text top="252" left="356" width="9" height="22" font="1">7</text>
<text top="252" left="456" width="49" height="22" font="1">154.99</text>
<text top="252" left="591" width="40" height="22" font="1">32.37</text>
<text top="252" left="767" width="40" height="22" font="1">56.25</text>
<text top="284" left="121" width="53" height="18" font="1">JP EG</text>
<text top="281" left="179" width="39" height="22" font="1">+ CS</text>
<text top="291" left="218" width="10" height="12" font="2">B</text>
<text top="284" left="247" width="61" height="18" font="1">lossless</text>
<text top="281" left="356" width="9" height="22" font="1">6</text>
<text top="281" left="456" width="49" height="22" font="1">121.97</text>
<text top="281" left="591" width="40" height="22" font="1">32.19</text>
<text top="281" left="771" width="31" height="22" font="1">62.5</text>
<text top="313" left="121" width="53" height="18" font="1">JP EG</text>
<text top="310" left="179" width="39" height="22" font="1">+ CS</text>
<text top="320" left="218" width="10" height="12" font="2">B</text>
<text top="313" left="247" width="61" height="18" font="1">lossless</text>
<text top="310" left="356" width="9" height="22" font="1">5</text>
<text top="310" left="460" width="40" height="22" font="1">92.58</text>
<text top="310" left="591" width="40" height="22" font="1">31.58</text>
<text top="310" left="767" width="40" height="22" font="1">68.75</text>
<text top="342" left="121" width="53" height="18" font="1">JP EG</text>
<text top="339" left="179" width="39" height="22" font="1">+ CS</text>
<text top="349" left="218" width="10" height="12" font="2">B</text>
<text top="339" left="264" width="27" height="22" font="1">100</text>
<text top="339" left="356" width="9" height="22" font="1">9</text>
<text top="339" left="456" width="49" height="22" font="1">235.63</text>
<text top="339" left="591" width="40" height="22" font="1">32.45</text>
<text top="339" left="767" width="40" height="22" font="1">43.75</text>
<text top="371" left="121" width="53" height="18" font="1">JP EG</text>
<text top="368" left="179" width="39" height="22" font="1">+ CS</text>
<text top="378" left="218" width="10" height="12" font="2">B</text>
<text top="368" left="264" width="27" height="22" font="1">100</text>
<text top="368" left="356" width="9" height="22" font="1">8</text>
<text top="368" left="456" width="49" height="22" font="1">198.19</text>
<text top="368" left="591" width="40" height="22" font="1">32.44</text>
<text top="368" left="778" width="18" height="22" font="1">50</text>
<text top="400" left="121" width="53" height="18" font="1">JP EG</text>
<text top="397" left="179" width="39" height="22" font="1">+ CS</text>
<text top="407" left="218" width="10" height="12" font="2">B</text>
<text top="397" left="264" width="27" height="22" font="1">100</text>
<text top="397" left="356" width="9" height="22" font="1">7</text>
<text top="397" left="456" width="49" height="22" font="1">161.13</text>
<text top="397" left="591" width="40" height="22" font="1">32.30</text>
<text top="397" left="767" width="40" height="22" font="1">56.25</text>
<text top="429" left="121" width="53" height="18" font="1">JP EG</text>
<text top="426" left="179" width="39" height="22" font="1">+ CS</text>
<text top="436" left="218" width="10" height="12" font="2">B</text>
<text top="426" left="264" width="27" height="22" font="1">100</text>
<text top="426" left="356" width="9" height="22" font="1">6</text>
<text top="426" left="456" width="49" height="22" font="1">126.23</text>
<text top="426" left="591" width="40" height="22" font="1">31.93</text>
<text top="426" left="771" width="31" height="22" font="1">62.5</text>
<text top="458" left="121" width="53" height="18" font="1">JP EG</text>
<text top="455" left="179" width="39" height="22" font="1">+ CS</text>
<text top="465" left="218" width="10" height="12" font="2">B</text>
<text top="455" left="268" width="18" height="22" font="1">85</text>
<text top="455" left="356" width="9" height="22" font="1">9</text>
<text top="455" left="460" width="40" height="22" font="1">99.59</text>
<text top="455" left="591" width="40" height="22" font="1">31.70</text>
<text top="455" left="767" width="40" height="22" font="1">43.75</text>
<text top="487" left="121" width="53" height="18" font="1">JP EG</text>
<text top="484" left="179" width="39" height="22" font="1">+ CS</text>
<text top="494" left="218" width="10" height="12" font="2">B</text>
<text top="484" left="268" width="18" height="22" font="1">85</text>
<text top="484" left="356" width="9" height="22" font="1">8</text>
<text top="484" left="460" width="40" height="22" font="1">69.55</text>
<text top="484" left="591" width="40" height="22" font="1">30.87</text>
<text top="484" left="778" width="18" height="22" font="1">50</text>
<text top="517" left="121" width="53" height="18" font="1">JP EG</text>
<text top="514" left="179" width="39" height="22" font="1">+ CS</text>
<text top="524" left="218" width="10" height="12" font="2">B</text>
<text top="514" left="268" width="18" height="22" font="1">75</text>
<text top="514" left="356" width="9" height="22" font="1">9</text>
<text top="514" left="460" width="40" height="22" font="1">76.37</text>
<text top="514" left="591" width="40" height="22" font="1">31.12</text>
<text top="514" left="767" width="40" height="22" font="1">43.75</text>
<text top="545" left="121" width="53" height="18" font="1">JP EG</text>
<text top="542" left="179" width="39" height="22" font="1">+ CS</text>
<text top="553" left="218" width="10" height="12" font="2">B</text>
<text top="542" left="268" width="18" height="22" font="1">75</text>
<text top="542" left="356" width="9" height="22" font="1">8</text>
<text top="542" left="460" width="40" height="22" font="1">51.68</text>
<text top="542" left="591" width="40" height="22" font="1">30.02</text>
<text top="542" left="778" width="18" height="22" font="1">50</text>
<text top="574" left="123" width="53" height="18" font="1">JP EG</text>
<text top="571" left="176" width="39" height="22" font="1">+ CS</text>
<text top="582" left="216" width="10" height="12" font="2">B</text>
<text top="571" left="268" width="18" height="22" font="1">75</text>
<text top="571" left="356" width="9" height="22" font="1">7</text>
<text top="571" left="460" width="40" height="22" font="1">33.75</text>
<text top="571" left="591" width="40" height="22" font="1">28.64</text>
<text top="571" left="767" width="40" height="22" font="1">56.25</text>
<text top="603" left="121" width="53" height="18" font="1">JP EG</text>
<text top="600" left="179" width="39" height="22" font="1">+ CS</text>
<text top="610" left="218" width="10" height="12" font="2">B</text>
<text top="600" left="268" width="18" height="22" font="1">75</text>
<text top="600" left="356" width="9" height="22" font="1">6</text>
<text top="600" left="460" width="40" height="22" font="1">21.08</text>
<text top="600" left="591" width="40" height="22" font="1">27.11</text>
<text top="600" left="771" width="31" height="22" font="1">62.5</text>
<text top="632" left="121" width="53" height="18" font="1">JP EG</text>
<text top="629" left="179" width="39" height="22" font="1">+ CS</text>
<text top="639" left="218" width="10" height="12" font="2">B</text>
<text top="629" left="268" width="18" height="22" font="1">75</text>
<text top="629" left="356" width="9" height="22" font="1">5</text>
<text top="629" left="460" width="40" height="22" font="1">12.33</text>
<text top="629" left="591" width="40" height="22" font="1">25.45</text>
<text top="629" left="767" width="40" height="22" font="1">68.75</text>
<text top="662" left="121" width="53" height="18" font="1">JP EG</text>
<text top="658" left="179" width="39" height="22" font="1">+ CS</text>
<text top="669" left="218" width="10" height="12" font="2">B</text>
<text top="658" left="268" width="18" height="22" font="1">60</text>
<text top="658" left="356" width="9" height="22" font="1">9</text>
<text top="658" left="460" width="40" height="22" font="1">59.11</text>
<text top="658" left="591" width="40" height="22" font="1">30.42</text>
<text top="658" left="767" width="40" height="22" font="1">43.75</text>
<text top="691" left="121" width="53" height="18" font="1">JP EG</text>
<text top="688" left="179" width="39" height="22" font="1">+ CS</text>
<text top="698" left="218" width="10" height="12" font="2">B</text>
<text top="688" left="268" width="18" height="22" font="1">50</text>
<text top="688" left="356" width="9" height="22" font="1">9</text>
<text top="688" left="460" width="40" height="22" font="1">51.97</text>
<text top="688" left="591" width="40" height="22" font="1">30.03</text>
<text top="688" left="767" width="40" height="22" font="1">43.75</text>
<text top="721" left="121" width="53" height="18" font="1">JP EG</text>
<text top="717" left="179" width="39" height="22" font="1">+ CS</text>
<text top="728" left="218" width="10" height="12" font="2">B</text>
<text top="717" left="268" width="18" height="22" font="1">40</text>
<text top="717" left="356" width="9" height="22" font="1">9</text>
<text top="717" left="460" width="40" height="22" font="1">45.31</text>
<text top="717" left="591" width="40" height="22" font="1">29.61</text>
<text top="717" left="767" width="40" height="22" font="1">43.75</text>
<text top="750" left="121" width="53" height="18" font="1">JP EG</text>
<text top="747" left="179" width="39" height="22" font="1">+ CS</text>
<text top="757" left="218" width="10" height="12" font="2">B</text>
<text top="747" left="268" width="18" height="22" font="1">30</text>
<text top="747" left="356" width="9" height="22" font="1">9</text>
<text top="747" left="460" width="40" height="22" font="1">38.08</text>
<text top="747" left="591" width="40" height="22" font="1">29.05</text>
<text top="747" left="767" width="40" height="22" font="1">43.75</text>
<text top="779" left="121" width="53" height="18" font="1">JP EG</text>
<text top="776" left="179" width="39" height="22" font="1">+ CS</text>
<text top="787" left="218" width="10" height="12" font="2">B</text>
<text top="776" left="268" width="18" height="22" font="1">20</text>
<text top="776" left="356" width="9" height="22" font="1">9</text>
<text top="776" left="460" width="40" height="22" font="1">29.23</text>
<text top="776" left="591" width="40" height="22" font="1">28.21</text>
<text top="776" left="767" width="40" height="22" font="1">43.75</text>
<text top="846" left="108" width="703" height="22" font="1">the addition perfectly. For the non-binary matrix, we are using weights of 9 and 7 for each pixel.</text>
<text top="889" left="108" width="703" height="24" font="1">So the max value of weighted pixels can be 16 × 255. Hence we need 12 bits to represent the</text>
<text top="932" left="108" width="201" height="22" font="1">weighted addition perfectly.</text>
<text top="976" left="134" width="187" height="22" font="1">We can see from the Table</text>
<text top="976" left="325" width="9" height="22" font="6">2</text>
<text top="976" left="338" width="69" height="22" font="1">and Table</text>
<text top="976" left="411" width="9" height="22" font="6">3</text>
<text top="976" left="424" width="386" height="22" font="1">that the performance of the binary and non-binary ma-</text>
<text top="1019" left="108" width="703" height="22" font="1">trix for CS with lossless JPEG and without bit-truncation is almost the same. This is in agreement</text>
<text top="1062" left="108" width="227" height="22" font="1">with the results stated in Ref. [</text>
<text top="1062" left="335" width="9" height="22" font="6">5</text>
<text top="1062" left="344" width="466" height="22" font="1">]. We can also see that the storage size is very high for CS with</text>
<text top="1109" left="450" width="18" height="22" font="1">24</text>
</page>
<page number="25" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">lossless JPEG. This has the potential to degrade the performance of imaging system when comes</text>
<text top="152" left="108" width="703" height="22" font="1">to storage and we will need a much more complicated JPEG decoder. To decrease the size, we can</text>
<text top="196" left="108" width="703" height="22" font="1">either decrease quality or truncate LSB’s or both. By truncating LSB’s we not only decrease the</text>
<text top="239" left="108" width="703" height="22" font="1">size of the image but also significantly simplify ADC design as well as JPEG encoder and decoder</text>
<text top="282" left="108" width="703" height="22" font="1">design. This simplified decoder will also consume less energy because of reduced switching activ-</text>
<text top="326" left="108" width="703" height="22" font="1">ity resulting from reduced bitwidth. Similarly we can also decrease the quality factor to decrease</text>
<text top="369" left="108" width="703" height="22" font="1">the size. For example, if we use default Quality factor i.e. 75 we can see that performance loss is</text>
<text top="413" left="108" width="248" height="22" font="1">not much but size is much smaller.</text>
<text top="456" left="134" width="676" height="22" font="1">In general, for a given quality factor, the non-binary matrix performs quite better than the</text>
<text top="499" left="108" width="703" height="22" font="1">binary matrix. This is because it can preserve much more information than binary matrix because</text>
<text top="543" left="108" width="703" height="22" font="1">of larger bitwidth. This makes it more resilient to degradation during JPEG quantization step.</text>
<text top="586" left="108" width="337" height="22" font="1">This is also evident in the graph shown in Fig.</text>
<text top="586" left="452" width="18" height="22" font="6">11</text>
<text top="586" left="475" width="335" height="22" font="1">where none of the LSB’s have been truncated.</text>
<text top="629" left="108" width="703" height="22" font="1">The better PSNR for non-binary sampling matrix comes at the cost of increased image size. A</text>
<text top="673" left="108" width="703" height="22" font="1">comparison between the normalized image-size resulting binary and non-binary sampling matrix</text>
<text top="716" left="108" width="493" height="22" font="1">for bitdepth = 9 and bitdepth = 12 respectively is shown in Fig.</text>
<text top="716" left="607" width="18" height="22" font="6">12</text>
<text top="716" left="625" width="185" height="22" font="1">. By pruning some LSB’s</text>
<text top="760" left="108" width="703" height="22" font="1">we can decrease image size at the cost of the PSNR of reconstructed image. Thus the non-binary</text>
<text top="803" left="108" width="637" height="22" font="1">sampling matrix offers more control over image quality than the binary sampling matrix.</text>
<text top="846" left="134" width="205" height="22" font="1">We can also see from Table</text>
<text top="846" left="345" width="9" height="22" font="6">2</text>
<text top="846" left="360" width="71" height="22" font="1">and Table</text>
<text top="846" left="438" width="9" height="22" font="6">3</text>
<text top="846" left="453" width="357" height="22" font="1">that for a given quality factor as we truncate the</text>
<text top="890" left="108" width="703" height="22" font="1">LSB’s of CS sampled image in the non-binary sampling method, the result approaches that of the</text>
<text top="933" left="108" width="703" height="22" font="1">binary sampling method i.e. the performance of the non-binary matrix almost equals that of the</text>
<text top="976" left="108" width="703" height="22" font="1">binary matrix for same bitdepth. For the maximum performance case i.e. CS with lossless JPEG,</text>
<text top="1020" left="108" width="703" height="22" font="1">the performance of both sampling matrix is same for full bitdepth for each case respectively. While</text>
<text top="1063" left="108" width="703" height="22" font="1">the result for maximum performance case for CS is roughly 2dB less than the basline JPEG case</text>
<text top="1109" left="450" width="18" height="22" font="1">25</text>
</page>
<page number="26" position="absolute" top="0" left="0" height="1188" width="918">
<text top="490" left="108" width="703" height="19" font="4">Fig 11 Graph showing PSNR of image reconstruction for binary and non-binary matrix cases vs JPEG Quality. LSB’s</text>
<text top="512" left="108" width="146" height="18" font="4">have not been truncated.</text>
<text top="984" left="108" width="703" height="19" font="4">Fig 12 Graph showing normalized image-size binary and non-binary matrix cases vs JPEG Quality. LSB’s have not</text>
<text top="1006" left="108" width="91" height="18" font="4">been truncated.</text>
<text top="1109" left="450" width="18" height="22" font="1">26</text>
</page>
<page number="27" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="60" height="22" font="1">of Table</text>
<text top="109" left="173" width="9" height="22" font="6">1</text>
<text top="109" left="182" width="628" height="22" font="1">, the former provides roughly 43% raw data compression but the latter provides none.</text>
<text top="152" left="108" width="703" height="22" font="1">Reduction in raw data rate will significantly simplify our system design. This is discussed in our</text>
<text top="196" left="108" width="90" height="22" font="1">next section.</text>
<text top="239" left="134" width="676" height="22" font="1">These were the simulations for gray-scale images. For colored images the procedure is straight-</text>
<text top="282" left="108" width="703" height="22" font="1">forward. In the case of RGB image, the three different color planes can be thought of as three</text>
<text top="326" left="108" width="703" height="22" font="1">different images and CS can be applied to each of the 3 images. The reconstruction performance</text>
<text top="369" left="108" width="336" height="22" font="1">for colored Lenna image is mentioned in Table</text>
<text top="369" left="448" width="9" height="22" font="6">4</text>
<text top="369" left="457" width="4" height="22" font="1">.</text>
<text top="413" left="134" width="676" height="22" font="1">The next section will discuss the novel implementation of front-end sampling matrix on image</text>
<text top="456" left="108" width="89" height="22" font="1">sensor level.</text>
<text top="519" left="108" width="72" height="23" font="1">4 Design</text>
<text top="573" left="108" width="703" height="22" font="1">This section discusses the novel sensor level design to implement front-end sampling matrix pre-</text>
<text top="616" left="108" width="643" height="22" font="1">sented in the previous section. It also discusses briefly about the ADC and JPEG encoder.</text>
<text top="659" left="134" width="676" height="22" font="1">When comes to hardware implementation, binary block diagonal matrix means an addition of</text>
<text top="703" left="108" width="703" height="22" font="1">the row or column pixels. The number of pixels to be added is the number of ones in the row of</text>
<text top="746" left="108" width="703" height="22" font="1">sampling matrix. For our binary sampling matrix, we can simply implement this by using double</text>
<text top="789" left="108" width="703" height="22" font="1">sized pixels. We can choose any pixel design i.e. 3T or 4T. Large pixels have better SNR values</text>
<text top="833" left="108" width="608" height="22" font="1">because dark current decreases much faster than sensitivity as area increases (Ref. [</text>
<text top="833" left="716" width="18" height="22" font="6">24</text>
<text top="833" left="734" width="76" height="22" font="1">]). Even if</text>
<text top="876" left="108" width="703" height="22" font="1">noise is larger in smaller pixels, it is taken care of by using Correlated Double Sampling technique.</text>
<text top="920" left="108" width="703" height="22" font="1">So the higher noise level of smaller pixel is not much of an issue. If we use a large photodiode</text>
<text top="963" left="108" width="703" height="22" font="1">to implement binary sampling matrix, it means increase in the fill-factor of pixel. If fill factor for</text>
<text top="1006" left="108" width="703" height="22" font="1">a given pixel design is f then using a double sized photodiode will roughly give 2f/(1 + f) fill</text>
<text top="1109" left="450" width="18" height="22" font="1">27</text>
</page>
<page number="28" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">factor. For f = 0.7 we get a rough approximation for new factor as f = 0.82. This increased fill</text>
<text top="152" left="108" width="454" height="22" font="1">factor can compensate the loss due to reconstruction algorithm.</text>
<text top="196" left="134" width="676" height="22" font="1">The non-binary block diagonal matrix has to perform weighted addition. This can be done</text>
<text top="239" left="108" width="298" height="22" font="1">by using our novel design shown in Fig.</text>
<text top="239" left="416" width="18" height="22" font="6">13</text>
<text top="239" left="434" width="376" height="22" font="1">. This is inspired by the 4T design. We have used</text>
<text top="282" left="108" width="703" height="22" font="1">a very simple technique to perform weighted addition. We have used a small capacitance (gate</text>
<text top="326" left="108" width="703" height="22" font="1">capacitance of MOS) to decrease response of one of the photodiode by placing it before the shutter</text>
<text top="369" left="108" width="377" height="22" font="1">or Tx Transistor. This MOS is labeled as cap in Fig.</text>
<text top="369" left="491" width="18" height="22" font="6">13</text>
<text top="369" left="509" width="301" height="22" font="1">. This effectively decreases the sensitivity</text>
<text top="413" left="108" width="703" height="22" font="1">of the photodiode and it generates less output ( output of a photodiode is actually a decrease in</text>
<text top="456" left="108" width="703" height="22" font="1">the output voltage w.r.t. reset voltage level of photodiode because photocurrent flows to discharge</text>
<text top="499" left="108" width="703" height="22" font="1">the junction capacitance of photodiode) as compared to the other photodiode without additional</text>
<text top="543" left="108" width="703" height="22" font="1">capacitance. So if the same amount of light falls in both photodiode then one photodiode will</text>
<text top="586" left="108" width="703" height="22" font="1">generate less output voltage than the other. When the shutter MOS (i.e. Tx 1 and Tx 2) opens, then</text>
<text top="629" left="108" width="703" height="22" font="1">current drains from the floating diffusion node to the photodiode. Since one photodiode has less</text>
<text top="673" left="108" width="703" height="22" font="1">voltage than other so one will draw less current than other. This is because our circuit is operated</text>
<text top="716" left="108" width="703" height="22" font="1">in transient state rather than steady state. The shutter open time is set such that the circuit remains</text>
<text top="760" left="108" width="703" height="22" font="1">in transient state. Since both the currents are unequal, the resulting voltage at the floating diffusion</text>
<text top="803" left="108" width="703" height="22" font="1">node i.e. FD is like weighted addition of two equal signals. For the non-binary sampling matrix,</text>
<text top="846" left="108" width="703" height="22" font="1">we used weights of 9 and 7. So, the relative weight of one pixel w.r.t. to another is approximately</text>
<text top="893" left="108" width="62" height="18" font="1">1.3(9/7)</text>
<text top="890" left="170" width="203" height="22" font="1">. The circuit depicted in Fig.</text>
<text top="890" left="379" width="18" height="22" font="6">13</text>
<text top="890" left="401" width="409" height="22" font="1">also achieves approximately the same weight. Since even</text>
<text top="933" left="108" width="703" height="22" font="1">after truncating some LSB’s we can get good images, the weighted addition does not have to be</text>
<text top="976" left="108" width="703" height="22" font="1">very exact as the errors will get truncated too. The Spectre simulation results for the circuit are</text>
<text top="1020" left="108" width="103" height="22" font="1">stated in Table</text>
<text top="1020" left="215" width="9" height="22" font="6">5</text>
<text top="1020" left="224" width="586" height="22" font="1">. The weight has been calculated in the table keeping CDS technique in mind. The</text>
<text top="1063" left="108" width="703" height="22" font="1">weight has been calculated by curve fitting for 100 different points. For generating these points,</text>
<text top="1109" left="450" width="18" height="22" font="1">28</text>
</page>
<page number="29" position="absolute" top="0" left="0" height="1188" width="918">
<text top="429" left="280" width="354" height="19" font="4">Fig 13 Schematic design for on-pixel compressed sensing.</text>
<text top="471" left="108" width="703" height="22" font="1">the photocurrent in each photodiode was varied from 100fA to 1000fA in steps of 100fA. This</text>
<text top="514" left="108" width="703" height="22" font="1">generates 10 points for each photodiode. Then all possible permutations of these 2 sets (one set for</text>
<text top="558" left="108" width="557" height="22" font="1">each photodiode) of 10 points were taken to generate 100 different points. Fig.</text>
<text top="558" left="670" width="18" height="22" font="6">14</text>
<text top="558" left="691" width="119" height="22" font="1">shows the sweep</text>
<text top="601" left="108" width="568" height="22" font="1">analysis performed for these 100 points (offset voltage has been removed). Fig.</text>
<text top="601" left="681" width="18" height="22" font="6">15</text>
<text top="601" left="703" width="107" height="22" font="1">shows a plot to</text>
<text top="645" left="108" width="703" height="22" font="1">demonstrate weighted addition of photodiode outputs. The curves in the plot represents the output</text>
<text top="688" left="108" width="703" height="22" font="1">voltage values for the proposed pixel circuit for 2 different cases. In each case, the photocurrent</text>
<text top="731" left="108" width="703" height="22" font="1">of one of the photodiode is fixed at 100fA and other one is varied form 100fA to 100fA in steps</text>
<text top="775" left="108" width="703" height="22" font="1">of 100fA. Thus, for a given current value in x-axis of the plot, total charge generated in the pixel</text>
<text top="818" left="108" width="703" height="22" font="1">will be same. But, the output of pixel is different for both cases because of weighted addition of</text>
<text top="861" left="108" width="136" height="22" font="1">photodiode output.</text>
<text top="905" left="134" width="676" height="22" font="1">Addition of capacitor in one of the photodiode results in a decrease on sensitivity. In traditional</text>
<text top="948" left="108" width="703" height="22" font="1">designs, a decrease of sensitivity implies a loss of resolution, but in our design reconstruction</text>
<text top="992" left="108" width="315" height="22" font="1">algorithms help us recover this information.</text>
<text top="1035" left="134" width="676" height="22" font="1">If we are truncating the bits, we are significantly simplifying ADC design too. Bit truncation in</text>
<text top="1109" left="450" width="18" height="22" font="1">29</text>
</page>
<page number="30" position="absolute" top="0" left="0" height="1188" width="918">
<text top="501" left="296" width="322" height="19" font="4">Fig 14 Sweep analysis for our proposed pixel circuit.</text>
<text top="947" left="108" width="703" height="19" font="4">Fig 15 Plot showing weighted addition of photodiode outputs. For each curve, photocurrent in one of the photodiode</text>
<text top="969" left="108" width="703" height="18" font="4">is fixed at 100fA while the other one is varied from 100fA to 1000fA in steps of 100fA. Each point in x-axis represents</text>
<text top="991" left="108" width="696" height="18" font="4">same amount of charge generated in the pixel but output is different due to weighted addition of photodiode outputs.</text>
<text top="1109" left="450" width="18" height="22" font="1">30</text>
</page>
<page number="31" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">the simulation can be implemented in hardware by decreasing the ADC resolution. This will result</text>
<text top="152" left="108" width="703" height="22" font="1">in a simpler and power efficient ADC. Since at lower resolutions noise and linearity requirements</text>
<text top="196" left="108" width="703" height="22" font="1">are relaxed, voltage scaling can help us achieve an exponential reduction in power consumption</text>
<text top="239" left="108" width="48" height="22" font="1">(Ref. [</text>
<text top="239" left="155" width="18" height="22" font="6">27</text>
<text top="239" left="173" width="637" height="22" font="1">]). Since ADC is responsible for a major chunk of power consumption during the process</text>
<text top="282" left="108" width="238" height="22" font="1">of raw image acquisition (Ref. [</text>
<text top="282" left="346" width="9" height="22" font="6">1</text>
<text top="282" left="354" width="4" height="22" font="1">,</text>
<text top="282" left="362" width="18" height="22" font="6">28</text>
<text top="282" left="380" width="430" height="22" font="1">]), our technique will have a significant impact in reducing</text>
<text top="326" left="108" width="173" height="22" font="1">the power consumption.</text>
<text top="369" left="134" width="676" height="22" font="1">We have designed our pixel for both Front Side Illumination and Backside Illumination (BSI)</text>
<text top="413" left="108" width="50" height="22" font="1">(Ref. [</text>
<text top="413" left="157" width="18" height="22" font="6">29</text>
<text top="413" left="175" width="219" height="22" font="1">]). The FSI layout for the Fig.</text>
<text top="413" left="402" width="18" height="22" font="6">13</text>
<text top="413" left="425" width="167" height="22" font="1">circuit is shown in Fig.</text>
<text top="413" left="599" width="18" height="22" font="6">16</text>
<text top="413" left="617" width="194" height="22" font="1">. In FSI layout light enters</text>
<text top="456" left="108" width="703" height="22" font="1">from the frontside of the sensor where as in BSI it enters from the backside. This means in BSI we</text>
<text top="499" left="108" width="703" height="22" font="1">can draw metal lines over photodiode and increase fill factor. There are two different technologies</text>
<text top="543" left="108" width="230" height="22" font="1">in BSI which are shown in Fig.</text>
<text top="543" left="346" width="18" height="22" font="6">17</text>
<text top="543" left="364" width="388" height="22" font="1">. They are conventional BSI and stacked BSI (Ref. [</text>
<text top="543" left="752" width="18" height="22" font="6">29</text>
<text top="543" left="770" width="40" height="22" font="1">]). In</text>
<text top="586" left="108" width="703" height="22" font="1">conventional BSI, the logic circuit and the pixel circuit are in the same plane. Metal wiring can be</text>
<text top="629" left="108" width="703" height="22" font="1">drawn over pixel circuit as light enters from backside. This results in an increase of the fill factor.</text>
<text top="673" left="108" width="703" height="22" font="1">In stacked BSI, the logic circuit and pixels are in different planes. This means the fill factor is</text>
<text top="716" left="108" width="703" height="22" font="1">almost 100% for stacked BSI. The layout for conventional BSI and stacked BSI for our novel pixel</text>
<text top="760" left="108" width="162" height="22" font="1">circuit is given in Fig.</text>
<text top="760" left="278" width="18" height="22" font="6">18</text>
<text top="760" left="301" width="60" height="22" font="1">and Fig.</text>
<text top="760" left="370" width="18" height="22" font="6">19</text>
<text top="760" left="388" width="422" height="22" font="1">. We used TSMC 200nm technology library and Cadence</text>
<text top="803" left="108" width="703" height="22" font="1">Design tools to implement our design. The advantages associated with on-chip implementation of</text>
<text top="846" left="108" width="645" height="22" font="1">CS does not depend on the technology of choice. It works equally well in any technology.</text>
<text top="890" left="134" width="676" height="22" font="1">The junction capacitance, responsivity and dark current for the photodiode used in our pixel</text>
<text top="933" left="108" width="441" height="22" font="1">was estimated using the data and graphs presented in Ref. [</text>
<text top="933" left="549" width="18" height="22" font="6">24</text>
<text top="933" left="567" width="89" height="22" font="1">] and Ref. [</text>
<text top="933" left="656" width="18" height="22" font="6">23</text>
<text top="933" left="673" width="137" height="22" font="1">]. The formula for</text>
<text top="1109" left="450" width="18" height="22" font="1">31</text>
</page>
<page number="32" position="absolute" top="0" left="0" height="1188" width="918">
<text top="431" left="218" width="478" height="19" font="4">Fig 16 Proposed FSI Pixel Layout to implement on-chip compressed sampling.</text>
<text top="788" left="159" width="596" height="19" font="4">Fig 17 A schematic diagram explaining different Back-illuminated CMOS Image Sensor (BI-CIS).</text>
<text top="1061" left="295" width="324" height="19" font="4">Fig 18 Proposed Conventional BSI Layout for pixels.</text>
<text top="1109" left="450" width="18" height="22" font="1">32</text>
</page>
<page number="33" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="8" size="6" family="Times" color="#000000"/>
<text top="429" left="311" width="292" height="19" font="4">Fig 19 Proposed Stacked BSI Layout for pixels.</text>
<text top="471" left="108" width="258" height="22" font="1">junction capacitance is given below,</text>
<text top="561" left="324" width="13" height="18" font="1">C</text>
<text top="568" left="337" width="25" height="12" font="2">jdep</text>
<text top="561" left="367" width="14" height="18" font="1">=</text>
<text top="549" left="399" width="13" height="18" font="1">C</text>
<text top="556" left="411" width="14" height="12" font="2">J0</text>
<text top="549" left="426" width="13" height="18" font="1">A</text>
<text top="556" left="439" width="10" height="12" font="2">D</text>
<text top="575" left="388" width="9" height="18" font="1">1</text>
<text top="574" left="401" width="25" height="21" font="1">− (</text>
<text top="572" left="427" width="7" height="12" font="2">V</text>
<text top="576" left="435" width="6" height="9" font="8">d</text>
<text top="585" left="428" width="6" height="12" font="2">v</text>
<text top="590" left="434" width="5" height="9" font="8">j</text>
<text top="575" left="443" width="7" height="18" font="1">)</text>
<text top="574" left="450" width="11" height="12" font="2">m</text>
<text top="561" left="467" width="14" height="18" font="1">+</text>
<text top="549" left="506" width="13" height="18" font="1">C</text>
<text top="556" left="519" width="29" height="12" font="2">J0sw</text>
<text top="549" left="549" width="11" height="18" font="1">P</text>
<text top="556" left="561" width="10" height="12" font="2">D</text>
<text top="575" left="487" width="9" height="18" font="1">1</text>
<text top="574" left="500" width="25" height="21" font="1">− (</text>
<text top="572" left="532" width="7" height="12" font="2">V</text>
<text top="576" left="540" width="6" height="9" font="8">d</text>
<text top="585" left="526" width="6" height="12" font="2">v</text>
<text top="590" left="532" width="18" height="9" font="8">jsw</text>
<text top="575" left="554" width="7" height="18" font="1">)</text>
<text top="574" left="560" width="11" height="12" font="2">m</text>
<text top="578" left="572" width="18" height="9" font="8">jsw</text>
<text top="558" left="780" width="30" height="22" font="1">(28)</text>
<text top="621" left="134" width="61" height="22" font="1">where C</text>
<text top="631" left="195" width="14" height="12" font="2">J0</text>
<text top="621" left="215" width="43" height="22" font="1">and C</text>
<text top="631" left="259" width="29" height="12" font="2">J0sw</text>
<text top="621" left="294" width="516" height="22" font="1">represent zero-bias capacitance at the bottom and sidewall components,</text>
<text top="667" left="108" width="10" height="18" font="1">V</text>
<text top="674" left="118" width="7" height="12" font="2">d</text>
<text top="664" left="132" width="319" height="22" font="1">is the voltage applied to the photodiode, v</text>
<text top="674" left="451" width="5" height="12" font="2">j</text>
<text top="664" left="465" width="41" height="22" font="1">and v</text>
<text top="674" left="506" width="21" height="12" font="2">jsw</text>
<text top="664" left="535" width="275" height="22" font="1">stand for the built-in potential of the</text>
<text top="707" left="108" width="342" height="22" font="1">bottom and the sidewall respectively, m and m</text>
<text top="718" left="450" width="21" height="12" font="2">jsw</text>
<text top="707" left="477" width="333" height="22" font="1">are the grading coefficients of the bottom and</text>
<text top="751" left="108" width="116" height="22" font="1">the sidewalls, A</text>
<text top="761" left="223" width="10" height="12" font="2">D</text>
<text top="751" left="240" width="198" height="22" font="1">is the photodiode area in m</text>
<text top="752" left="438" width="6" height="12" font="2">2</text>
<text top="751" left="450" width="42" height="22" font="1">and P</text>
<text top="761" left="492" width="10" height="12" font="2">D</text>
<text top="751" left="508" width="302" height="22" font="1">represents the photodiode perimeter in m.</text>
<text top="794" left="108" width="286" height="22" font="1">These parameters are given in the Table</text>
<text top="794" left="398" width="9" height="22" font="6">6</text>
<text top="794" left="412" width="398" height="22" font="1">for our design. The table also lists the fill factor for our</text>
<text top="837" left="108" width="49" height="22" font="1">layout.</text>
<text top="881" left="134" width="676" height="22" font="1">A problem with our pixel design is that it is non-linear. Switching transistor, source follower,</text>
<text top="924" left="108" width="703" height="22" font="1">active capacitances, all contribute to non-linearity. This non-linearity can be removed by curve</text>
<text top="968" left="108" width="703" height="22" font="1">fitting. In an actual system a lookup table can be used to simplify implementation. The equation</text>
<text top="1109" left="450" width="18" height="22" font="1">33</text>
</page>
<page number="34" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="351" height="22" font="1">obtained after curve fitting is reproduced below -</text>
<text top="223" left="174" width="114" height="18" font="1">output = 1.037</text>
<text top="223" left="292" width="104" height="21" font="1">− (3.324 × 10</text>
<text top="220" left="396" width="16" height="14" font="2">−5</text>
<text top="223" left="413" width="24" height="18" font="1">)p2</text>
<text top="223" left="441" width="104" height="21" font="1">− (4.065 × 10</text>
<text top="220" left="546" width="16" height="14" font="2">−5</text>
<text top="223" left="563" width="24" height="18" font="1">)p1</text>
<text top="223" left="591" width="104" height="21" font="1">− (1.678 × 10</text>
<text top="220" left="695" width="16" height="14" font="2">−9</text>
<text top="223" left="712" width="24" height="18" font="1">)p2</text>
<text top="220" left="737" width="6" height="12" font="2">2</text>
<text top="271" left="432" width="92" height="21" font="1">−(3.88 × 10</text>
<text top="268" left="523" width="16" height="14" font="2">−9</text>
<text top="271" left="540" width="42" height="18" font="1">)p1p2</text>
<text top="271" left="586" width="104" height="21" font="1">− (2.564 × 10</text>
<text top="268" left="691" width="16" height="14" font="2">−9</text>
<text top="271" left="708" width="24" height="18" font="1">)p1</text>
<text top="268" left="732" width="6" height="12" font="2">2</text>
<text top="271" left="739" width="5" height="18" font="1">,</text>
<text top="240" left="780" width="30" height="22" font="1">(29)</text>
<text top="331" left="134" width="676" height="22" font="1">where p1 and p2 refers to photocurrent in photodiode 1 and photodiode 2 respectively in fA</text>
<text top="374" left="108" width="489" height="22" font="1">and output refers to output voltage in V of the pixel shown in Fig.</text>
<text top="374" left="606" width="18" height="22" font="6">13</text>
<text top="374" left="624" width="186" height="22" font="1">. The weight for wighted</text>
<text top="418" left="108" width="543" height="22" font="1">addition has been calculated by taking the ratio of coefficients of p1 and p2.</text>
<text top="461" left="134" width="676" height="22" font="1">Our system design methodology simplifies JPEG encoder and decoder design as well. JPEG</text>
<text top="504" left="108" width="703" height="24" font="1">generally takes DCT of image blocks of size 8 × 8. Since we are combining two pixels to one we</text>
<text top="548" left="108" width="703" height="22" font="1">are effectively reducing the number of blocks by half. This will cut energy spent during encoding</text>
<text top="591" left="108" width="703" height="22" font="1">by half. Since the encoder design is mostly pipelined, it will also reduce encoding latency by half.</text>
<text top="634" left="108" width="703" height="22" font="1">Since workload is reduced one can reduce the voltage and frequency of operation of JPEG encoder</text>
<text top="678" left="108" width="703" height="22" font="1">to maintain same latency. This will result in an exponential decrease in energy consumption during</text>
<text top="721" left="108" width="703" height="22" font="1">encoding and decoding process. If we truncate the LSB’s of image this will lead to additional</text>
<text top="765" left="108" width="703" height="22" font="1">simplification of encoder and decoder design and power savings. It leads to a proportional decrease</text>
<text top="808" left="108" width="703" height="22" font="1">in switching activity and hence dynamic power. It reduces register as well as arithmetic unit</text>
<text top="851" left="108" width="703" height="22" font="1">bitwidth. Reduction in bitwidth of arithmetic unit can lead to a direct reduction in latency of</text>
<text top="895" left="108" width="243" height="22" font="1">such units and the chip floor-area.</text>
<text top="938" left="134" width="676" height="22" font="1">Other implementations for both the binary and non-binary sampling matrix is also possible.</text>
<text top="981" left="108" width="670" height="22" font="1">For implementing the binary sampling matrix we can also use the design presented in Fig.</text>
<text top="981" left="788" width="18" height="22" font="6">13</text>
<text top="981" left="806" width="4" height="22" font="1">.</text>
<text top="1025" left="108" width="703" height="22" font="1">We can remove the cap MOS from the circuit to do so. This design will be especially useful</text>
<text top="1109" left="450" width="18" height="22" font="1">34</text>
</page>
<page number="35" position="absolute" top="0" left="0" height="1188" width="918">
<text top="352" left="396" width="126" height="19" font="4">Fig 20 Bayer Pattern</text>
<text top="394" left="108" width="703" height="22" font="1">when we have two photodiodes separated apart, as in colored image sensor implemented using</text>
<text top="438" left="108" width="217" height="22" font="1">popular Bayer Pattern (Ref. [</text>
<text top="438" left="324" width="18" height="22" font="6">30</text>
<text top="438" left="342" width="181" height="22" font="1">]). This is shown in Fig.</text>
<text top="438" left="532" width="18" height="22" font="6">20</text>
<text top="438" left="550" width="260" height="22" font="1">. One can see that each photodiode</text>
<text top="481" left="108" width="703" height="22" font="1">representing a color have to be separated apart. It might not be possible to make large single color</text>
<text top="524" left="108" width="616" height="22" font="1">photodiode because of resolution reasons. Hence we can use design presented in Fig.</text>
<text top="524" left="730" width="18" height="22" font="6">13</text>
<text top="524" left="753" width="58" height="22" font="1">for both</text>
<text top="568" left="108" width="466" height="22" font="1">the non-binary matrix as well as binary matrix (i.e. without cap).</text>
<text top="611" left="134" width="729" height="22" font="1">While the theoretical assumption is that all source followers or photodiode provide same gain/response,</text>
<text top="655" left="108" width="703" height="22" font="1">this is hardly the case practically. Because of manufacturing inconsistencies, the two photodiodes</text>
<text top="698" left="108" width="703" height="22" font="1">will have different responses and parasitics. So the binary matrix will become non-binary in actual</text>
<text top="741" left="108" width="703" height="22" font="1">implementation. This will not pose any problem because non-binary matrix works equally well.</text>
<text top="785" left="108" width="703" height="22" font="1">By incorporating such inconsistencies further into the sampling matrix, we can solve problems</text>
<text top="828" left="108" width="703" height="22" font="1">posed by fixed pattern noise during the reconstruction. There are multiple sources for fixed pat-</text>
<text top="872" left="108" width="703" height="22" font="1">tern noise. Photoresponse non-uniformity, source follower mismatch etc. are sources of mismatch</text>
<text top="915" left="108" width="50" height="22" font="1">(Ref. [</text>
<text top="915" left="157" width="18" height="22" font="6">31</text>
<text top="915" left="175" width="635" height="22" font="1">]). We can handle this mismatch by incorporating the mismatch in the sampling matrix.</text>
<text top="958" left="108" width="703" height="22" font="1">If all source followers or photodiodes provide different gain/response then we can use different</text>
<text top="1002" left="108" width="703" height="22" font="1">weights for our sampling matrix for each of the pixels. If we truncate some LSB’s, then we do not</text>
<text top="1045" left="108" width="703" height="22" font="1">need incorporate mismatch also as long as noise is less than or equal to the LSB’s truncated. This</text>
<text top="1109" left="450" width="18" height="22" font="1">35</text>
</page>
<page number="36" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="22" font="1">is because noise will be truncated with the LSB’s. For CMOS image sensor design presented in</text>
<text top="152" left="108" width="45" height="22" font="1">Ref. [</text>
<text top="152" left="153" width="18" height="22" font="6">28</text>
<text top="152" left="171" width="640" height="22" font="1">], the FPN noise is less than 1 LSB. So if we implement CS with bit truncation in such</text>
<text top="196" left="108" width="434" height="22" font="1">system, we can get rid of the noise by truncating just 1 LSB.</text>
<text top="239" left="134" width="676" height="22" font="1">Yet another way to implement binary or non-binary matrix is to sum the pixels at Analog to</text>
<text top="282" left="108" width="501" height="22" font="1">Digital Converter (ADC) level, similar to what was presented in Ref. [</text>
<text top="282" left="609" width="9" height="22" font="6">1</text>
<text top="282" left="618" width="192" height="22" font="1">]. This has an advantage of</text>
<text top="326" left="108" width="703" height="22" font="1">having an option to choose between CS mode and non-CS mode of operation. But one has to pass</text>
<text top="369" left="108" width="703" height="22" font="1">address for each pixel. This will slow down frame rate and increase power consumption. There</text>
<text top="413" left="108" width="703" height="22" font="1">are certain additional disadvantages associated with it which are discussed later in the paragraph</text>
<text top="456" left="108" width="47" height="22" font="1">below.</text>
<text top="499" left="134" width="676" height="22" font="1">The advantage of CS implemented at the sensor level is not just limited to reduction of data rate</text>
<text top="543" left="108" width="294" height="22" font="1">only. Our implementation shown in Fig.</text>
<text top="543" left="409" width="18" height="22" font="6">13</text>
<text top="543" left="432" width="378" height="22" font="1">for the non-binary matrix requires only 6 transistors</text>
<text top="586" left="108" width="703" height="22" font="1">(excluding floating diffusion nodes and capacitance) per 2 pixels i.e. 3 transistors per pixel with</text>
<text top="629" left="108" width="703" height="22" font="1">global shutter. This means improvement in fill factor and reduction in the size of pixels. This also</text>
<text top="673" left="108" width="703" height="22" font="1">means less power consumption. A simple analysis of power consumption for image acquisition</text>
<text top="716" left="108" width="450" height="22" font="1">can be performed by looking at the data mentioned in Ref. [</text>
<text top="716" left="557" width="9" height="22" font="6">1</text>
<text top="716" left="566" width="90" height="22" font="1">] and Ref. [</text>
<text top="716" left="656" width="18" height="22" font="6">28</text>
<text top="716" left="674" width="136" height="22" font="1">]. Both the papers</text>
<text top="760" left="108" width="703" height="22" font="1">use different design, technology and specification. Hence power consumption is different for both</text>
<text top="803" left="108" width="703" height="22" font="1">of them. But the relative breakdown of power spent in I/O, ADC, Pixel and Other operations are</text>
<text top="846" left="108" width="703" height="22" font="1">approximately the same. Roughly 90% power is spent in I/O and ADC in the image acquisition.</text>
<text top="890" left="108" width="703" height="22" font="1">Our proposed CS implementation cuts the I/O and ADC operations exactly by on-chip compression</text>
<text top="933" left="108" width="703" height="24" font="1">ratio i.e. by 25% − 68.75%. We have used the data for the normal mode of operation at 120</text>
<text top="976" left="108" width="444" height="22" font="1">frames/sec in our work. The data has been reproduced in Table</text>
<text top="976" left="556" width="9" height="22" font="6">7</text>
<text top="976" left="565" width="246" height="22" font="1">. The table also lists the estimation</text>
<text top="1020" left="108" width="703" height="22" font="1">of power if our system design methodology is implemented in the normal image sensor described</text>
<text top="1063" left="108" width="703" height="22" font="1">in the paper. We have also incorporated the power spent during JPEG compression in the same</text>
<text top="1109" left="450" width="18" height="22" font="1">36</text>
</page>
<page number="37" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="291" height="22" font="1">table using the design presented in Ref. [</text>
<text top="109" left="399" width="18" height="22" font="6">32</text>
<text top="109" left="417" width="394" height="22" font="1">] as reference. Please note that we have only performed</text>
<text top="152" left="108" width="703" height="22" font="1">rough approximation of JPEG power consumption based switching activity. We can see from</text>
<text top="196" left="108" width="39" height="22" font="1">Table</text>
<text top="196" left="153" width="9" height="22" font="6">7</text>
<text top="196" left="168" width="642" height="24" font="1">that one can achieve approximately 23.5% − 65% power savings for compression ratio</text>
<text top="239" left="108" width="703" height="24" font="1">of 25% − 68.75% respectively. In this work, we only consider the energy spent during image</text>
<text top="282" left="108" width="267" height="22" font="1">acquisition and compression process.</text>
<text top="326" left="134" width="705" height="22" font="1">Our proposed CS technique also reduces the wiring area in the die as we combine two rows/columns</text>
<text top="369" left="108" width="703" height="22" font="1">in one. We cut the amount of wiring required by half. We need half the number of rows or column</text>
<text top="413" left="108" width="703" height="22" font="1">select, Reset and Transmit for Global Shutter. We also need half size address decoder leading to a</text>
<text top="456" left="108" width="703" height="22" font="1">reduction in power and chip area. Because of the reduced size of the pixel and reduced wiring area,</text>
<text top="499" left="108" width="703" height="22" font="1">we can fit more pixels in the same die area using existing technology. It is not possible to exploit</text>
<text top="543" left="108" width="643" height="22" font="1">these advantages if we implement CS at ADC level as mentioned previously and in Ref. [</text>
<text top="543" left="750" width="9" height="22" font="6">1</text>
<text top="543" left="759" width="10" height="22" font="1">].</text>
<text top="606" left="108" width="113" height="23" font="1">5 Conclusions</text>
<text top="659" left="108" width="703" height="22" font="1">We have discussed a novel system design methodology for an imaging system which significantly</text>
<text top="703" left="108" width="703" height="22" font="1">cuts down power and simplifies hardware design. By using simple deterministic matrices presented</text>
<text top="746" left="108" width="703" height="22" font="1">in this paper, CS can be used for on-chip compression of the raw image to save power. These</text>
<text top="789" left="108" width="703" height="22" font="1">matrices also helps us to use JPEG in conjunction with CS for additional compression. We have</text>
<text top="833" left="108" width="703" height="22" font="1">also presented novel pixel design implementing such matrices and results for on-chip compression</text>
<text top="876" left="108" width="703" height="24" font="1">ranging from 25% − 68.75%. This leads to significant reduction in power spent at I/O, ADC and</text>
<text top="920" left="108" width="703" height="22" font="1">JPEG. We can significantly simplify ADC design as we require less resolution and less speed.</text>
<text top="963" left="108" width="703" height="24" font="1">Similarly we can simplify JPEG encoder design because there are half the number of 8 × 8 image</text>
<text top="1006" left="108" width="703" height="22" font="1">blocks and reduced bitwidth per pixel. When we do not use voltage-frequency scaling, we save the</text>
<text top="1050" left="108" width="703" height="22" font="1">power by approximately the same amount as on-chip compression. In such case estimated power</text>
<text top="1109" left="450" width="18" height="22" font="1">37</text>
</page>
<page number="38" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="703" height="24" font="1">savings are around 23.5% − 65% for the on-chip compression ratio of 25% − 68.75% respectively.</text>
<text top="152" left="108" width="703" height="22" font="1">If we use scaling we can achieve exponential reduction also. We also require fewer transistors to</text>
<text top="196" left="108" width="499" height="22" font="1">implement the same number of pixels. For the design proposed in Fig.</text>
<text top="196" left="612" width="18" height="22" font="6">13</text>
<text top="196" left="634" width="176" height="22" font="1">we need three transistors</text>
<text top="239" left="108" width="703" height="22" font="1">per pixel to implement global shutter which in normal case demands four. This not only increases</text>
<text top="282" left="108" width="703" height="22" font="1">the fill factor of pixels but decreases the pixel size as well. We also reduce the amount of wiring</text>
<text top="326" left="108" width="703" height="22" font="1">required by half which means a significant reduction in crosstalk and pixel size. We need only half</text>
<text top="369" left="108" width="703" height="22" font="1">the number of row/column wiring, power supply, reset and global shutter control wiring. We also</text>
<text top="413" left="108" width="703" height="22" font="1">simplify row/column address decoder significantly as we need only half the size decoder. All this</text>
<text top="456" left="108" width="703" height="22" font="1">means we can fit more pixels in a given die area while maintaining power efficiency and more than</text>
<text top="499" left="108" width="703" height="22" font="1">compensate the loss due to reconstruction algorithm. Since amount of raw data is reduced, we can</text>
<text top="543" left="108" width="703" height="22" font="1">also increase the frame rate. Thus our system design methodology has a huge potential to increase</text>
<text top="586" left="108" width="703" height="22" font="1">the power efficiency of CMOS image sensor design while increasing resolution and significantly</text>
<text top="629" left="108" width="629" height="22" font="1">simplifying circuit design. This aspect should be explored further by testing prototypes.</text>
<text top="692" left="108" width="120" height="23" font="1">6 Future Work</text>
<text top="746" left="108" width="703" height="22" font="1">This paper presents a novel methodology for an image acquisition system. The performance of</text>
<text top="789" left="108" width="703" height="22" font="1">this methodology depends on the performance of each component of this system. Each component</text>
<text top="833" left="108" width="703" height="22" font="1">can be redesigned to suit the needs of this system. In particular, the image sensor presented in this</text>
<text top="876" left="108" width="703" height="22" font="1">paper can be fabricated and tested to get more accurte results. Another significant component of</text>
<text top="920" left="108" width="703" height="22" font="1">this system is the reconstruction algorithm. An improvement in the performance of reconstruction</text>
<text top="963" left="108" width="703" height="22" font="1">algorithm can significantly improve the performance of this system. Post fabrication, the noise</text>
<text top="1006" left="108" width="514" height="22" font="1">characteristics of the system should also be studied and improved upon.</text>
<text top="1109" left="450" width="18" height="22" font="1">38</text>
</page>
<page number="39" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="108" width="129" height="21" font="1">Acknowledgments</text>
<text top="161" left="108" width="555" height="22" font="1">The authors would like to thank Sushirdeep Narayana for his valuable inputs.</text>
<text top="224" left="108" width="78" height="21" font="1">References</text>
<text top="271" left="129" width="682" height="22" font="1">1 Y. Oike and A. El Gamal, “Cmos image sensor with per-column σδ adc and programmable</text>
<text top="314" left="146" width="421" height="22" font="1">compressed sensing,” IEEE Journal of Solid-State Circuits</text>
<text top="314" left="572" width="168" height="23" font="1">48(1), 318–328 (2013).</text>
<text top="359" left="129" width="682" height="22" font="1">2 M. Dadkhah, M. J. Deen, and S. Shirani, “Cmos image sensor with area-efficient block-based</text>
<text top="403" left="146" width="322" height="22" font="1">compressive sensing,” IEEE Sensors Journal</text>
<text top="402" left="473" width="185" height="23" font="1">15(7), 3699–3710 (2015).</text>
<text top="448" left="129" width="682" height="22" font="1">3 N. Katic, M. H. Kamal, A. Schmid, et al., “Compressive image acquisition in modern cmos</text>
<text top="491" left="146" width="490" height="22" font="1">ic design,” International Journal of Circuit Theory and Applications</text>
<text top="491" left="641" width="168" height="23" font="1">43(6), 722–741 (2015).</text>
<text top="536" left="129" width="682" height="22" font="1">4 P. Sen and S. Darabi, “Compressive image super-resolution,” in 2009 Conference Record of</text>
<text top="580" left="146" width="664" height="22" font="1">the Forty-Third Asilomar Conference on Signals, Systems and Computers, 1235–1242, IEEE</text>
<text top="623" left="146" width="52" height="22" font="1">(2009).</text>
<text top="668" left="129" width="682" height="22" font="1">5 Z. He, T. Ogawa, and M. Haseyama, “The simplest measurement matrix for compressed</text>
<text top="712" left="146" width="664" height="22" font="1">sensing of natural images,” in 2010 IEEE International Conference on Image Processing,</text>
<text top="755" left="146" width="185" height="22" font="1">4301–4304, IEEE (2010).</text>
<text top="800" left="129" width="682" height="22" font="1">6 A. Ravelomanantsoa, H. Rabah, and A. Rouane, “Compressed sensing: A simple determin-</text>
<text top="844" left="146" width="664" height="22" font="1">istic measurement matrix and a fast recovery algorithm,” IEEE Transactions on Instrumenta-</text>
<text top="887" left="146" width="161" height="21" font="1">tion and Measurement</text>
<text top="886" left="312" width="194" height="23" font="1">64(12), 3405–3413 (2015).</text>
<text top="932" left="129" width="682" height="22" font="1">7 M. A. Davenport, M. F. Duarte, Y. C. Eldar, et al., “Introduction to compressed sensing,”</text>
<text top="975" left="146" width="60" height="21" font="1">Preprint</text>
<text top="975" left="211" width="114" height="23" font="1">93(1), 2 (2011).</text>
<text top="1020" left="129" width="682" height="22" font="1">8 E. J. Candes, “The restricted isometry property and its implications for compressed sensing,”</text>
<text top="1064" left="146" width="228" height="21" font="1">Comptes Rendus Mathematique</text>
<text top="1063" left="379" width="176" height="23" font="1">346(9), 589–592 (2008).</text>
<text top="1109" left="450" width="18" height="22" font="1">39</text>
</page>
<page number="40" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="129" width="682" height="22" font="1">9 E. Candes and J. Romberg, “Sparsity and incoherence in compressive sampling,” Inverse</text>
<text top="152" left="146" width="66" height="21" font="1">problems</text>
<text top="152" left="217" width="132" height="23" font="1">23(3), 969 (2007).</text>
<text top="197" left="120" width="691" height="22" font="1">10 E. J. Cand`es and M. B. Wakin, “An introduction to compressive sampling,” IEEE signal</text>
<text top="241" left="146" width="150" height="21" font="1">processing magazine</text>
<text top="240" left="301" width="150" height="23" font="1">25(2), 21–30 (2008).</text>
<text top="286" left="120" width="595" height="22" font="1">11 D. L. Donoho, “Compressed sensing,” IEEE Transactions on information theory</text>
<text top="285" left="718" width="92" height="23" font="1">52(4), 1289–</text>
<text top="329" left="146" width="93" height="22" font="1">1306 (2006).</text>
<text top="375" left="120" width="691" height="22" font="1">12 E. J. Candes, J. K. Romberg, and T. Tao, “Stable signal recovery from incomplete and inac-</text>
<text top="418" left="146" width="531" height="22" font="1">curate measurements,” Communications on pure and applied mathematics</text>
<text top="417" left="682" width="128" height="23" font="1">59(8), 1207–1223</text>
<text top="461" left="146" width="52" height="22" font="1">(2006).</text>
<text top="507" left="120" width="691" height="22" font="1">13 L. Gan, T. T. Do, and T. D. Tran, “Fast compressive imaging using scrambled block hadamard</text>
<text top="550" left="146" width="614" height="22" font="1">ensemble,” in Signal Processing Conference, 2008 16th European, 1–5, IEEE (2008).</text>
<text top="595" left="120" width="691" height="22" font="1">14 L. Gan, “Block compressed sensing of natural images,” in 2007 15th International conference</text>
<text top="639" left="146" width="376" height="22" font="1">on digital signal processing, 403–406, IEEE (2007).</text>
<text top="684" left="120" width="691" height="22" font="1">15 I. W. Selesnick, R. G. Baraniuk, and N. C. Kingsbury, “The dual-tree complex wavelet trans-</text>
<text top="727" left="146" width="292" height="22" font="1">form,” IEEE signal processing magazine</text>
<text top="727" left="443" width="168" height="23" font="1">22(6), 123–151 (2005).</text>
<text top="772" left="120" width="691" height="22" font="1">16 J. Yang, Y. Wang, W. Xu, et al., “Image coding using dual-tree discrete wavelet transform,”</text>
<text top="816" left="146" width="291" height="21" font="1">IEEE Transactions on Image Processing</text>
<text top="815" left="442" width="185" height="23" font="1">17(9), 1555–1569 (2008).</text>
<text top="861" left="120" width="691" height="22" font="1">17 S. Mun and J. E. Fowler, “Block compressed sensing of images using directional transforms,”</text>
<text top="904" left="146" width="664" height="22" font="1">in 2009 16th IEEE international conference on image processing (ICIP), 3021–3024, IEEE</text>
<text top="948" left="146" width="52" height="22" font="1">(2009).</text>
<text top="993" left="120" width="691" height="22" font="1">18 X. Li, X. Lan, M. Yang, et al., “Efficient lossy compression for compressive sensing ac-</text>
<text top="1109" left="450" width="18" height="22" font="1">40</text>
</page>
<page number="41" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="146" width="504" height="22" font="1">quisition of images in compressive sensing imaging systems,” Sensors</text>
<text top="108" left="655" width="156" height="23" font="1">14(12), 23398–23418</text>
<text top="152" left="146" width="52" height="22" font="1">(2014).</text>
<text top="197" left="120" width="691" height="22" font="1">19 R. A. DeVore, “Deterministic constructions of compressed sensing matrices,” Journal of com-</text>
<text top="241" left="146" width="47" height="21" font="1">plexity</text>
<text top="240" left="198" width="182" height="23" font="1">23(4-6), 918–925 (2007).</text>
<text top="286" left="120" width="691" height="22" font="1">20 R. R. Naidu, P. Jampana, and C. S. Sastry, “Deterministic compressed sensing matrices:</text>
<text top="329" left="146" width="605" height="22" font="1">Construction via euler squares and applications.,” IEEE Trans. Signal Processing</text>
<text top="329" left="758" width="52" height="23" font="1">64(14),</text>
<text top="373" left="146" width="138" height="22" font="1">3566–3575 (2016).</text>
<text top="418" left="120" width="691" height="22" font="1">21 N. Kulkarni, P. Nagesh, R. Gowda, et al., “Understanding compressive sensing and sparse</text>
<text top="461" left="146" width="664" height="22" font="1">representation-based super-resolution,” IEEE Transactions on Circuits and Systems for Video</text>
<text top="505" left="146" width="82" height="21" font="1">Technology</text>
<text top="504" left="233" width="168" height="23" font="1">22(5), 778–789 (2012).</text>
<text top="550" left="120" width="691" height="22" font="1">22 K. Yasutomi, S. Itoh, S. Kawahito, et al., “Two-stage charge transfer pixel using pinned</text>
<text top="593" left="146" width="444" height="22" font="1">diodes for low-noise global shutter imaging,” in IISW, (2009).</text>
<text top="639" left="120" width="691" height="22" font="1">23 K. Murari, R. Etienne-Cummings, N. Thakor, et al., “Which photodiode to use: A compari-</text>
<text top="682" left="146" width="417" height="22" font="1">son of cmos-compatible structures,” IEEE sensors journal</text>
<text top="681" left="568" width="159" height="23" font="1">9(7), 752–760 (2009).</text>
<text top="727" left="120" width="691" height="22" font="1">24 G. K¨okl¨u, R. Etienne-Cummings, Y. Leblebici, et al., “Characterization of standard cmos</text>
<text top="771" left="146" width="664" height="22" font="1">compatible photodiodes and pixels for lab-on-chip devices,” in 2013 IEEE International Sym-</text>
<text top="814" left="146" width="522" height="22" font="1">posium on Circuits and Systems (ISCAS2013), 1075–1078, IEEE (2013).</text>
<text top="859" left="120" width="691" height="22" font="1">25 E. R. Fossum et al., “Cmos image sensors: electronic camera-on-a-chip,” IEEE transactions</text>
<text top="902" left="146" width="137" height="21" font="1">on electron devices</text>
<text top="902" left="288" width="194" height="23" font="1">44(10), 1689–1698 (1997).</text>
<text top="948" left="120" width="691" height="22" font="1">26 S. Lauxtermann, A. Lee, J. Stevens, et al., “Comparison of global shutter pixels for cmos</text>
<text top="991" left="146" width="510" height="22" font="1">image sensors,” in 2007 International Image Sensor Workshop, (2007).</text>
<text top="1109" left="450" width="18" height="22" font="1">41</text>
</page>
<page number="42" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="120" width="691" height="22" font="1">27 M. Yip and A. P. Chandrakasan, “A resolution-reconfigurable 5-to-10-bit 0.4-to-1 v power</text>
<text top="152" left="146" width="565" height="22" font="1">scalable sar adc for sensor applications,” IEEE Journal of Solid-State Circuits</text>
<text top="152" left="717" width="94" height="23" font="1">48(6), 1453–</text>
<text top="196" left="146" width="93" height="22" font="1">1464 (2013).</text>
<text top="241" left="120" width="691" height="22" font="1">28 M.-S. Shin, J.-B. Kim, M.-K. Kim, et al., “A 1.92-megapixel cmos image sensor with column-</text>
<text top="284" left="146" width="617" height="22" font="1">parallel low-power and area-efficient sa-adcs,” IEEE Transactions on Electron Devices</text>
<text top="284" left="767" width="43" height="23" font="1">59(6),</text>
<text top="328" left="146" width="138" height="22" font="1">1693–1700 (2012).</text>
<text top="373" left="120" width="691" height="22" font="1">29 S. Sukegawa, T. Umebayashi, T. Nakajima, et al., “A 1/4-inch 8mpixel back-illuminated</text>
<text top="416" left="146" width="664" height="22" font="1">stacked cmos image sensor,” in 2013 IEEE International Solid-State Circuits Conference</text>
<text top="460" left="146" width="369" height="22" font="1">Digest of Technical Papers, 484–485, IEEE (2013).</text>
<text top="505" left="120" width="498" height="22" font="1">30 B. E. Bayer, “Color imaging array,” (1976). US Patent 3,971,065.</text>
<text top="550" left="120" width="458" height="22" font="1">31 M. Innocent, “General introduction to cmos image sensors,”</text>
<text top="595" left="120" width="691" height="22" font="1">32 Y. Shichao, H. Zhizhong, and C. Xin, “A scalable multi-pipeline jpeg encoding architecture,”</text>
<text top="639" left="146" width="655" height="22" font="1">in Microelectronics (ICM), 2016 28th International Conference on, 369–372, IEEE (2016).</text>
<text top="717" left="108" width="703" height="23" font="1">Pravir Singh Gupta received his B.Tech in Electrical Engineering from Indian Institute of Tech-</text>
<text top="761" left="108" width="703" height="22" font="1">nology Bhubaneswar, India in 2013. He is doing his PhD in Electrical and Computer Engineering</text>
<text top="804" left="108" width="703" height="22" font="1">Department at Texas A &amp; M University at College Station. He has interests in on-sensor image</text>
<text top="848" left="108" width="363" height="22" font="1">compression, LDPC decoders and Polar Decoders.</text>
<text top="915" left="108" width="703" height="23" font="1">Gwan Seong Choi received his B.S., M.S. and Ph.D. degrees, all in electrical and computer engi-</text>
<text top="959" left="108" width="703" height="22" font="1">neering, from the University of Illinois at Urbana-Champaign in 1988, 1989 and 1994, respectively.</text>
<text top="1002" left="108" width="703" height="22" font="1">He currently is an associate professor in the Electrical and Computer Engineering department at</text>
<text top="1045" left="108" width="703" height="22" font="1">Texas A&amp; M University. He has worked for Cray Research Inc. and Tandem Computers Inc, and</text>
<text top="1109" left="450" width="18" height="22" font="1">42</text>
</page>
<page number="43" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="9" size="23" family="Times" color="#000000"/>
<text top="109" left="108" width="703" height="22" font="1">he has been a visiting scientist at the NASA Langley Research Center. Dr. Choi’s research interests</text>
<text top="152" left="108" width="703" height="22" font="1">include fault-tolerance, verification simulation, high-performance VLSI circuits, radiation testing,</text>
<text top="196" left="108" width="365" height="22" font="1">design for dependability and software engineering.</text>
<text top="266" left="108" width="160" height="34" font="9">List of Figures</text>
<text top="335" left="134" width="9" height="22" font="6">1</text>
<text top="335" left="174" width="124" height="22" font="6">The six wavelets.</text>
<text top="379" left="134" width="9" height="22" font="6">2</text>
<text top="379" left="174" width="236" height="22" font="6">n+/p-sub photodiode (Ref. [24]).</text>
<text top="422" left="134" width="9" height="22" font="6">3</text>
<text top="422" left="174" width="590" height="22" font="6">3T and 4T Pixel Schematic diagram. M R stands for reset transistor, M Tx stands</text>
<text top="465" left="174" width="590" height="22" font="6">for transmission gate, M SF stands for source follower, M RS stands for row select</text>
<text top="509" left="174" width="590" height="22" font="6">transistor, PD stands for photodiode, PPD stands for pinned photodiode and FD</text>
<text top="552" left="174" width="242" height="22" font="6">stands for floating diffusion node.</text>
<text top="596" left="134" width="9" height="22" font="6">4</text>
<text top="596" left="174" width="396" height="22" font="6">Correlated Double Sampling (CDS) for a single image.</text>
<text top="639" left="134" width="9" height="22" font="6">5</text>
<text top="639" left="174" width="336" height="22" font="6">Column and Pixel fixed pattern noise example.</text>
<text top="682" left="134" width="9" height="22" font="6">6</text>
<text top="682" left="174" width="184" height="22" font="6">Block diagram of system.</text>
<text top="726" left="134" width="9" height="22" font="6">7</text>
<text top="726" left="174" width="154" height="22" font="6">The set of 30 images.</text>
<text top="769" left="134" width="9" height="22" font="6">8</text>
<text top="769" left="174" width="449" height="22" font="6">Variation of Normalized Image Size with JPEG Quality factor.</text>
<text top="812" left="134" width="9" height="22" font="6">9</text>
<text top="812" left="174" width="324" height="22" font="6">Variation of PSNR with JPEG Quality factor.</text>
<text top="856" left="134" width="18" height="22" font="6">10</text>
<text top="856" left="174" width="590" height="22" font="6">(a) Best Case Reconstruction. PSNR = 39.71. (b) Worst Case Reconstruction.</text>
<text top="899" left="174" width="109" height="22" font="6">PSNR = 24.45.</text>
<text top="943" left="134" width="18" height="22" font="6">11</text>
<text top="943" left="174" width="590" height="22" font="6">Graph showing PSNR of image reconstruction for binary and non-binary matrix</text>
<text top="986" left="174" width="395" height="22" font="6">cases vs JPEG Quality. LSB’s have not been truncated.</text>
<text top="1109" left="450" width="18" height="22" font="1">43</text>
</page>
<page number="44" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="134" width="18" height="22" font="6">12</text>
<text top="109" left="174" width="590" height="22" font="6">Graph showing normalized image-size binary and non-binary matrix cases vs JPEG</text>
<text top="152" left="174" width="287" height="22" font="6">Quality. LSB’s have not been truncated.</text>
<text top="196" left="134" width="18" height="22" font="6">13</text>
<text top="196" left="174" width="368" height="22" font="6">Schematic design for on-pixel compressed sensing.</text>
<text top="239" left="134" width="18" height="22" font="6">14</text>
<text top="239" left="174" width="329" height="22" font="6">Sweep analysis for our proposed pixel circuit.</text>
<text top="282" left="134" width="18" height="22" font="6">15</text>
<text top="282" left="174" width="590" height="22" font="6">Plot showing weighted addition of photodiode outputs. For each curve, photocur-</text>
<text top="326" left="174" width="590" height="22" font="6">rent in one of the photodiode is fixed at 100fA while the other one is varied from</text>
<text top="369" left="174" width="590" height="22" font="6">100fA to 1000fA in steps of 100fA. Each point in x-axis represents same amount</text>
<text top="413" left="174" width="590" height="22" font="6">of charge generated in the pixel but output is different due to weighted addition of</text>
<text top="456" left="174" width="143" height="22" font="6">photodiode outputs.</text>
<text top="499" left="134" width="18" height="22" font="6">16</text>
<text top="499" left="174" width="517" height="22" font="6">Proposed FSI Pixel Layout to implement on-chip compressed sampling.</text>
<text top="543" left="134" width="18" height="22" font="6">17</text>
<text top="543" left="174" width="590" height="22" font="6">A schematic diagram explaining different Back-illuminated CMOS Image Sensor</text>
<text top="586" left="174" width="68" height="22" font="6">(BI-CIS).</text>
<text top="629" left="134" width="18" height="22" font="6">18</text>
<text top="629" left="174" width="332" height="22" font="6">Proposed Conventional BSI Layout for pixels.</text>
<text top="673" left="134" width="18" height="22" font="6">19</text>
<text top="673" left="174" width="293" height="22" font="6">Proposed Stacked BSI Layout for pixels.</text>
<text top="716" left="134" width="18" height="22" font="6">20</text>
<text top="716" left="174" width="98" height="22" font="6">Bayer Pattern</text>
<text top="778" left="108" width="148" height="34" font="9">List of Tables</text>
<text top="847" left="134" width="9" height="22" font="6">1</text>
<text top="847" left="174" width="191" height="22" font="6">Result for Baseline Image.</text>
<text top="890" left="134" width="9" height="22" font="6">2</text>
<text top="890" left="174" width="305" height="22" font="6">Results for Binary Block Diagonal matrix.</text>
<text top="934" left="134" width="9" height="22" font="6">3</text>
<text top="934" left="174" width="342" height="22" font="6">Results for Non-Binary Block Diagonal matrix.</text>
<text top="977" left="134" width="9" height="22" font="6">4</text>
<text top="977" left="174" width="590" height="22" font="6">Results for Non-Binary and binary block diagonal matrix for colored Lenna image.</text>
<text top="1020" left="134" width="9" height="22" font="6">5</text>
<text top="1020" left="174" width="377" height="22" font="6">Results of Spectre simulation for weight calculation.</text>
<text top="1064" left="134" width="9" height="22" font="6">6</text>
<text top="1064" left="174" width="307" height="22" font="6">Table for Photodiode and Pixel Parameters</text>
<text top="1109" left="450" width="18" height="22" font="1">44</text>
</page>
<page number="45" position="absolute" top="0" left="0" height="1188" width="918">
<text top="109" left="134" width="9" height="22" font="6">7</text>
<text top="109" left="174" width="197" height="22" font="6">Table for Power Estimation</text>
<text top="1109" left="450" width="18" height="22" font="1">45</text>
</page>
<page number="46" position="absolute" top="0" left="0" height="1188" width="918">
<text top="161" left="291" width="336" height="19" font="4">Table 3 Results for Non-Binary Block Diagonal matrix.</text>
<text top="225" left="131" width="94" height="18" font="1">Image T ype</text>
<text top="225" left="254" width="60" height="18" font="1">Quality</text>
<text top="225" left="333" width="69" height="18" font="1">Bitdepth</text>
<text top="225" left="420" width="287" height="18" font="1">N ormalized Size P SN R(dB) On</text>
<text top="225" left="711" width="194" height="21" font="1">− Chip Compression(%)</text>
<text top="255" left="117" width="53" height="18" font="1">JP EG</text>
<text top="252" left="174" width="39" height="22" font="1">+ CS</text>
<text top="262" left="213" width="21" height="12" font="2">N B</text>
<text top="255" left="254" width="61" height="18" font="1">lossless</text>
<text top="252" left="358" width="18" height="22" font="1">12</text>
<text top="252" left="474" width="27" height="22" font="1">317</text>
<text top="252" left="598" width="40" height="22" font="1">32.37</text>
<text top="252" left="785" width="18" height="22" font="1">25</text>
<text top="284" left="117" width="53" height="18" font="1">JP EG</text>
<text top="281" left="174" width="39" height="22" font="1">+ CS</text>
<text top="291" left="213" width="21" height="12" font="2">N B</text>
<text top="284" left="254" width="61" height="18" font="1">lossless</text>
<text top="281" left="358" width="18" height="22" font="1">11</text>
<text top="281" left="462" width="49" height="22" font="1">285.57</text>
<text top="281" left="598" width="40" height="22" font="1">32.37</text>
<text top="281" left="774" width="40" height="22" font="1">31.25</text>
<text top="313" left="117" width="53" height="18" font="1">JP EG</text>
<text top="309" left="174" width="39" height="22" font="1">+ CS</text>
<text top="320" left="213" width="21" height="12" font="2">N B</text>
<text top="313" left="254" width="61" height="18" font="1">lossless</text>
<text top="309" left="358" width="18" height="22" font="1">10</text>
<text top="309" left="462" width="49" height="22" font="1">253.55</text>
<text top="309" left="598" width="40" height="22" font="1">32.37</text>
<text top="309" left="778" width="31" height="22" font="1">37.5</text>
<text top="341" left="117" width="53" height="18" font="1">JP EG</text>
<text top="338" left="174" width="39" height="22" font="1">+ CS</text>
<text top="349" left="213" width="21" height="12" font="2">N B</text>
<text top="341" left="254" width="61" height="18" font="1">lossless</text>
<text top="338" left="363" width="9" height="22" font="1">9</text>
<text top="338" left="462" width="49" height="22" font="1">221.88</text>
<text top="338" left="598" width="40" height="22" font="1">32.37</text>
<text top="338" left="774" width="40" height="22" font="1">43.75</text>
<text top="370" left="117" width="53" height="18" font="1">JP EG</text>
<text top="367" left="174" width="39" height="22" font="1">+ CS</text>
<text top="377" left="213" width="21" height="12" font="2">N B</text>
<text top="370" left="254" width="61" height="18" font="1">lossless</text>
<text top="367" left="363" width="9" height="22" font="1">8</text>
<text top="367" left="462" width="49" height="22" font="1">189.23</text>
<text top="367" left="598" width="40" height="22" font="1">32.36</text>
<text top="367" left="785" width="18" height="22" font="1">50</text>
<text top="399" left="117" width="53" height="18" font="1">JP EG</text>
<text top="396" left="174" width="39" height="22" font="1">+ CS</text>
<text top="406" left="213" width="21" height="12" font="2">N B</text>
<text top="399" left="254" width="61" height="18" font="1">lossless</text>
<text top="396" left="363" width="9" height="22" font="1">6</text>
<text top="396" left="462" width="49" height="22" font="1">122.27</text>
<text top="396" left="598" width="40" height="22" font="1">32.13</text>
<text top="396" left="778" width="31" height="22" font="1">62.5</text>
<text top="428" left="117" width="53" height="18" font="1">JP EG</text>
<text top="425" left="174" width="39" height="22" font="1">+ CS</text>
<text top="435" left="213" width="21" height="12" font="2">N B</text>
<text top="428" left="254" width="61" height="18" font="1">lossless</text>
<text top="425" left="363" width="9" height="22" font="1">5</text>
<text top="425" left="467" width="40" height="22" font="1">92.82</text>
<text top="425" left="598" width="40" height="22" font="1">31.52</text>
<text top="425" left="774" width="40" height="22" font="1">68.75</text>
<text top="457" left="117" width="53" height="18" font="1">JP EG</text>
<text top="454" left="174" width="39" height="22" font="1">+ CS</text>
<text top="465" left="213" width="21" height="12" font="2">N B</text>
<text top="454" left="271" width="27" height="22" font="1">100</text>
<text top="454" left="358" width="18" height="22" font="1">12</text>
<text top="454" left="462" width="49" height="22" font="1">348.21</text>
<text top="454" left="598" width="40" height="22" font="1">32.37</text>
<text top="454" left="785" width="18" height="22" font="1">25</text>
<text top="486" left="117" width="53" height="18" font="1">JP EG</text>
<text top="483" left="174" width="39" height="22" font="1">+ CS</text>
<text top="494" left="213" width="21" height="12" font="2">N B</text>
<text top="483" left="271" width="27" height="22" font="1">100</text>
<text top="483" left="358" width="18" height="22" font="1">11</text>
<text top="483" left="462" width="49" height="22" font="1">310.88</text>
<text top="483" left="598" width="40" height="22" font="1">32.37</text>
<text top="483" left="774" width="40" height="22" font="1">31.25</text>
<text top="516" left="117" width="53" height="18" font="1">JP EG</text>
<text top="513" left="174" width="39" height="22" font="1">+ CS</text>
<text top="523" left="213" width="21" height="12" font="2">N B</text>
<text top="513" left="275" width="18" height="22" font="1">85</text>
<text top="513" left="358" width="18" height="22" font="1">12</text>
<text top="513" left="462" width="49" height="22" font="1">216.14</text>
<text top="513" left="598" width="40" height="22" font="1">32.35</text>
<text top="513" left="785" width="18" height="22" font="1">25</text>
<text top="545" left="117" width="53" height="18" font="1">JP EG</text>
<text top="542" left="174" width="39" height="22" font="1">+ CS</text>
<text top="552" left="213" width="21" height="12" font="2">N B</text>
<text top="542" left="275" width="18" height="22" font="1">85</text>
<text top="542" left="358" width="18" height="22" font="1">11</text>
<text top="542" left="462" width="49" height="22" font="1">176.32</text>
<text top="542" left="598" width="40" height="22" font="1">32.29</text>
<text top="542" left="774" width="40" height="22" font="1">31.25</text>
<text top="574" left="117" width="53" height="18" font="1">JP EG</text>
<text top="571" left="174" width="39" height="22" font="1">+ CS</text>
<text top="581" left="213" width="21" height="12" font="2">N B</text>
<text top="571" left="275" width="18" height="22" font="1">75</text>
<text top="571" left="358" width="18" height="22" font="1">12</text>
<text top="571" left="462" width="49" height="22" font="1">186.45</text>
<text top="571" left="598" width="40" height="22" font="1">32.31</text>
<text top="571" left="785" width="18" height="22" font="1">25</text>
<text top="603" left="117" width="53" height="18" font="1">JP EG</text>
<text top="600" left="174" width="39" height="22" font="1">+ CS</text>
<text top="610" left="213" width="21" height="12" font="2">N B</text>
<text top="600" left="275" width="18" height="22" font="1">75</text>
<text top="600" left="358" width="18" height="22" font="1">11</text>
<text top="600" left="462" width="49" height="22" font="1">146.28</text>
<text top="600" left="598" width="40" height="22" font="1">32.16</text>
<text top="600" left="774" width="40" height="22" font="1">31.25</text>
<text top="632" left="117" width="53" height="18" font="1">JP EG</text>
<text top="629" left="174" width="39" height="22" font="1">+ CS</text>
<text top="639" left="213" width="21" height="12" font="2">N B</text>
<text top="629" left="275" width="18" height="22" font="1">75</text>
<text top="629" left="358" width="18" height="22" font="1">10</text>
<text top="629" left="462" width="49" height="22" font="1">108.39</text>
<text top="629" left="598" width="40" height="22" font="1">31.78</text>
<text top="629" left="778" width="31" height="22" font="1">37.5</text>
<text top="661" left="117" width="53" height="18" font="1">JP EG</text>
<text top="658" left="174" width="39" height="22" font="1">+ CS</text>
<text top="668" left="213" width="21" height="12" font="2">N B</text>
<text top="658" left="275" width="18" height="22" font="1">75</text>
<text top="658" left="363" width="9" height="22" font="1">9</text>
<text top="658" left="467" width="40" height="22" font="1">76.48</text>
<text top="658" left="598" width="40" height="22" font="1">31.09</text>
<text top="658" left="774" width="40" height="22" font="1">43.75</text>
<text top="690" left="117" width="53" height="18" font="1">JP EG</text>
<text top="687" left="174" width="39" height="22" font="1">+ CS</text>
<text top="697" left="213" width="21" height="12" font="2">N B</text>
<text top="687" left="275" width="18" height="22" font="1">75</text>
<text top="687" left="363" width="9" height="22" font="1">8</text>
<text top="687" left="467" width="40" height="22" font="1">51.78</text>
<text top="687" left="598" width="40" height="22" font="1">29.99</text>
<text top="687" left="785" width="18" height="22" font="1">50</text>
<text top="719" left="117" width="53" height="18" font="1">JP EG</text>
<text top="715" left="174" width="39" height="22" font="1">+ CS</text>
<text top="726" left="213" width="21" height="12" font="2">N B</text>
<text top="715" left="275" width="18" height="22" font="1">75</text>
<text top="715" left="363" width="9" height="22" font="1">7</text>
<text top="715" left="467" width="40" height="22" font="1">33.79</text>
<text top="715" left="598" width="40" height="22" font="1">28.63</text>
<text top="715" left="774" width="40" height="22" font="1">56.25</text>
<text top="747" left="117" width="53" height="18" font="1">JP EG</text>
<text top="744" left="174" width="39" height="22" font="1">+ CS</text>
<text top="755" left="213" width="21" height="12" font="2">N B</text>
<text top="744" left="275" width="18" height="22" font="1">75</text>
<text top="744" left="363" width="9" height="22" font="1">6</text>
<text top="744" left="467" width="40" height="22" font="1">21.11</text>
<text top="744" left="598" width="40" height="22" font="1">27.11</text>
<text top="744" left="778" width="31" height="22" font="1">62.5</text>
<text top="777" left="117" width="53" height="18" font="1">JP EG</text>
<text top="774" left="174" width="39" height="22" font="1">+ CS</text>
<text top="784" left="213" width="21" height="12" font="2">N B</text>
<text top="774" left="275" width="18" height="22" font="1">60</text>
<text top="774" left="358" width="18" height="22" font="1">12</text>
<text top="774" left="462" width="49" height="22" font="1">159.67</text>
<text top="774" left="598" width="40" height="22" font="1">32.23</text>
<text top="774" left="785" width="18" height="22" font="1">25</text>
<text top="806" left="117" width="53" height="18" font="1">JP EG</text>
<text top="803" left="174" width="39" height="22" font="1">+ CS</text>
<text top="814" left="213" width="21" height="12" font="2">N B</text>
<text top="803" left="275" width="18" height="22" font="1">50</text>
<text top="803" left="358" width="18" height="22" font="1">12</text>
<text top="803" left="462" width="49" height="22" font="1">146.85</text>
<text top="803" left="598" width="40" height="22" font="1">32.16</text>
<text top="803" left="785" width="18" height="22" font="1">25</text>
<text top="835" left="117" width="53" height="18" font="1">JP EG</text>
<text top="832" left="174" width="39" height="22" font="1">+ CS</text>
<text top="842" left="213" width="21" height="12" font="2">N B</text>
<text top="832" left="275" width="18" height="22" font="1">50</text>
<text top="832" left="358" width="18" height="22" font="1">10</text>
<text top="832" left="467" width="40" height="22" font="1">76.86</text>
<text top="832" left="598" width="40" height="22" font="1">31.09</text>
<text top="832" left="778" width="31" height="22" font="1">37.5</text>
<text top="864" left="117" width="53" height="18" font="1">JP EG</text>
<text top="861" left="174" width="39" height="22" font="1">+ CS</text>
<text top="871" left="213" width="21" height="12" font="2">N B</text>
<text top="861" left="275" width="18" height="22" font="1">50</text>
<text top="861" left="363" width="9" height="22" font="1">9</text>
<text top="861" left="467" width="40" height="22" font="1">52.05</text>
<text top="861" left="598" width="40" height="22" font="1">30.01</text>
<text top="861" left="774" width="40" height="22" font="1">43.75</text>
<text top="894" left="117" width="53" height="18" font="1">JP EG</text>
<text top="890" left="174" width="39" height="22" font="1">+ CS</text>
<text top="901" left="213" width="21" height="12" font="2">N B</text>
<text top="890" left="275" width="18" height="22" font="1">40</text>
<text top="890" left="358" width="18" height="22" font="1">12</text>
<text top="890" left="462" width="49" height="22" font="1">133.90</text>
<text top="890" left="598" width="40" height="22" font="1">32.07</text>
<text top="890" left="785" width="18" height="22" font="1">25</text>
<text top="922" left="117" width="53" height="18" font="1">JP EG</text>
<text top="919" left="174" width="39" height="22" font="1">+ CS</text>
<text top="930" left="213" width="21" height="12" font="2">N B</text>
<text top="919" left="275" width="18" height="22" font="1">40</text>
<text top="919" left="358" width="18" height="22" font="1">10</text>
<text top="919" left="467" width="40" height="22" font="1">67.86</text>
<text top="919" left="598" width="40" height="22" font="1">30.78</text>
<text top="919" left="778" width="31" height="22" font="1">37.5</text>
<text top="952" left="117" width="53" height="18" font="1">JP EG</text>
<text top="949" left="174" width="39" height="22" font="1">+ CS</text>
<text top="959" left="213" width="21" height="12" font="2">N B</text>
<text top="949" left="275" width="18" height="22" font="1">30</text>
<text top="949" left="358" width="18" height="22" font="1">12</text>
<text top="949" left="462" width="49" height="22" font="1">118.58</text>
<text top="949" left="598" width="40" height="22" font="1">31.92</text>
<text top="949" left="785" width="18" height="22" font="1">25</text>
<text top="981" left="117" width="53" height="18" font="1">JP EG</text>
<text top="978" left="174" width="39" height="22" font="1">+ CS</text>
<text top="989" left="213" width="21" height="12" font="2">N B</text>
<text top="978" left="275" width="18" height="22" font="1">20</text>
<text top="978" left="358" width="18" height="22" font="1">12</text>
<text top="978" left="467" width="40" height="22" font="1">97.93</text>
<text top="978" left="598" width="40" height="22" font="1">31.62</text>
<text top="978" left="785" width="18" height="22" font="1">25</text>
<text top="1109" left="450" width="18" height="22" font="1">46</text>
</page>
<page number="47" position="absolute" top="0" left="0" height="1188" width="918">
<text top="161" left="185" width="549" height="19" font="4">Table 4 Results for Non-Binary and binary block diagonal matrix for colored Lenna image.</text>
<text top="225" left="182" width="69" height="18" font="1">CS T ype</text>
<text top="225" left="330" width="92" height="18" font="1">P SN R(dB)</text>
<text top="225" left="426" width="400" height="21" font="1">− Red P SNR(dB) − Green P SNR(dB) − Blue</text>
<text top="255" left="127" width="125" height="18" font="1">Lossless JP EG</text>
<text top="251" left="256" width="39" height="22" font="1">+ CS</text>
<text top="262" left="295" width="10" height="12" font="2">B</text>
<text top="251" left="382" width="40" height="22" font="1">41.27</text>
<text top="251" left="554" width="40" height="22" font="1">37.52</text>
<text top="251" left="730" width="40" height="22" font="1">35.94</text>
<text top="283" left="121" width="125" height="18" font="1">Lossless JP EG</text>
<text top="280" left="250" width="39" height="22" font="1">+ CS</text>
<text top="291" left="290" width="21" height="12" font="2">N B</text>
<text top="280" left="382" width="40" height="22" font="1">41.22</text>
<text top="280" left="554" width="40" height="22" font="1">37.48</text>
<text top="280" left="730" width="40" height="22" font="1">35.91</text>
<text top="450" left="276" width="365" height="19" font="4">Table 5 Results of Spectre simulation for weight calculation.</text>
<text top="496" left="186" width="545" height="18" font="1">P hotodiode 1 (f A) P hotodiode 2 (f A) Output(P ixel Circuit) (mV )</text>
<text top="526" left="247" width="26" height="18" font="1">100</text>
<text top="526" left="406" width="26" height="18" font="1">100</text>
<text top="526" left="616" width="9" height="18" font="1">8</text>
<text top="555" left="247" width="26" height="18" font="1">200</text>
<text top="555" left="406" width="26" height="18" font="1">100</text>
<text top="555" left="611" width="18" height="18" font="1">11</text>
<text top="584" left="247" width="26" height="18" font="1">100</text>
<text top="584" left="406" width="26" height="18" font="1">200</text>
<text top="584" left="611" width="18" height="18" font="1">12</text>
<text top="612" left="247" width="26" height="18" font="1">500</text>
<text top="612" left="406" width="26" height="18" font="1">500</text>
<text top="612" left="605" width="31" height="18" font="1">38.9</text>
<text top="641" left="243" width="35" height="18" font="1">1000</text>
<text top="641" left="402" width="35" height="18" font="1">1000</text>
<text top="641" left="605" width="31" height="18" font="1">81.7</text>
<text top="671" left="232" width="454" height="18" font="1">Calculated weight using curve f itting(100 points) = 1.22</text>
<text top="838" left="306" width="306" height="19" font="4">Table 6 Table for Photodiode and Pixel Parameters</text>
<text top="902" left="121" width="13" height="18" font="1">C</text>
<text top="909" left="134" width="25" height="12" font="2">jdep</text>
<text top="902" left="201" width="13" height="18" font="1">C</text>
<text top="909" left="214" width="12" height="12" font="2">j0</text>
<text top="902" left="290" width="13" height="18" font="1">C</text>
<text top="909" left="303" width="27" height="12" font="2">j0sw</text>
<text top="902" left="378" width="8" height="18" font="1">v</text>
<text top="909" left="386" width="5" height="12" font="2">j</text>
<text top="902" left="417" width="8" height="18" font="1">v</text>
<text top="909" left="426" width="21" height="12" font="2">jsw</text>
<text top="902" left="469" width="15" height="18" font="1">m</text>
<text top="902" left="506" width="15" height="18" font="1">m</text>
<text top="909" left="521" width="21" height="12" font="2">jsw</text>
<text top="902" left="566" width="10" height="18" font="1">V</text>
<text top="909" left="577" width="7" height="12" font="2">d</text>
<text top="902" left="618" width="13" height="18" font="1">A</text>
<text top="909" left="631" width="10" height="12" font="2">D</text>
<text top="902" left="676" width="11" height="18" font="1">P</text>
<text top="909" left="687" width="10" height="12" font="2">D</text>
<text top="902" left="731" width="33" height="18" font="1">F SI</text>
<text top="902" left="803" width="34" height="18" font="1">BSI</text>
<text top="930" left="121" width="115" height="18" font="1">(f F ) (mF/m</text>
<text top="928" left="236" width="6" height="12" font="2">2</text>
<text top="930" left="243" width="7" height="18" font="1">)</text>
<text top="930" left="286" width="51" height="18" font="1">(F/m)</text>
<text top="930" left="372" width="28" height="18" font="1">(V )</text>
<text top="930" left="419" width="28" height="18" font="1">(V )</text>
<text top="930" left="561" width="79" height="18" font="1">(V ) (µm</text>
<text top="928" left="640" width="6" height="12" font="2">2</text>
<text top="930" left="647" width="7" height="18" font="1">)</text>
<text top="930" left="674" width="26" height="18" font="1">µm</text>
<text top="930" left="732" width="33" height="18" font="1">F.F.</text>
<text top="930" left="804" width="33" height="18" font="1">F.F.</text>
<text top="960" left="125" width="31" height="18" font="1">32.8</text>
<text top="960" left="194" width="40" height="18" font="1">1.067</text>
<text top="960" left="268" width="22" height="18" font="1">1.6</text>
<text top="959" left="295" width="36" height="21" font="1">× 10</text>
<text top="958" left="330" width="23" height="14" font="2">−10</text>
<text top="960" left="379" width="14" height="18" font="1">.8</text>
<text top="960" left="421" width="22" height="18" font="1">.65</text>
<text top="960" left="466" width="22" height="18" font="1">.41</text>
<text top="960" left="513" width="22" height="18" font="1">.35</text>
<text top="960" left="564" width="22" height="18" font="1">1.8</text>
<text top="960" left="610" width="40" height="18" font="1">45.76</text>
<text top="960" left="672" width="177" height="18" font="1">27.5 54.16% 65.54%</text>
<text top="983" left="160" width="644" height="18" font="4">Note. F.F. stands for Fill-Factor of pixel. In case of BSI, Fill Factor is mentioned for conventional BSI only.</text>
<text top="1109" left="450" width="18" height="22" font="1">47</text>
</page>
<page number="48" position="absolute" top="0" left="0" height="1188" width="918">
<text top="405" left="351" width="215" height="19" font="4">Table 7 Table for Power Estimation</text>
<text top="465" left="143" width="79" height="23" font="1">Operation</text>
<text top="465" left="264" width="65" height="23" font="1">Design 1</text>
<text top="465" left="356" width="65" height="23" font="1">Design 2</text>
<text top="465" left="446" width="356" height="23" font="1">CS for Design 1 (mW) CS for Design 2 (mW)</text>
<text top="489" left="275" width="45" height="23" font="1">(mW)</text>
<text top="489" left="367" width="45" height="23" font="1">(mW)</text>
<text top="492" left="451" width="106" height="18" font="1">C.R. : 68.75%</text>
<text top="492" left="561" width="50" height="21" font="1">− 25%</text>
<text top="492" left="638" width="106" height="18" font="1">C.R. : 68.75%</text>
<text top="492" left="748" width="50" height="21" font="1">− 25%</text>
<text top="510" left="262" width="49" height="23" font="1">(Ref. [</text>
<text top="510" left="311" width="9" height="23" font="6">1</text>
<text top="510" left="320" width="79" height="23" font="1">]) (Ref. [</text>
<text top="510" left="398" width="18" height="23" font="6">28</text>
<text top="510" left="416" width="12" height="23" font="1">])</text>
<text top="539" left="171" width="24" height="22" font="1">I/O</text>
<text top="542" left="288" width="18" height="18" font="1">27</text>
<text top="542" left="380" width="18" height="18" font="1">70</text>
<text top="542" left="484" width="31" height="18" font="1">8.34</text>
<text top="542" left="519" width="58" height="21" font="1">− 20.25</text>
<text top="542" left="671" width="40" height="18" font="1">21.87</text>
<text top="542" left="715" width="49" height="21" font="1">− 52.5</text>
<text top="568" left="164" width="38" height="22" font="1">ADC</text>
<text top="571" left="288" width="18" height="18" font="1">60</text>
<text top="571" left="376" width="26" height="18" font="1">209</text>
<text top="571" left="491" width="40" height="18" font="1">18.75</text>
<text top="570" left="535" width="36" height="21" font="1">− 45</text>
<text top="571" left="662" width="40" height="18" font="1">65.31</text>
<text top="570" left="706" width="67" height="21" font="1">− 156.75</text>
<text top="597" left="164" width="37" height="22" font="1">Pixel</text>
<text top="600" left="286" width="22" height="18" font="1">1.8</text>
<text top="600" left="380" width="18" height="18" font="1">23</text>
<text top="600" left="520" width="22" height="18" font="1">1.8</text>
<text top="600" left="709" width="18" height="18" font="1">23</text>
<text top="625" left="162" width="41" height="22" font="1">Other</text>
<text top="629" left="286" width="22" height="18" font="1">4.2</text>
<text top="629" left="380" width="18" height="18" font="1">20</text>
<text top="629" left="520" width="22" height="18" font="1">4.2</text>
<text top="629" left="709" width="18" height="18" font="1">20</text>
<text top="654" left="121" width="93" height="22" font="1">JPEG (Ref. [</text>
<text top="654" left="214" width="18" height="22" font="6">32</text>
<text top="654" left="232" width="12" height="22" font="1">])</text>
<text top="657" left="277" width="40" height="18" font="1">13.18</text>
<text top="657" left="369" width="40" height="18" font="1">386.3</text>
<text top="657" left="489" width="31" height="18" font="1">4.11</text>
<text top="657" left="524" width="49" height="21" font="1">− 9.88</text>
<text top="657" left="658" width="49" height="18" font="1">120.71</text>
<text top="657" left="711" width="67" height="21" font="1">− 289.72</text>
<text top="684" left="165" width="36" height="22" font="1">Total</text>
<text top="687" left="273" width="49" height="18" font="1">106.18</text>
<text top="687" left="369" width="40" height="18" font="1">708.3</text>
<text top="687" left="484" width="31" height="18" font="1">37.2</text>
<text top="686" left="519" width="58" height="21" font="1">− 81.13</text>
<text top="687" left="658" width="49" height="18" font="1">250.89</text>
<text top="686" left="711" width="67" height="21" font="1">− 541.97</text>
<text top="713" left="130" width="106" height="22" font="1">Power Savings</text>
<text top="713" left="285" width="24" height="22" font="1">0%</text>
<text top="713" left="377" width="24" height="22" font="1">0%</text>
<text top="716" left="465" width="55" height="18" font="1">64.96%</text>
<text top="715" left="524" width="73" height="21" font="1">− 23.59%</text>
<text top="716" left="652" width="55" height="18" font="1">64.57%</text>
<text top="715" left="711" width="73" height="21" font="1">− 23.48%</text>
<text top="739" left="150" width="620" height="18" font="4">Note. CS stands for our proposed Compressed Sensing and C.R. stands for on-chip Compression Ratio.</text>
<text top="1109" left="450" width="18" height="22" font="1">48</text>
</page>
</pdf2xml>
