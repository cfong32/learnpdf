<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml producer="poppler" version="0.68.0">
<page number="1" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="0" size="23" family="Times" color="#000000"/>
	<fontspec id="1" size="15" family="Times" color="#000000"/>
	<fontspec id="2" size="19" family="Times" color="#000000"/>
	<fontspec id="3" size="12" family="Times" color="#000000"/>
	<fontspec id="4" size="28" family="Times" color="#7f7f7f"/>
<text top="247" left="241" width="434" height="23" font="0">Sweave Documentation for “Implementing</text>
<text top="280" left="227" width="463" height="23" font="0">Markov chain Monte Carlo: Estimating with</text>
<text top="313" left="401" width="118" height="23" font="0">confidence”</text>
<text top="362" left="319" width="278" height="16" font="1">James M. Flegal and Galin L. Jones</text>
<text top="397" left="393" width="131" height="16" font="1">October 24, 2018</text>
<text top="458" left="201" width="12" height="19" font="2">1</text>
<text top="458" left="237" width="133" height="19" font="2">Introduction</text>
<text top="496" left="201" width="516" height="13" font="3">This file is the Sweave documentation for the examples provided in <a href="xml/1006.5690v1.html#24">Flegal and</a></text>
<text top="514" left="201" width="87" height="13" font="3"><a href="xml/1006.5690v1.html#24">Jones (2010)</a>.</text>
<text top="553" left="201" width="26" height="16" font="1">1.1</text>
<text top="553" left="247" width="116" height="16" font="1">Batch Means</text>
<text top="583" left="201" width="516" height="13" font="3">The following function is required to calculate the variance estimators using</text>
<text top="601" left="201" width="516" height="13" font="3">batch means (BM) and overlapping batch means (OLBM). We are thankful to</text>
<text top="619" left="201" width="516" height="13" font="3">Murali Haran whom wrote the original function to implement BM which we</text>
<text top="637" left="201" width="133" height="13" font="3">have expanded here.</text>
<text top="671" left="201" width="227" height="12" font="3">&gt; id &lt;- function(x) return(x)</text>
<text top="689" left="201" width="595" height="12" font="3">&gt; mcse &lt;- function(vals, bs = &#34;sqroot&#34;, g = id, meth = &#34;BM&#34;, warn = FALSE) {</text>
<text top="707" left="201" width="8" height="12" font="3">+</text>
<text top="707" left="248" width="133" height="12" font="3">N &lt;- length(vals)</text>
<text top="725" left="201" width="8" height="12" font="3">+</text>
<text top="725" left="248" width="117" height="12" font="3">if (N &lt; 1000) {</text>
<text top="743" left="201" width="8" height="12" font="3">+</text>
<text top="743" left="279" width="70" height="12" font="3">if (warn)</text>
<text top="761" left="201" width="8" height="12" font="3">+</text>
<text top="761" left="310" width="392" height="12" font="3">cat(&#34;WARNING: too few samples (less than 1000)\n&#34;)</text>
<text top="779" left="201" width="8" height="12" font="3">+</text>
<text top="779" left="279" width="86" height="12" font="3">if (N &lt; 10)</text>
<text top="796" left="201" width="8" height="12" font="3">+</text>
<text top="796" left="310" width="78" height="12" font="3">return(NA)</text>
<text top="814" left="201" width="8" height="12" font="3">+</text>
<text top="814" left="248" width="8" height="12" font="3">}</text>
<text top="832" left="201" width="8" height="12" font="3">+</text>
<text top="832" left="248" width="164" height="12" font="3">if (bs == &#34;sqroot&#34;) {</text>
<text top="850" left="201" width="8" height="12" font="3">+</text>
<text top="850" left="279" width="149" height="12" font="3">b &lt;- floor(sqrt(N))</text>
<text top="868" left="201" width="8" height="12" font="3">+</text>
<text top="868" left="279" width="117" height="12" font="3">a &lt;- floor(N/b)</text>
<text top="886" left="201" width="8" height="12" font="3">+</text>
<text top="886" left="248" width="8" height="12" font="3">}</text>
<text top="904" left="201" width="8" height="12" font="3">+</text>
<text top="904" left="248" width="219" height="12" font="3">else if (bs == &#34;cuberoot&#34;) {</text>
<text top="922" left="201" width="8" height="12" font="3">+</text>
<text top="922" left="279" width="149" height="12" font="3">b &lt;- floor(N^(1/3))</text>
<text top="940" left="201" width="8" height="12" font="3">+</text>
<text top="940" left="279" width="117" height="12" font="3">a &lt;- floor(N/b)</text>
<text top="958" left="201" width="8" height="12" font="3">+</text>
<text top="958" left="248" width="8" height="12" font="3">}</text>
<text top="976" left="201" width="8" height="12" font="3">+</text>
<text top="976" left="248" width="47" height="12" font="3">else {</text>
<text top="994" left="201" width="8" height="12" font="3">+</text>
<text top="994" left="279" width="196" height="12" font="3">stopifnot(is.numeric(bs))</text>
<text top="1044" left="455" width="7" height="13" font="3">1</text>
<text top="827" left="48" width="0" height="27" font="4">arXiv:1006.5690v1  [stat.OT]  24 Jun 2010</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="5" size="8" family="Times" color="#000000"/>
<text top="193" left="201" width="8" height="12" font="3">+</text>
<text top="193" left="279" width="110" height="12" font="3">b &lt;- floor(bs)</text>
<text top="211" left="201" width="8" height="12" font="3">+</text>
<text top="211" left="279" width="78" height="12" font="3">if (b &gt; 1)</text>
<text top="229" left="201" width="8" height="12" font="3">+</text>
<text top="229" left="310" width="117" height="12" font="3">a &lt;- floor(N/b)</text>
<text top="247" left="201" width="8" height="12" font="3">+</text>
<text top="247" left="279" width="352" height="12" font="3">else stop(&#34;batch size invalid (bs=&#34;, bs, &#34;)&#34;)</text>
<text top="265" left="201" width="8" height="12" font="3">+</text>
<text top="265" left="248" width="8" height="12" font="3">}</text>
<text top="283" left="201" width="8" height="12" font="3">+</text>
<text top="283" left="248" width="149" height="12" font="3">if (meth == &#34;BM&#34;) {</text>
<text top="301" left="201" width="8" height="12" font="3">+</text>
<text top="301" left="279" width="423" height="12" font="3">Ys &lt;- sapply(1:a, function(k) return(mean(g(vals[((k -</text>
<text top="319" left="201" width="8" height="12" font="3">+</text>
<text top="319" left="310" width="188" height="12" font="3">1) * b + 1):(k * b)]))))</text>
<text top="336" left="201" width="8" height="12" font="3">+</text>
<text top="336" left="279" width="133" height="12" font="3">muhat &lt;- mean(Ys)</text>
<text top="354" left="201" width="8" height="12" font="3">+</text>
<text top="354" left="279" width="352" height="12" font="3">sigmahatsq &lt;- b * sum((Ys - muhat)^2)/(a - 1)</text>
<text top="372" left="201" width="8" height="12" font="3">+</text>
<text top="372" left="279" width="204" height="12" font="3">bmse &lt;- sqrt(sigmahatsq/N)</text>
<text top="390" left="201" width="8" height="12" font="3">+</text>
<text top="390" left="279" width="94" height="12" font="3">return(bmse)</text>
<text top="408" left="201" width="8" height="12" font="3">+</text>
<text top="408" left="248" width="8" height="12" font="3">}</text>
<text top="426" left="201" width="8" height="12" font="3">+</text>
<text top="426" left="248" width="157" height="12" font="3">if (meth == &#34;OBM&#34;) {</text>
<text top="444" left="201" width="8" height="12" font="3">+</text>
<text top="444" left="279" width="110" height="12" font="3">a &lt;- N - b + 1</text>
<text top="462" left="201" width="8" height="12" font="3">+</text>
<text top="462" left="279" width="431" height="12" font="3">Ys &lt;- sapply(1:a, function(k) return(mean(g(vals[k:(k +</text>
<text top="480" left="201" width="8" height="12" font="3">+</text>
<text top="480" left="310" width="86" height="12" font="3">b - 1)]))))</text>
<text top="498" left="201" width="8" height="12" font="3">+</text>
<text top="498" left="279" width="133" height="12" font="3">muhat &lt;- mean(Ys)</text>
<text top="516" left="201" width="8" height="12" font="3">+</text>
<text top="516" left="279" width="399" height="12" font="3">sigmahatsq &lt;- N * b * sum((Ys - muhat)^2)/(a - 1)/a</text>
<text top="534" left="201" width="8" height="12" font="3">+</text>
<text top="534" left="279" width="204" height="12" font="3">bmse &lt;- sqrt(sigmahatsq/N)</text>
<text top="552" left="201" width="8" height="12" font="3">+</text>
<text top="552" left="279" width="94" height="12" font="3">return(bmse)</text>
<text top="570" left="201" width="8" height="12" font="3">+</text>
<text top="570" left="248" width="8" height="12" font="3">}</text>
<text top="588" left="201" width="8" height="12" font="3">+</text>
<text top="588" left="248" width="47" height="12" font="3">else {</text>
<text top="605" left="201" width="8" height="12" font="3">+</text>
<text top="605" left="279" width="392" height="12" font="3">stop(&#34;method specified invalid (meth=&#34;, meth, &#34;)&#34;)</text>
<text top="623" left="201" width="8" height="12" font="3">+</text>
<text top="623" left="248" width="8" height="12" font="3">}</text>
<text top="641" left="201" width="24" height="12" font="3">+ }</text>
<text top="685" left="201" width="12" height="19" font="2">2</text>
<text top="685" left="237" width="324" height="19" font="2">Normal AR(1) Markov Chains</text>
<text top="722" left="201" width="326" height="13" font="3">Consider the normal AR(1) time series defined by</text>
<text top="755" left="400" width="12" height="13" font="3">X</text>
<text top="760" left="413" width="23" height="9" font="5">n+1</text>
<text top="755" left="440" width="36" height="13" font="3">= ρX</text>
<text top="760" left="476" width="7" height="9" font="5">n</text>
<text top="755" left="487" width="21" height="13" font="3">+ </text>
<text top="760" left="508" width="7" height="9" font="5">n</text>
<text top="755" left="697" width="19" height="13" font="3">(1)</text>
<text top="788" left="201" width="79" height="13" font="3">where the </text>
<text top="793" left="280" width="7" height="9" font="5">n</text>
<text top="788" left="295" width="422" height="13" font="3">are i.i.d. N(0,1) and ρ &lt; 1. This Markov chain has invariant</text>
<text top="806" left="201" width="170" height="13" font="3">distribution N 0, 1/(1 − ρ</text>
<text top="804" left="371" width="6" height="9" font="5">2</text>
<text top="806" left="378" width="6" height="13" font="3">)</text>
<text top="804" left="383" width="11" height="16" font="3">.</text>
<text top="824" left="223" width="403" height="13" font="3">In our example, we perfomred calulcations for ρ ∈ {0.5, 0.95}.</text>
<text top="864" left="201" width="26" height="16" font="1">2.1</text>
<text top="864" left="247" width="205" height="16" font="1">Markov Chain Sampler</text>
<text top="893" left="201" width="516" height="13" font="3">The following chunk of code gives general functions needed to sample from</text>
<text top="911" left="201" width="516" height="13" font="3"><a href="xml/1006.5690v1.html#2">(1)</a>. Here we have a function that provides an observation from the chain, an</text>
<text top="929" left="201" width="516" height="13" font="3">observation q steps ahead with a defualt of one step ahead, and p observations</text>
<text top="947" left="201" width="100" height="13" font="3">from the chain.</text>
<text top="981" left="201" width="251" height="12" font="3">&gt; ar1 &lt;- function(m, rho, tau) {</text>
<text top="999" left="201" width="8" height="12" font="3">+</text>
<text top="999" left="248" width="204" height="12" font="3">rho * m + rnorm(1, 0, tau)</text>
<text top="1044" left="455" width="7" height="13" font="3">2</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1188" width="918">
<text top="193" left="201" width="24" height="12" font="3">+ }</text>
<text top="211" left="201" width="321" height="12" font="3">&gt; ar1.q &lt;- function(m, rho, tau, q = 1) {</text>
<text top="229" left="201" width="8" height="12" font="3">+</text>
<text top="229" left="248" width="125" height="12" font="3">for (i in 1:q) {</text>
<text top="247" left="201" width="8" height="12" font="3">+</text>
<text top="247" left="279" width="243" height="12" font="3">m &lt;- rho * m + rnorm(1, 0, tau)</text>
<text top="265" left="201" width="8" height="12" font="3">+</text>
<text top="265" left="248" width="8" height="12" font="3">}</text>
<text top="283" left="201" width="8" height="12" font="3">+</text>
<text top="283" left="248" width="8" height="12" font="3">m</text>
<text top="301" left="201" width="24" height="12" font="3">+ }</text>
<text top="319" left="201" width="368" height="12" font="3">&gt; ar1.gen &lt;- function(mc, p, rho, tau, q = 1) {</text>
<text top="336" left="201" width="8" height="12" font="3">+</text>
<text top="336" left="248" width="133" height="12" font="3">loc &lt;- length(mc)</text>
<text top="354" left="201" width="8" height="12" font="3">+</text>
<text top="354" left="248" width="133" height="12" font="3">junk &lt;- double(p)</text>
<text top="372" left="201" width="8" height="12" font="3">+</text>
<text top="372" left="248" width="172" height="12" font="3">mc &lt;- append(mc, junk)</text>
<text top="390" left="201" width="8" height="12" font="3">+</text>
<text top="390" left="248" width="125" height="12" font="3">for (i in 1:p) {</text>
<text top="408" left="201" width="8" height="12" font="3">+</text>
<text top="408" left="279" width="125" height="12" font="3">j &lt;- i + loc - 1</text>
<text top="426" left="201" width="8" height="12" font="3">+</text>
<text top="426" left="279" width="274" height="12" font="3">mc[(j + 1)] &lt;- ar1(mc[j], rho, tau)</text>
<text top="444" left="201" width="8" height="12" font="3">+</text>
<text top="444" left="248" width="8" height="12" font="3">}</text>
<text top="462" left="201" width="8" height="12" font="3">+</text>
<text top="462" left="248" width="78" height="12" font="3">return(mc)</text>
<text top="480" left="201" width="24" height="12" font="3">+ }</text>
<text top="518" left="201" width="26" height="16" font="1">2.2</text>
<text top="518" left="247" width="185" height="16" font="1">Additional Functions</text>
<text top="548" left="201" width="516" height="13" font="3">The following are additional functions necessary for later calculations. The first</text>
<text top="566" left="201" width="516" height="13" font="3">calculates the estimated first and third quartile while the second calculates the</text>
<text top="584" left="201" width="516" height="13" font="3">associated MCSE via subsampling. Notice this function is similar to the function</text>
<text top="602" left="201" width="138" height="13" font="3">necessary for OLBM.</text>
<text top="636" left="201" width="219" height="12" font="3">&gt; quant &lt;- function(input) {</text>
<text top="654" left="201" width="8" height="12" font="3">+</text>
<text top="654" left="248" width="368" height="12" font="3">quantile(input, prob = c(0.25, 0.75), type = 1)</text>
<text top="672" left="201" width="24" height="12" font="3">+ }</text>
<text top="690" left="201" width="258" height="12" font="3">&gt; subsampling &lt;- function(vals) {</text>
<text top="708" left="201" width="8" height="12" font="3">+</text>
<text top="708" left="248" width="133" height="12" font="3">N &lt;- length(vals)</text>
<text top="726" left="201" width="8" height="12" font="3">+</text>
<text top="726" left="248" width="149" height="12" font="3">b &lt;- floor(sqrt(N))</text>
<text top="744" left="201" width="8" height="12" font="3">+</text>
<text top="744" left="248" width="110" height="12" font="3">a &lt;- N - b + 1</text>
<text top="762" left="201" width="8" height="12" font="3">+</text>
<text top="762" left="248" width="454" height="12" font="3">Ys &lt;- sapply(1:a, function(k) return(quant(vals[k:(k + b -</text>
<text top="779" left="201" width="8" height="12" font="3">+</text>
<text top="779" left="279" width="47" height="12" font="3">1)])))</text>
<text top="797" left="201" width="8" height="12" font="3">+</text>
<text top="797" left="248" width="211" height="12" font="3">muhat &lt;- apply(Ys, 1, mean)</text>
<text top="815" left="201" width="8" height="12" font="3">+</text>
<text top="815" left="248" width="439" height="12" font="3">sigmahatsq &lt;- N * b * apply((Ys - muhat)^2, 1, sum)/(a -</text>
<text top="833" left="201" width="8" height="12" font="3">+</text>
<text top="833" left="279" width="31" height="12" font="3">1)/a</text>
<text top="851" left="201" width="8" height="12" font="3">+</text>
<text top="851" left="248" width="204" height="12" font="3">bmse &lt;- sqrt(sigmahatsq/N)</text>
<text top="869" left="201" width="8" height="12" font="3">+</text>
<text top="869" left="248" width="94" height="12" font="3">return(bmse)</text>
<text top="887" left="201" width="24" height="12" font="3">+ }</text>
<text top="926" left="201" width="26" height="16" font="1">2.3</text>
<text top="926" left="247" width="326" height="16" font="1">Simulation Settings and Calculations</text>
<text top="955" left="201" width="516" height="13" font="3">In this next chunk of code, we first give the simulation settings used throughout</text>
<text top="973" left="201" width="516" height="13" font="3">the paper. We then generate the two Markov chains for ρ ∈ {0.5, 0.95} and</text>
<text top="991" left="201" width="332" height="13" font="3">calculate the corresponding estimates and MCSEs.</text>
<text top="1044" left="455" width="7" height="13" font="3">3</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1188" width="918">
<text top="193" left="201" width="86" height="12" font="3">&gt; n &lt;- 2000</text>
<text top="211" left="201" width="149" height="12" font="3">&gt; iter &lt;- seq(1, n)</text>
<text top="229" left="201" width="298" height="12" font="3">&gt; crit.bm &lt;- qt(0.9, (sqrt(iter) - 1))</text>
<text top="247" left="201" width="329" height="12" font="3">&gt; crit.obm &lt;- qt(0.9, (iter - sqrt(iter)))</text>
<text top="265" left="201" width="125" height="12" font="3">&gt; set.seed(1976)</text>
<text top="283" left="201" width="102" height="12" font="3">&gt; rho1 &lt;- 0.5</text>
<text top="301" left="201" width="110" height="12" font="3">&gt; rho2 &lt;- 0.95</text>
<text top="319" left="201" width="313" height="12" font="3">&gt; chain1 &lt;- ar1.gen(1, (n - 1), rho1, 1)</text>
<text top="336" left="201" width="352" height="12" font="3">&gt; mean1 &lt;- cumsum(chain1)/seq(along = chain1)</text>
<text top="354" left="201" width="595" height="12" font="3">&gt; bm.est1 &lt;- sapply(1:n, function(k) return(mcse(chain1[1:k], meth = &#34;BM&#34;)))</text>
<text top="372" left="201" width="486" height="12" font="3">&gt; obm.est1 &lt;- sapply(1:n, function(k) return(mcse(chain1[1:k],</text>
<text top="390" left="201" width="8" height="12" font="3">+</text>
<text top="390" left="248" width="117" height="12" font="3">meth = &#34;OBM&#34;)))</text>
<text top="408" left="201" width="517" height="12" font="3">&gt; quartile1 &lt;- sapply(1:n, function(k) return(quant(chain1[1:k])))</text>
<text top="426" left="201" width="548" height="12" font="3">&gt; q.mcse1 &lt;- sapply(1:n, function(k) return(subsampling(chain1[1:k])))</text>
<text top="444" left="201" width="313" height="12" font="3">&gt; chain2 &lt;- ar1.gen(1, (n - 1), rho2, 1)</text>
<text top="462" left="201" width="352" height="12" font="3">&gt; mean2 &lt;- cumsum(chain2)/seq(along = chain2)</text>
<text top="480" left="201" width="595" height="12" font="3">&gt; bm.est2 &lt;- sapply(1:n, function(k) return(mcse(chain2[1:k], meth = &#34;BM&#34;)))</text>
<text top="498" left="201" width="486" height="12" font="3">&gt; obm.est2 &lt;- sapply(1:n, function(k) return(mcse(chain2[1:k],</text>
<text top="516" left="201" width="8" height="12" font="3">+</text>
<text top="516" left="248" width="117" height="12" font="3">meth = &#34;OBM&#34;)))</text>
<text top="534" left="201" width="517" height="12" font="3">&gt; quartile2 &lt;- sapply(1:n, function(k) return(quant(chain2[1:k])))</text>
<text top="552" left="201" width="548" height="12" font="3">&gt; q.mcse2 &lt;- sapply(1:n, function(k) return(subsampling(chain2[1:k])))</text>
<text top="590" left="201" width="26" height="16" font="1">2.4</text>
<text top="590" left="247" width="266" height="16" font="1">Initial Examination of Output</text>
<text top="620" left="201" width="516" height="13" font="3">The following chunk of code will create plots for the initial examination of</text>
<text top="638" left="201" width="349" height="13" font="3">output. The plots are also repeated in the document.</text>
<text top="672" left="201" width="94" height="12" font="3">&gt; rho = rho1</text>
<text top="690" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain1</text>
<text top="708" left="201" width="117" height="12" font="3">&gt; mean &lt;- mean1</text>
<text top="726" left="201" width="337" height="12" font="3">&gt; par(mfrow = c(3, 1), mar = c(3, 4, 4, 2))</text>
<text top="744" left="201" width="493" height="12" font="3">&gt; ts.plot(chain, main = &#34;Time-Series vs. Iteration&#34;, xlab = &#34;&#34;,</text>
<text top="762" left="201" width="8" height="12" font="3">+</text>
<text top="762" left="248" width="204" height="12" font="3">ylab = &#34;&#34;, xlim = c(0, n))</text>
<text top="779" left="201" width="290" height="12" font="3">&gt; abline(h = 2 * sqrt(1/(1 - rho^2)))</text>
<text top="797" left="201" width="298" height="12" font="3">&gt; abline(h = -2 * sqrt(1/(1 - rho^2)))</text>
<text top="815" left="201" width="532" height="12" font="3">&gt; acf(chain, main = &#34;Autocorrelation vs. Lag&#34;, ylab = &#34;&#34;, xlab = &#34;&#34;)</text>
<text top="833" left="201" width="517" height="12" font="3">&gt; ts.plot(mean, main = &#34;Running Average vs. Iteration&#34;, xlab = &#34;&#34;,</text>
<text top="851" left="201" width="8" height="12" font="3">+</text>
<text top="851" left="248" width="274" height="12" font="3">ylab = &#34;&#34;, lwd = 2, xlim = c(0, n))</text>
<text top="869" left="201" width="117" height="12" font="3">&gt; abline(h = 0)</text>
<text top="887" left="201" width="337" height="12" font="3">&gt; par(mfrow = c(1, 1), mar = c(5, 4, 4, 2))</text>
<text top="1044" left="455" width="7" height="13" font="3">4</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="6" size="7" family="Helvetica" color="#000000"/>
	<fontspec id="7" size="5" family="Helvetica" color="#000000"/>
	<fontspec id="8" size="5" family="Helvetica" color="#000000"/>
<text top="202" left="360" width="113" height="9" font="6"><b>Time−Series vs. Iteration</b></text>
<text top="308" left="248" width="4" height="7" font="7">0</text>
<text top="308" left="327" width="13" height="7" font="7">500</text>
<text top="308" left="407" width="17" height="7" font="7">1000</text>
<text top="308" left="490" width="17" height="7" font="7">1500</text>
<text top="308" left="573" width="17" height="7" font="7">2000</text>
<text top="293" left="226" width="0" height="7" font="8">−4</text>
<text top="276" left="226" width="0" height="7" font="8">−2</text>
<text top="257" left="226" width="0" height="7" font="8">0</text>
<text top="240" left="226" width="0" height="7" font="8">2</text>
<text top="223" left="226" width="0" height="7" font="8">4</text>
<text top="446" left="248" width="4" height="7" font="7">0</text>
<text top="446" left="298" width="4" height="7" font="7">5</text>
<text top="446" left="346" width="8" height="7" font="7">10</text>
<text top="446" left="397" width="8" height="7" font="7">15</text>
<text top="446" left="447" width="8" height="7" font="7">20</text>
<text top="446" left="497" width="8" height="7" font="7">25</text>
<text top="446" left="547" width="8" height="7" font="7">30</text>
<text top="429" left="226" width="0" height="7" font="8">0.0</text>
<text top="403" left="226" width="0" height="7" font="8">0.4</text>
<text top="377" left="226" width="0" height="7" font="8">0.8</text>
<text top="336" left="363" width="106" height="9" font="6"><b>Autocorrelation vs. Lag</b></text>
<text top="477" left="349" width="135" height="9" font="6"><b>Running Average vs. Iteration</b></text>
<text top="583" left="248" width="4" height="7" font="7">0</text>
<text top="583" left="327" width="13" height="7" font="7">500</text>
<text top="583" left="407" width="17" height="7" font="7">1000</text>
<text top="583" left="490" width="17" height="7" font="7">1500</text>
<text top="583" left="573" width="17" height="7" font="7">2000</text>
<text top="573" left="226" width="0" height="7" font="8">−0.5</text>
<text top="550" left="226" width="0" height="7" font="8">0.0</text>
<text top="530" left="226" width="0" height="7" font="8">0.5</text>
<text top="510" left="226" width="0" height="7" font="8">1.0</text>
<text top="623" left="201" width="94" height="12" font="3">&gt; rho = rho2</text>
<text top="641" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain2</text>
<text top="659" left="201" width="117" height="12" font="3">&gt; mean &lt;- mean2</text>
<text top="677" left="201" width="337" height="12" font="3">&gt; par(mfrow = c(3, 1), mar = c(3, 4, 4, 2))</text>
<text top="695" left="201" width="493" height="12" font="3">&gt; ts.plot(chain, main = &#34;Time-Series vs. Iteration&#34;, xlab = &#34;&#34;,</text>
<text top="713" left="201" width="8" height="12" font="3">+</text>
<text top="713" left="248" width="204" height="12" font="3">ylab = &#34;&#34;, xlim = c(0, n))</text>
<text top="731" left="201" width="290" height="12" font="3">&gt; abline(h = 2 * sqrt(1/(1 - rho^2)))</text>
<text top="749" left="201" width="298" height="12" font="3">&gt; abline(h = -2 * sqrt(1/(1 - rho^2)))</text>
<text top="767" left="201" width="532" height="12" font="3">&gt; acf(chain, main = &#34;Autocorrelation vs. Lag&#34;, ylab = &#34;&#34;, xlab = &#34;&#34;)</text>
<text top="785" left="201" width="517" height="12" font="3">&gt; ts.plot(mean, main = &#34;Running Average vs. Iteration&#34;, xlab = &#34;&#34;,</text>
<text top="803" left="201" width="8" height="12" font="3">+</text>
<text top="803" left="248" width="274" height="12" font="3">ylab = &#34;&#34;, lwd = 2, xlim = c(0, n))</text>
<text top="821" left="201" width="117" height="12" font="3">&gt; abline(h = 0)</text>
<text top="839" left="201" width="337" height="12" font="3">&gt; par(mfrow = c(1, 1), mar = c(5, 4, 4, 2))</text>
<text top="1044" left="455" width="7" height="13" font="3">5</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1188" width="918">
<text top="202" left="360" width="113" height="9" font="6"><b>Time−Series vs. Iteration</b></text>
<text top="308" left="248" width="4" height="7" font="7">0</text>
<text top="308" left="327" width="13" height="7" font="7">500</text>
<text top="308" left="407" width="17" height="7" font="7">1000</text>
<text top="308" left="490" width="17" height="7" font="7">1500</text>
<text top="308" left="573" width="17" height="7" font="7">2000</text>
<text top="290" left="226" width="0" height="7" font="8">−10</text>
<text top="252" left="226" width="0" height="7" font="8">0</text>
<text top="235" left="226" width="0" height="7" font="8">5</text>
<text top="446" left="248" width="4" height="7" font="7">0</text>
<text top="446" left="298" width="4" height="7" font="7">5</text>
<text top="446" left="346" width="8" height="7" font="7">10</text>
<text top="446" left="397" width="8" height="7" font="7">15</text>
<text top="446" left="447" width="8" height="7" font="7">20</text>
<text top="446" left="497" width="8" height="7" font="7">25</text>
<text top="446" left="547" width="8" height="7" font="7">30</text>
<text top="429" left="226" width="0" height="7" font="8">0.0</text>
<text top="403" left="226" width="0" height="7" font="8">0.4</text>
<text top="377" left="226" width="0" height="7" font="8">0.8</text>
<text top="336" left="363" width="106" height="9" font="6"><b>Autocorrelation vs. Lag</b></text>
<text top="477" left="349" width="135" height="9" font="6"><b>Running Average vs. Iteration</b></text>
<text top="583" left="248" width="4" height="7" font="7">0</text>
<text top="583" left="327" width="13" height="7" font="7">500</text>
<text top="583" left="407" width="17" height="7" font="7">1000</text>
<text top="583" left="490" width="17" height="7" font="7">1500</text>
<text top="583" left="573" width="17" height="7" font="7">2000</text>
<text top="559" left="226" width="0" height="7" font="8">0</text>
<text top="547" left="226" width="0" height="7" font="8">1</text>
<text top="534" left="226" width="0" height="7" font="8">2</text>
<text top="522" left="226" width="0" height="7" font="8">3</text>
<text top="510" left="226" width="0" height="7" font="8">4</text>
<text top="497" left="226" width="0" height="7" font="8">5</text>
<text top="629" left="201" width="26" height="16" font="1">2.5</text>
<text top="629" left="247" width="300" height="16" font="1">Running MCSEs for Expectations</text>
<text top="659" left="201" width="516" height="13" font="3">The following chunk of code creates the plot of the running MCSEs and run-</text>
<text top="677" left="201" width="516" height="13" font="3">ning estimates for the expectations with confidence bounds. Again, the plot is</text>
<text top="695" left="201" width="179" height="13" font="3">contained in the document.</text>
<text top="729" left="201" width="94" height="12" font="3">&gt; rho = rho1</text>
<text top="747" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain1</text>
<text top="765" left="201" width="117" height="12" font="3">&gt; mean &lt;- mean1</text>
<text top="782" left="201" width="290" height="12" font="3">&gt; u.obm &lt;- mean + crit.obm * obm.est1</text>
<text top="800" left="201" width="290" height="12" font="3">&gt; l.obm &lt;- mean - crit.obm * obm.est1</text>
<text top="818" left="201" width="266" height="12" font="3">&gt; u.bm &lt;- mean + crit.bm * bm.est1</text>
<text top="836" left="201" width="266" height="12" font="3">&gt; l.bm &lt;- mean - crit.bm * bm.est1</text>
<text top="854" left="201" width="564" height="12" font="3">&gt; ts.plot(mean, main = &#34;Running Average&#34;, xlab = &#34;Iteration&#34;, ylab = &#34;&#34;,</text>
<text top="872" left="201" width="8" height="12" font="3">+</text>
<text top="872" left="248" width="517" height="12" font="3">ylim = c(min(l.obm[10:n]), max(u.obm[10:n])), lwd = 2, xlim = c(0,</text>
<text top="890" left="201" width="8" height="12" font="3">+</text>
<text top="890" left="279" width="24" height="12" font="3">n))</text>
<text top="908" left="201" width="117" height="12" font="3">&gt; abline(h = 0)</text>
<text top="926" left="201" width="399" height="12" font="3">&gt; points(iter, u.obm, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="944" left="201" width="399" height="12" font="3">&gt; points(iter, l.obm, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="1044" left="455" width="7" height="13" font="3">6</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="9" size="11" family="Helvetica" color="#000000"/>
	<fontspec id="10" size="9" family="Helvetica" color="#000000"/>
	<fontspec id="11" size="9" family="Helvetica" color="#000000"/>
<text top="211" left="366" width="110" height="12" font="9"><b>Running Average</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="531" left="241" width="0" height="11" font="11">−1.0</text>
<text top="460" left="241" width="0" height="11" font="11">−0.5</text>
<text top="386" left="241" width="0" height="11" font="11">0.0</text>
<text top="315" left="241" width="0" height="11" font="11">0.5</text>
<text top="244" left="241" width="0" height="11" font="11">1.0</text>
<text top="623" left="201" width="94" height="12" font="3">&gt; rho = rho2</text>
<text top="641" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain2</text>
<text top="659" left="201" width="117" height="12" font="3">&gt; mean &lt;- mean2</text>
<text top="677" left="201" width="290" height="12" font="3">&gt; u.obm &lt;- mean + crit.obm * obm.est2</text>
<text top="695" left="201" width="290" height="12" font="3">&gt; l.obm &lt;- mean - crit.obm * obm.est2</text>
<text top="713" left="201" width="266" height="12" font="3">&gt; u.bm &lt;- mean + crit.bm * bm.est2</text>
<text top="731" left="201" width="266" height="12" font="3">&gt; l.bm &lt;- mean - crit.bm * bm.est2</text>
<text top="749" left="201" width="564" height="12" font="3">&gt; ts.plot(mean, main = &#34;Running Average&#34;, xlab = &#34;Iteration&#34;, ylab = &#34;&#34;,</text>
<text top="767" left="201" width="8" height="12" font="3">+</text>
<text top="767" left="248" width="517" height="12" font="3">ylim = c(min(l.obm[10:n]), max(u.obm[10:n])), lwd = 2, xlim = c(0,</text>
<text top="785" left="201" width="8" height="12" font="3">+</text>
<text top="785" left="279" width="24" height="12" font="3">n))</text>
<text top="803" left="201" width="117" height="12" font="3">&gt; abline(h = 0)</text>
<text top="821" left="201" width="399" height="12" font="3">&gt; points(iter, u.obm, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="839" left="201" width="399" height="12" font="3">&gt; points(iter, l.obm, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="1044" left="455" width="7" height="13" font="3">7</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="366" width="110" height="12" font="9"><b>Running Average</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="511" left="241" width="0" height="11" font="11">−1</text>
<text top="470" left="241" width="0" height="11" font="11">0</text>
<text top="433" left="241" width="0" height="11" font="11">1</text>
<text top="396" left="241" width="0" height="11" font="11">2</text>
<text top="359" left="241" width="0" height="11" font="11">3</text>
<text top="322" left="241" width="0" height="11" font="11">4</text>
<text top="284" left="241" width="0" height="11" font="11">5</text>
<text top="247" left="241" width="0" height="11" font="11">6</text>
<text top="629" left="201" width="26" height="16" font="1">2.6</text>
<text top="629" left="247" width="207" height="16" font="1">Running Quartile Plots</text>
<text top="659" left="201" width="516" height="13" font="3">Here is the code for the running quartile plots with and without confidence</text>
<text top="677" left="201" width="516" height="13" font="3">bounds for ρ ∈ {0.5, 0.95}. There are a total of four chunks of code here, one</text>
<text top="695" left="201" width="86" height="13" font="3">for each plot.</text>
<text top="729" left="201" width="94" height="12" font="3">&gt; rho = rho1</text>
<text top="747" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain1</text>
<text top="765" left="201" width="188" height="12" font="3">&gt; quartiles &lt;- quartile1</text>
<text top="782" left="201" width="454" height="12" font="3">&gt; u.sub &lt;- quartiles + rbind(crit.obm, crit.obm) * q.mcse1</text>
<text top="800" left="201" width="454" height="12" font="3">&gt; l.sub &lt;- quartiles - rbind(crit.obm, crit.obm) * q.mcse1</text>
<text top="818" left="201" width="556" height="12" font="3">&gt; ts.plot(t(quartiles), main = &#34;Running Quartiles&#34;, xlab = &#34;Iteration&#34;,</text>
<text top="836" left="201" width="8" height="12" font="3">+</text>
<text top="836" left="248" width="478" height="12" font="3">ylab = &#34;&#34;, lwd = 2, ylim = c(max(u.sub[, 100:n]), min(l.sub[,</text>
<text top="854" left="201" width="8" height="12" font="3">+</text>
<text top="854" left="279" width="196" height="12" font="3">100:n])), xlim = c(0, n))</text>
<text top="872" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.25, 0, sqrt(1/(1 - rho^2))))</text>
<text top="890" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.75, 0, sqrt(1/(1 - rho^2))))</text>
<text top="1044" left="455" width="7" height="13" font="3">8</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="363" width="116" height="12" font="9"><b>Running Quartiles</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="505" left="241" width="0" height="11" font="11">1.0</text>
<text top="448" left="241" width="0" height="11" font="11">0.5</text>
<text top="392" left="241" width="0" height="11" font="11">0.0</text>
<text top="339" left="241" width="0" height="11" font="11">−0.5</text>
<text top="283" left="241" width="0" height="11" font="11">−1.0</text>
<text top="623" left="201" width="556" height="12" font="3">&gt; ts.plot(t(quartiles), main = &#34;Running Quartiles&#34;, xlab = &#34;Iteration&#34;,</text>
<text top="641" left="201" width="8" height="12" font="3">+</text>
<text top="641" left="248" width="478" height="12" font="3">ylab = &#34;&#34;, lwd = 2, ylim = c(max(u.sub[, 100:n]), min(l.sub[,</text>
<text top="659" left="201" width="8" height="12" font="3">+</text>
<text top="659" left="279" width="196" height="12" font="3">100:n])), xlim = c(0, n))</text>
<text top="677" left="201" width="462" height="12" font="3">&gt; points(iter, t(u.sub[1, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="695" left="201" width="462" height="12" font="3">&gt; points(iter, t(u.sub[2, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="713" left="201" width="462" height="12" font="3">&gt; points(iter, t(l.sub[1, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="731" left="201" width="462" height="12" font="3">&gt; points(iter, t(l.sub[2, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="749" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.25, 0, sqrt(1/(1 - rho^2))))</text>
<text top="767" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.75, 0, sqrt(1/(1 - rho^2))))</text>
<text top="1044" left="455" width="7" height="13" font="3">9</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="363" width="116" height="12" font="9"><b>Running Quartiles</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="505" left="241" width="0" height="11" font="11">1.0</text>
<text top="448" left="241" width="0" height="11" font="11">0.5</text>
<text top="392" left="241" width="0" height="11" font="11">0.0</text>
<text top="339" left="241" width="0" height="11" font="11">−0.5</text>
<text top="283" left="241" width="0" height="11" font="11">−1.0</text>
<text top="623" left="201" width="94" height="12" font="3">&gt; rho = rho2</text>
<text top="641" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain2</text>
<text top="659" left="201" width="188" height="12" font="3">&gt; quartiles &lt;- quartile2</text>
<text top="677" left="201" width="454" height="12" font="3">&gt; u.sub &lt;- quartiles + rbind(crit.obm, crit.obm) * q.mcse2</text>
<text top="695" left="201" width="454" height="12" font="3">&gt; l.sub &lt;- quartiles - rbind(crit.obm, crit.obm) * q.mcse2</text>
<text top="713" left="201" width="556" height="12" font="3">&gt; ts.plot(t(quartiles), main = &#34;Running Quartiles&#34;, xlab = &#34;Iteration&#34;,</text>
<text top="731" left="201" width="8" height="12" font="3">+</text>
<text top="731" left="248" width="478" height="12" font="3">ylab = &#34;&#34;, lwd = 2, ylim = c(max(u.sub[, 100:n]), min(l.sub[,</text>
<text top="749" left="201" width="8" height="12" font="3">+</text>
<text top="749" left="279" width="196" height="12" font="3">100:n])), xlim = c(0, n))</text>
<text top="767" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.25, 0, sqrt(1/(1 - rho^2))))</text>
<text top="785" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.75, 0, sqrt(1/(1 - rho^2))))</text>
<text top="1044" left="451" width="15" height="13" font="3">10</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="363" width="116" height="12" font="9"><b>Running Quartiles</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="517" left="241" width="0" height="11" font="11">8</text>
<text top="471" left="241" width="0" height="11" font="11">6</text>
<text top="426" left="241" width="0" height="11" font="11">4</text>
<text top="380" left="241" width="0" height="11" font="11">2</text>
<text top="334" left="241" width="0" height="11" font="11">0</text>
<text top="292" left="241" width="0" height="11" font="11">−2</text>
<text top="247" left="241" width="0" height="11" font="11">−4</text>
<text top="623" left="201" width="556" height="12" font="3">&gt; ts.plot(t(quartiles), main = &#34;Running Quartiles&#34;, xlab = &#34;Iteration&#34;,</text>
<text top="641" left="201" width="8" height="12" font="3">+</text>
<text top="641" left="248" width="478" height="12" font="3">ylab = &#34;&#34;, lwd = 2, ylim = c(max(u.sub[, 100:n]), min(l.sub[,</text>
<text top="659" left="201" width="8" height="12" font="3">+</text>
<text top="659" left="279" width="196" height="12" font="3">100:n])), xlim = c(0, n))</text>
<text top="677" left="201" width="462" height="12" font="3">&gt; points(iter, t(u.sub[1, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="695" left="201" width="462" height="12" font="3">&gt; points(iter, t(u.sub[2, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="713" left="201" width="462" height="12" font="3">&gt; points(iter, t(l.sub[1, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="731" left="201" width="462" height="12" font="3">&gt; points(iter, t(l.sub[2, ]), type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="749" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.25, 0, sqrt(1/(1 - rho^2))))</text>
<text top="767" left="201" width="384" height="12" font="3">&gt; abline(h = qnorm(0.75, 0, sqrt(1/(1 - rho^2))))</text>
<text top="1044" left="451" width="15" height="13" font="3">11</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="363" width="116" height="12" font="9"><b>Running Quartiles</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="517" left="241" width="0" height="11" font="11">8</text>
<text top="471" left="241" width="0" height="11" font="11">6</text>
<text top="426" left="241" width="0" height="11" font="11">4</text>
<text top="380" left="241" width="0" height="11" font="11">2</text>
<text top="334" left="241" width="0" height="11" font="11">0</text>
<text top="292" left="241" width="0" height="11" font="11">−2</text>
<text top="247" left="241" width="0" height="11" font="11">−4</text>
<text top="629" left="201" width="26" height="16" font="1">2.7</text>
<text top="629" left="247" width="260" height="16" font="1">Calculations for Expectations</text>
<text top="659" left="201" width="516" height="13" font="3">The following are calculations reported in the paper based on n = 2000 iterations</text>
<text top="677" left="201" width="82" height="13" font="3">in the chain.</text>
<text top="707" left="201" width="164" height="12" font="3">&gt; signif(mean1[n], 6)</text>
<text top="740" left="201" width="110" height="12" font="3">[1] -0.0336436</text>
<text top="772" left="201" width="298" height="12" font="3">&gt; signif(crit.obm[n] * obm.est1[n], 6)</text>
<text top="805" left="201" width="102" height="12" font="3">[1] 0.0556022</text>
<text top="837" left="201" width="164" height="12" font="3">&gt; signif(mean2[n], 6)</text>
<text top="870" left="201" width="102" height="12" font="3">[1] -0.506755</text>
<text top="902" left="201" width="298" height="12" font="3">&gt; signif(crit.obm[n] * obm.est2[n], 6)</text>
<text top="935" left="201" width="94" height="12" font="3">[1] 0.450564</text>
<text top="967" left="201" width="188" height="12" font="3">&gt; signif(obm.est2[n], 6)</text>
<text top="1000" left="201" width="94" height="12" font="3">[1] 0.351458</text>
<text top="1044" left="451" width="15" height="13" font="3">12</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="1188" width="918">
<text top="192" left="223" width="493" height="13" font="3">Here the implementation of fixed width procedures using ρ = 0.95. Here we</text>
<text top="210" left="201" width="516" height="13" font="3">have added 198000 iterations to the chain for a total of 200000 to spead up the</text>
<text top="228" left="201" width="516" height="13" font="3">processing time. If one desired a level of precision smaller than 0.1 it would</text>
<text top="246" left="201" width="416" height="13" font="3">probably be necessary to add additional iterations to the chain.</text>
<text top="280" left="201" width="345" height="12" font="3">&gt; chain2 &lt;- ar1.gen(chain2, 198000, rho2, 1)</text>
<text top="298" left="201" width="133" height="12" font="3">&gt; chain &lt;- chain2</text>
<text top="316" left="201" width="274" height="12" font="3">&gt; half &lt;- crit.obm[n] * obm.est2[n]</text>
<text top="333" left="201" width="63" height="12" font="3">&gt; N &lt;- n</text>
<text top="351" left="201" width="219" height="12" font="3">&gt; while (half + 1/N &gt; 0.1) {</text>
<text top="369" left="201" width="8" height="12" font="3">+</text>
<text top="369" left="248" width="102" height="12" font="3">N &lt;- N + 1000</text>
<text top="387" left="201" width="8" height="12" font="3">+</text>
<text top="387" left="248" width="149" height="12" font="3">b &lt;- floor(sqrt(N))</text>
<text top="405" left="201" width="8" height="12" font="3">+</text>
<text top="405" left="248" width="227" height="12" font="3">t.OBM &lt;- qt(0.9, (N - b + 1))</text>
<text top="423" left="201" width="8" height="12" font="3">+</text>
<text top="423" left="248" width="321" height="12" font="3">est.OBM &lt;- mcse(chain[1:N], meth = &#34;OBM&#34;)</text>
<text top="441" left="201" width="8" height="12" font="3">+</text>
<text top="441" left="248" width="180" height="12" font="3">half &lt;- t.OBM * est.OBM</text>
<text top="459" left="201" width="24" height="12" font="3">+ }</text>
<text top="477" left="201" width="24" height="12" font="3">&gt; N</text>
<text top="510" left="201" width="70" height="12" font="3">[1] 60000</text>
<text top="543" left="201" width="47" height="12" font="3">&gt; half</text>
<text top="576" left="201" width="102" height="12" font="3">[1] 0.0996075</text>
<text top="608" left="201" width="141" height="12" font="3">&gt; mean(chain[1:N])</text>
<text top="641" left="201" width="117" height="12" font="3">[1] -0.04415015</text>
<text top="674" left="201" width="227" height="12" font="3">&gt; signif(mean(chain[1:N]), 6)</text>
<text top="707" left="201" width="110" height="12" font="3">[1] -0.0441502</text>
<text top="746" left="201" width="26" height="16" font="1">2.8</text>
<text top="746" left="247" width="227" height="16" font="1">Calculations for Quartiles</text>
<text top="775" left="201" width="516" height="13" font="3">Here are the same calculations for the quartiles. First the caculations based on</text>
<text top="793" left="201" width="239" height="13" font="3">n = 2000 iterations for the quartiles.</text>
<text top="824" left="201" width="211" height="12" font="3">&gt; signif(quartile1[, n], 6)</text>
<text top="857" left="248" width="24" height="12" font="3">25%</text>
<text top="857" left="326" width="24" height="12" font="3">75%</text>
<text top="875" left="201" width="70" height="12" font="3">-0.816573</text>
<text top="875" left="287" width="63" height="12" font="3">0.777758</text>
<text top="908" left="201" width="305" height="12" font="3">&gt; signif(crit.obm[n] * q.mcse1[, n], 6)</text>
<text top="941" left="248" width="24" height="12" font="3">25%</text>
<text top="941" left="326" width="24" height="12" font="3">75%</text>
<text top="959" left="201" width="149" height="12" font="3">0.0685046 0.0648736</text>
<text top="992" left="201" width="211" height="12" font="3">&gt; signif(quartile2[, n], 6)</text>
<text top="1044" left="451" width="15" height="13" font="3">13</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="1188" width="918">
<text top="193" left="240" width="24" height="12" font="3">25%</text>
<text top="193" left="310" width="24" height="12" font="3">75%</text>
<text top="211" left="201" width="63" height="12" font="3">-2.73625</text>
<text top="211" left="279" width="55" height="12" font="3">1.77970</text>
<text top="244" left="201" width="305" height="12" font="3">&gt; signif(crit.obm[n] * q.mcse2[, n], 6)</text>
<text top="277" left="240" width="24" height="12" font="3">25%</text>
<text top="277" left="310" width="24" height="12" font="3">75%</text>
<text top="295" left="201" width="133" height="12" font="3">0.480563 0.466388</text>
<text top="326" left="223" width="493" height="13" font="3">Then the fixed width calculations for quantiles with ρ = 0.95. First for</text>
<text top="344" left="201" width="516" height="13" font="3">individual CIs, the with a Bonferonni correction. These calculations are not</text>
<text top="362" left="201" width="516" height="13" font="3">included in the paper and are commented out since the computational time is</text>
<text top="380" left="201" width="429" height="13" font="3">approximately an hour. The code is included for future reference.</text>
<text top="414" left="201" width="117" height="12" font="3">chain &lt;- chain2</text>
<text top="432" left="201" width="282" height="12" font="3">half &lt;- max(crit.obm[n]*q.mcse2[,n])</text>
<text top="450" left="201" width="47" height="12" font="3">N &lt;- n</text>
<text top="468" left="201" width="196" height="12" font="3">while(half + 1 / N &gt; .1){</text>
<text top="486" left="216" width="31" height="12" font="3">N &lt;-</text>
<text top="486" left="263" width="63" height="12" font="3">N + 2000</text>
<text top="504" left="216" width="251" height="12" font="3">b &lt;- floor(sqrt(N)) # batch size</text>
<text top="522" left="216" width="219" height="12" font="3">t.sub &lt;- qt(.9, (N - b + 1))</text>
<text top="540" left="216" width="266" height="12" font="3">est.sub &lt;- subsampling(chain[1:N])</text>
<text top="558" left="216" width="204" height="12" font="3">half &lt;- max(t.sub*est.sub)</text>
<text top="576" left="201" width="8" height="12" font="3">}</text>
<text top="594" left="201" width="8" height="12" font="3">N</text>
<text top="611" left="201" width="31" height="12" font="3">half</text>
<text top="629" left="201" width="133" height="12" font="3">quant(chain[1:N])</text>
<text top="647" left="201" width="102" height="12" font="3">t.sub*est.sub</text>
<text top="683" left="201" width="39" height="12" font="3">#####</text>
<text top="701" left="201" width="251" height="12" font="3"># Then for Bonferonni Correction</text>
<text top="719" left="201" width="39" height="12" font="3">#####</text>
<text top="755" left="201" width="313" height="12" font="3">t.sub &lt;- t.sub &lt;- qt(.9875, (N - b + 1))</text>
<text top="773" left="201" width="204" height="12" font="3">half &lt;- max(t.sub*est.sub)</text>
<text top="791" left="201" width="196" height="12" font="3">while(half + 1 / N &gt; .1){</text>
<text top="809" left="216" width="31" height="12" font="3">N &lt;-</text>
<text top="809" left="263" width="63" height="12" font="3">N + 2000</text>
<text top="827" left="216" width="251" height="12" font="3">b &lt;- floor(sqrt(N)) # batch size</text>
<text top="845" left="216" width="243" height="12" font="3">t.sub &lt;- qt(.9875, (N - b + 1))</text>
<text top="863" left="216" width="266" height="12" font="3">est.sub &lt;- subsampling(chain[1:N])</text>
<text top="880" left="216" width="204" height="12" font="3">half &lt;- max(t.sub*est.sub)</text>
<text top="898" left="201" width="8" height="12" font="3">}</text>
<text top="916" left="201" width="8" height="12" font="3">N</text>
<text top="934" left="201" width="31" height="12" font="3">half</text>
<text top="952" left="201" width="133" height="12" font="3">quant(chain[1:N])</text>
<text top="970" left="201" width="102" height="12" font="3">t.sub*est.sub</text>
<text top="1044" left="451" width="15" height="13" font="3">14</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="12" size="5" family="Times" color="#000000"/>
<text top="187" left="201" width="12" height="19" font="2">3</text>
<text top="187" left="237" width="254" height="19" font="2">T-Distribution Example</text>
<text top="224" left="201" width="516" height="13" font="3">Suppose our goal is to estimate the first two moments of a Students t distribution</text>
<text top="242" left="201" width="296" height="13" font="3">with 4 degrees of freedom and having density</text>
<text top="287" left="378" width="49" height="13" font="3">m(x) =</text>
<text top="277" left="433" width="7" height="13" font="3">3</text>
<text top="297" left="433" width="7" height="13" font="3">8</text>
<text top="276" left="444" width="11" height="7" font="3"></text>
<text top="287" left="455" width="22" height="13" font="3">1 +</text>
<text top="277" left="483" width="9" height="13" font="3">x</text>
<text top="274" left="492" width="6" height="9" font="5">2</text>
<text top="297" left="487" width="7" height="13" font="3">4</text>
<text top="276" left="500" width="11" height="7" font="3"></text>
<text top="271" left="511" width="27" height="10" font="5">−5/2</text>
<text top="327" left="201" width="516" height="13" font="3">Obviously, there is nothing about this that requires MCMC since we can easily</text>
<text top="345" left="201" width="109" height="13" font="3">calculate that E</text>
<text top="350" left="310" width="11" height="9" font="5">m</text>
<text top="345" left="321" width="96" height="13" font="3">X = 0 and E</text>
<text top="350" left="417" width="11" height="9" font="5">m</text>
<text top="345" left="429" width="12" height="13" font="3">X</text>
<text top="342" left="442" width="6" height="9" font="5">2</text>
<text top="345" left="456" width="260" height="13" font="3">= 2. Nevertheless, we will use a data</text>
<text top="362" left="201" width="332" height="13" font="3">augmentation algorithm based on the joint density</text>
<text top="400" left="364" width="60" height="13" font="3">π(x, y) =</text>
<text top="390" left="440" width="7" height="13" font="3">4</text>
<text top="399" left="430" width="12" height="14" font="3">√</text>
<text top="412" left="442" width="16" height="13" font="3">2π</text>
<text top="400" left="460" width="7" height="13" font="3">y</text>
<text top="395" left="470" width="5" height="7" font="12">3</text>
<text top="403" left="470" width="5" height="7" font="12">2</text>
<text top="400" left="478" width="7" height="13" font="3">e</text>
<text top="396" left="485" width="15" height="10" font="5">−y</text>
<text top="395" left="500" width="6" height="13" font="3">(</text>
<text top="397" left="506" width="22" height="9" font="5">2+x</text>
<text top="394" left="528" width="5" height="7" font="12">2</text>
<text top="397" left="534" width="12" height="9" font="5">/2</text>
<text top="395" left="546" width="6" height="13" font="3">)</text>
<text top="441" left="201" width="300" height="13" font="3">so that the full conditionals are X|Y ∼ N(0, y</text>
<text top="438" left="501" width="15" height="10" font="5">−1</text>
<text top="441" left="517" width="199" height="13" font="3">) and Y |X ∼ Gamma(5/2, 2 +</text>
<text top="459" left="201" width="9" height="13" font="3">x</text>
<text top="457" left="209" width="6" height="9" font="5">2</text>
<text top="459" left="216" width="500" height="13" font="3">/2). Consider the Gibbs sampler that updates X then Y so that a one-step</text>
<text top="477" left="201" width="148" height="13" font="3">transition looks like (x</text>
<text top="474" left="349" width="3" height="10" font="5">0</text>
<text top="477" left="353" width="14" height="13" font="3">, y</text>
<text top="474" left="367" width="3" height="10" font="5">0</text>
<text top="477" left="372" width="57" height="13" font="3">) → (x, y</text>
<text top="474" left="430" width="3" height="10" font="5">0</text>
<text top="477" left="434" width="68" height="13" font="3">) → (x, y).</text>
<text top="517" left="201" width="26" height="16" font="1">3.1</text>
<text top="517" left="247" width="205" height="16" font="1">Markov Chain Sampler</text>
<text top="546" left="201" width="516" height="13" font="3">The following function samples from p iterations in the Markov chain starting</text>
<text top="564" left="201" width="137" height="13" font="3">from the value (1, 1).</text>
<text top="597" left="201" width="298" height="12" font="3">&gt; t.gen &lt;- function(p, x = 1, y = 1) {</text>
<text top="615" left="201" width="8" height="12" font="3">+</text>
<text top="615" left="248" width="125" height="12" font="3">loc &lt;- length(x)</text>
<text top="633" left="201" width="8" height="12" font="3">+</text>
<text top="633" left="248" width="133" height="12" font="3">junk &lt;- double(p)</text>
<text top="651" left="201" width="8" height="12" font="3">+</text>
<text top="651" left="248" width="157" height="12" font="3">x &lt;- append(x, junk)</text>
<text top="669" left="201" width="8" height="12" font="3">+</text>
<text top="669" left="248" width="157" height="12" font="3">y &lt;- append(y, junk)</text>
<text top="687" left="201" width="8" height="12" font="3">+</text>
<text top="687" left="248" width="125" height="12" font="3">for (i in 1:p) {</text>
<text top="705" left="201" width="8" height="12" font="3">+</text>
<text top="705" left="279" width="125" height="12" font="3">j &lt;- i + loc - 1</text>
<text top="723" left="201" width="8" height="12" font="3">+</text>
<text top="723" left="279" width="305" height="12" font="3">x[(j + 1)] &lt;- rnorm(1, 0, sqrt(1/y[j]))</text>
<text top="741" left="201" width="8" height="12" font="3">+</text>
<text top="741" left="279" width="446" height="12" font="3">y[(j + 1)] &lt;- rgamma(1, 5/2, rate = (2 + x[(j + 1)]^2/2))</text>
<text top="759" left="201" width="8" height="12" font="3">+</text>
<text top="759" left="248" width="8" height="12" font="3">}</text>
<text top="776" left="201" width="8" height="12" font="3">+</text>
<text top="776" left="248" width="149" height="12" font="3">return(cbind(x, y))</text>
<text top="794" left="201" width="24" height="12" font="3">+ }</text>
<text top="833" left="201" width="26" height="16" font="1">3.2</text>
<text top="833" left="247" width="199" height="16" font="1">Calculaitons and Plots</text>
<text top="862" left="201" width="503" height="13" font="3">Using the sampler, we can run the simulation and create the necessary plots.</text>
<text top="892" left="201" width="86" height="12" font="3">&gt; n &lt;- 2000</text>
<text top="910" left="201" width="149" height="12" font="3">&gt; iter &lt;- seq(1, n)</text>
<text top="928" left="201" width="117" height="12" font="3">&gt; set.seed(100)</text>
<text top="946" left="201" width="204" height="12" font="3">&gt; sample &lt;- t.gen((n - 1))</text>
<text top="964" left="201" width="141" height="12" font="3">&gt; x &lt;- sample[, 1]</text>
<text top="982" left="201" width="141" height="12" font="3">&gt; y &lt;- sample[, 2]</text>
<text top="1000" left="201" width="86" height="12" font="3">&gt; RB &lt;- 1/y</text>
<text top="1044" left="451" width="15" height="13" font="3">15</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="1188" width="918">
<text top="193" left="201" width="282" height="12" font="3">&gt; x.mean &lt;- cumsum(x)/seq(along = x)</text>
<text top="211" left="201" width="305" height="12" font="3">&gt; x2.mean &lt;- cumsum(x^2)/seq(along = x)</text>
<text top="229" left="201" width="305" height="12" font="3">&gt; RB.mean &lt;- cumsum(1/y)/seq(along = y)</text>
<text top="262" left="201" width="556" height="12" font="3">&gt; ts.plot(x.mean, main = &#34;First Moment&#34;, xlab = &#34;Iteration&#34;, ylab = &#34;&#34;,</text>
<text top="280" left="201" width="8" height="12" font="3">+</text>
<text top="280" left="248" width="188" height="12" font="3">lwd = 2, xlim = c(0, n))</text>
<text top="298" left="201" width="117" height="12" font="3">&gt; abline(h = 0)</text>
<text top="316" left="201" width="258" height="12" font="3">&gt; abline(h = 0, lwd = 2, lty = 4)</text>
<text top="333" left="201" width="470" height="12" font="3">&gt; legend(&#34;topright&#34;, c(&#34;Std&#34;, &#34;RB&#34;), lty = c(1, 4), lwd = 2)</text>
<text top="386" left="379" width="84" height="12" font="9"><b>First Moment</b></text>
<text top="749" left="400" width="41" height="11" font="10">Iteration</text>
<text top="721" left="266" width="6" height="11" font="10">0</text>
<text top="721" left="335" width="19" height="11" font="10">500</text>
<text top="721" left="408" width="25" height="11" font="10">1000</text>
<text top="721" left="484" width="25" height="11" font="10">1500</text>
<text top="721" left="559" width="25" height="11" font="10">2000</text>
<text top="661" left="241" width="0" height="11" font="11">0.0</text>
<text top="615" left="241" width="0" height="11" font="11">0.2</text>
<text top="568" left="241" width="0" height="11" font="11">0.4</text>
<text top="522" left="241" width="0" height="11" font="11">0.6</text>
<text top="475" left="241" width="0" height="11" font="11">0.8</text>
<text top="429" left="241" width="0" height="11" font="11">1.0</text>
<text top="428" left="562" width="17" height="11" font="10">Std</text>
<text top="442" left="562" width="16" height="11" font="10">RB</text>
<text top="799" left="201" width="486" height="12" font="3">&gt; ts.plot(x2.mean, main = &#34;Second Moment&#34;, xlab = &#34;Iteration&#34;,</text>
<text top="817" left="201" width="8" height="12" font="3">+</text>
<text top="817" left="248" width="274" height="12" font="3">ylab = &#34;&#34;, lwd = 2, xlim = c(0, n))</text>
<text top="834" left="201" width="415" height="12" font="3">&gt; points(iter, RB.mean, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="852" left="201" width="117" height="12" font="3">&gt; abline(h = 2)</text>
<text top="870" left="201" width="493" height="12" font="3">&gt; legend(&#34;bottomright&#34;, c(&#34;Std&#34;, &#34;RB&#34;), lty = c(1, 4), lwd = 2)</text>
<text top="1044" left="451" width="15" height="13" font="3">16</text>
</page>
<page number="17" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="369" width="103" height="12" font="9"><b>Second Moment</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="492" left="241" width="0" height="11" font="11">0.5</text>
<text top="421" left="241" width="0" height="11" font="11">1.0</text>
<text top="351" left="241" width="0" height="11" font="11">1.5</text>
<text top="281" left="241" width="0" height="11" font="11">2.0</text>
<text top="498" left="562" width="17" height="11" font="10">Std</text>
<text top="512" left="562" width="16" height="11" font="10">RB</text>
<text top="629" left="201" width="26" height="16" font="1">3.3</text>
<text top="629" left="247" width="161" height="16" font="1">Interval Estimates</text>
<text top="659" left="201" width="516" height="13" font="3">The following chunk of code will calculate interval estimates using the same data</text>
<text top="677" left="201" width="77" height="13" font="3">from above.</text>
<text top="708" left="201" width="548" height="12" font="3">&gt; obm.x &lt;- sapply(1:n, function(k) return(mcse(x[1:k], meth = &#34;OBM&#34;)))</text>
<text top="726" left="201" width="564" height="12" font="3">&gt; obm.RB &lt;- sapply(1:n, function(k) return(mcse(RB[1:k], meth = &#34;OBM&#34;)))</text>
<text top="744" left="201" width="572" height="12" font="3">&gt; obm.x2 &lt;- sapply(1:n, function(k) return(mcse(x[1:k]^2, meth = &#34;OBM&#34;)))</text>
<text top="772" left="223" width="493" height="13" font="3">Then we can plot the estimates for the first moment using standard methods.</text>
<text top="790" left="201" width="452" height="13" font="3">Notice, there is no uncertainty with the RB estimator in this setting.</text>
<text top="821" left="201" width="282" height="12" font="3">&gt; upper &lt;- x.mean + crit.obm * obm.x</text>
<text top="839" left="201" width="282" height="12" font="3">&gt; lower &lt;- x.mean - crit.obm * obm.x</text>
<text top="857" left="201" width="556" height="12" font="3">&gt; ts.plot(x.mean, main = &#34;First Moment&#34;, xlab = &#34;Iteration&#34;, ylab = &#34;&#34;,</text>
<text top="875" left="201" width="8" height="12" font="3">+</text>
<text top="875" left="248" width="188" height="12" font="3">lwd = 2, xlim = c(0, n))</text>
<text top="893" left="201" width="117" height="12" font="3">&gt; abline(h = 0)</text>
<text top="911" left="201" width="258" height="12" font="3">&gt; abline(h = 0, lwd = 2, lty = 4)</text>
<text top="929" left="201" width="470" height="12" font="3">&gt; legend(&#34;topright&#34;, c(&#34;Std&#34;, &#34;RB&#34;), lty = c(1, 4), lwd = 2)</text>
<text top="947" left="201" width="399" height="12" font="3">&gt; points(iter, upper, type = &#34;l&#34;, lty = 1, lwd = 1)</text>
<text top="965" left="201" width="399" height="12" font="3">&gt; points(iter, lower, type = &#34;l&#34;, lty = 1, lwd = 1)</text>
<text top="1044" left="451" width="15" height="13" font="3">17</text>
</page>
<page number="18" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="379" width="84" height="12" font="9"><b>First Moment</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="486" left="241" width="0" height="11" font="11">0.0</text>
<text top="439" left="241" width="0" height="11" font="11">0.2</text>
<text top="393" left="241" width="0" height="11" font="11">0.4</text>
<text top="347" left="241" width="0" height="11" font="11">0.6</text>
<text top="300" left="241" width="0" height="11" font="11">0.8</text>
<text top="254" left="241" width="0" height="11" font="11">1.0</text>
<text top="253" left="562" width="17" height="11" font="10">Std</text>
<text top="267" left="562" width="16" height="11" font="10">RB</text>
<text top="607" left="223" width="463" height="13" font="3">Now the plot for second moment for both the usual and RB estimator.</text>
<text top="638" left="201" width="298" height="12" font="3">&gt; upper &lt;- RB.mean + crit.obm * obm.RB</text>
<text top="656" left="201" width="298" height="12" font="3">&gt; lower &lt;- RB.mean - crit.obm * obm.RB</text>
<text top="674" left="201" width="321" height="12" font="3">&gt; upper.x2 &lt;- x2.mean + crit.obm * obm.x2</text>
<text top="692" left="201" width="321" height="12" font="3">&gt; lower.x2 &lt;- x2.mean - crit.obm * obm.x2</text>
<text top="710" left="201" width="486" height="12" font="3">&gt; ts.plot(x2.mean, main = &#34;Second Moment&#34;, xlab = &#34;Iteration&#34;,</text>
<text top="728" left="201" width="8" height="12" font="3">+</text>
<text top="728" left="248" width="509" height="12" font="3">ylab = &#34;&#34;, lwd = 2, xlim = c(0, n), ylim = c(min(lower.x2[10:n]),</text>
<text top="746" left="201" width="8" height="12" font="3">+</text>
<text top="746" left="279" width="164" height="12" font="3">max(upper.x2[10:n])))</text>
<text top="764" left="201" width="415" height="12" font="3">&gt; points(iter, RB.mean, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="782" left="201" width="117" height="12" font="3">&gt; abline(h = 2)</text>
<text top="800" left="201" width="493" height="12" font="3">&gt; legend(&#34;bottomright&#34;, c(&#34;Std&#34;, &#34;RB&#34;), lty = c(1, 4), lwd = 2)</text>
<text top="818" left="201" width="399" height="12" font="3">&gt; points(iter, upper, type = &#34;l&#34;, lty = 4, lwd = 1)</text>
<text top="836" left="201" width="399" height="12" font="3">&gt; points(iter, lower, type = &#34;l&#34;, lty = 4, lwd = 1)</text>
<text top="854" left="201" width="423" height="12" font="3">&gt; points(iter, upper.x2, type = &#34;l&#34;, lty = 1, lwd = 1)</text>
<text top="871" left="201" width="423" height="12" font="3">&gt; points(iter, lower.x2, type = &#34;l&#34;, lty = 1, lwd = 1)</text>
<text top="1044" left="451" width="15" height="13" font="3">18</text>
</page>
<page number="19" position="absolute" top="0" left="0" height="1188" width="918">
<text top="211" left="369" width="103" height="12" font="9"><b>Second Moment</b></text>
<text top="574" left="400" width="41" height="11" font="10">Iteration</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="335" width="19" height="11" font="10">500</text>
<text top="546" left="408" width="25" height="11" font="10">1000</text>
<text top="546" left="484" width="25" height="11" font="10">1500</text>
<text top="546" left="559" width="25" height="11" font="10">2000</text>
<text top="491" left="241" width="0" height="11" font="11">0.5</text>
<text top="435" left="241" width="0" height="11" font="11">1.0</text>
<text top="378" left="241" width="0" height="11" font="11">1.5</text>
<text top="322" left="241" width="0" height="11" font="11">2.0</text>
<text top="265" left="241" width="0" height="11" font="11">2.5</text>
<text top="498" left="562" width="17" height="11" font="10">Std</text>
<text top="512" left="562" width="16" height="11" font="10">RB</text>
<text top="634" left="201" width="12" height="19" font="2">4</text>
<text top="634" left="237" width="328" height="19" font="2">Estimating Marginals Example</text>
<text top="671" left="201" width="66" height="13" font="3">Suppose Y</text>
<text top="677" left="267" width="4" height="9" font="5">i</text>
<text top="670" left="272" width="444" height="14" font="3">|µ, θ ∼ N(µ, θ) independently for i = 1, . . . , m where m ≥ 3 and prior</text>
<text top="689" left="201" width="70" height="13" font="3">ν(µ, θ) ∝ θ</text>
<text top="686" left="271" width="27" height="10" font="5">−1/2</text>
<text top="689" left="299" width="235" height="13" font="3">. The target is the posterior density</text>
<text top="724" left="339" width="83" height="13" font="3">π(µ, θ|y) ∝ θ</text>
<text top="721" left="422" width="56" height="10" font="5">−(m+1)/2</text>
<text top="724" left="479" width="7" height="13" font="3">e</text>
<text top="721" left="486" width="9" height="10" font="5">−</text>
<text top="719" left="498" width="9" height="7" font="12">m</text>
<text top="727" left="497" width="10" height="7" font="12">2θ</text>
<text top="721" left="509" width="10" height="9" font="5">(s</text>
<text top="719" left="520" width="5" height="7" font="12">2</text>
<text top="721" left="525" width="21" height="9" font="5">+(¯</text>
<text top="721" left="539" width="28" height="9" font="5">y−µ)</text>
<text top="719" left="567" width="5" height="7" font="12">2</text>
<text top="721" left="573" width="5" height="9" font="5">)</text>
<text top="757" left="201" width="52" height="13" font="3">where s</text>
<text top="754" left="252" width="6" height="9" font="5">2</text>
<text top="757" left="265" width="451" height="13" font="3">is the usual biased sample variance. It is easy to see that µ|θ, y ∼</text>
<text top="775" left="201" width="26" height="13" font="3">N(¯</text>
<text top="775" left="218" width="284" height="13" font="3">y, θ/m) and that θ|µ, y ∼ IG((m − 1)/2, m[s</text>
<text top="772" left="502" width="6" height="9" font="5">2</text>
<text top="775" left="511" width="28" height="13" font="3">+ (¯</text>
<text top="775" left="530" width="38" height="13" font="3">y − µ)</text>
<text top="772" left="568" width="6" height="9" font="5">2</text>
<text top="775" left="575" width="141" height="13" font="3">]/2). We will conisder</text>
<text top="792" left="201" width="516" height="13" font="3">the Gibbs sampler that updates µ then θ so that a one-step transition is given</text>
<text top="810" left="201" width="36" height="13" font="3">by (µ</text>
<text top="808" left="237" width="3" height="10" font="5">0</text>
<text top="810" left="241" width="14" height="13" font="3">, θ</text>
<text top="808" left="255" width="3" height="10" font="5">0</text>
<text top="810" left="259" width="60" height="13" font="3">) → (µ, θ</text>
<text top="808" left="320" width="3" height="10" font="5">0</text>
<text top="810" left="324" width="392" height="13" font="3">) → (µ, θ). We will use this Gibbs sampler to estimate the</text>
<text top="828" left="201" width="195" height="13" font="3">marginal densities of µ and θ.</text>
<text top="868" left="201" width="26" height="16" font="1">4.1</text>
<text top="868" left="247" width="205" height="16" font="1">Markov Chain Sampler</text>
<text top="898" left="201" width="516" height="13" font="3">The first function provides an observation one step ahead using the Gibbs sam-</text>
<text top="916" left="201" width="490" height="13" font="3">pler. The second function results in p observations from the Markov chain.</text>
<text top="946" left="201" width="454" height="12" font="3">&gt; ex2.gibbs &lt;- function(m, t, y.bar = 1, s2 = 4, n = 11) {</text>
<text top="964" left="201" width="8" height="12" font="3">+</text>
<text top="964" left="248" width="141" height="12" font="3">alpha &lt;- (n - 1)/2</text>
<text top="982" left="201" width="8" height="12" font="3">+</text>
<text top="982" left="248" width="266" height="12" font="3">beta &lt;- n * (s2 + (y.bar - m)^2)/2</text>
<text top="1000" left="201" width="8" height="12" font="3">+</text>
<text top="1000" left="248" width="211" height="12" font="3">t &lt;- rgamma(1, alpha, beta)</text>
<text top="1044" left="451" width="15" height="13" font="3">19</text>
</page>
<page number="20" position="absolute" top="0" left="0" height="1188" width="918">
<text top="193" left="201" width="8" height="12" font="3">+</text>
<text top="193" left="248" width="63" height="12" font="3">t &lt;- 1/t</text>
<text top="211" left="201" width="8" height="12" font="3">+</text>
<text top="211" left="248" width="243" height="12" font="3">m &lt;- rnorm(1, y.bar, sqrt(t/n))</text>
<text top="229" left="201" width="8" height="12" font="3">+</text>
<text top="229" left="248" width="86" height="12" font="3">cbind(m, t)</text>
<text top="247" left="201" width="24" height="12" font="3">+ }</text>
<text top="265" left="201" width="548" height="12" font="3">&gt; ex2.gen &lt;- function(mc, p = 100, q = 1, y.bar = 1, s2 = 4, n = 11) {</text>
<text top="283" left="201" width="8" height="12" font="3">+</text>
<text top="283" left="248" width="219" height="12" font="3">if (is.matrix(mc) == TRUE) {</text>
<text top="301" left="201" width="8" height="12" font="3">+</text>
<text top="301" left="279" width="133" height="12" font="3">loc &lt;- dim(mc)[1]</text>
<text top="319" left="201" width="8" height="12" font="3">+</text>
<text top="319" left="248" width="8" height="12" font="3">}</text>
<text top="336" left="201" width="8" height="12" font="3">+</text>
<text top="336" left="248" width="47" height="12" font="3">else {</text>
<text top="354" left="201" width="8" height="12" font="3">+</text>
<text top="354" left="279" width="63" height="12" font="3">loc &lt;- 1</text>
<text top="372" left="201" width="8" height="12" font="3">+</text>
<text top="372" left="279" width="172" height="12" font="3">mc &lt;- t(as.matrix(mc))</text>
<text top="390" left="201" width="8" height="12" font="3">+</text>
<text top="390" left="248" width="8" height="12" font="3">}</text>
<text top="408" left="201" width="8" height="12" font="3">+</text>
<text top="408" left="248" width="313" height="12" font="3">junk &lt;- matrix(rep(NA, p * 2), ncol = 2)</text>
<text top="426" left="201" width="8" height="12" font="3">+</text>
<text top="426" left="248" width="164" height="12" font="3">mc &lt;- rbind(mc, junk)</text>
<text top="444" left="201" width="8" height="12" font="3">+</text>
<text top="444" left="248" width="125" height="12" font="3">for (i in 1:p) {</text>
<text top="462" left="201" width="8" height="12" font="3">+</text>
<text top="462" left="279" width="125" height="12" font="3">j &lt;- i + loc - 1</text>
<text top="480" left="201" width="8" height="12" font="3">+</text>
<text top="480" left="279" width="360" height="12" font="3">mc[(j + 1), ] &lt;- ex2.gibbs(mc[j, 1], mc[j, 2])</text>
<text top="498" left="201" width="8" height="12" font="3">+</text>
<text top="498" left="248" width="8" height="12" font="3">}</text>
<text top="516" left="201" width="8" height="12" font="3">+</text>
<text top="516" left="248" width="78" height="12" font="3">return(mc)</text>
<text top="534" left="201" width="24" height="12" font="3">+ }</text>
<text top="572" left="201" width="26" height="16" font="1">4.2</text>
<text top="572" left="247" width="225" height="16" font="1">Calculations and Settings</text>
<text top="602" left="201" width="156" height="13" font="3">Now suppose m = 11, ¯</text>
<text top="602" left="349" width="77" height="13" font="3">y = 1 and s</text>
<text top="600" left="425" width="6" height="9" font="5">2</text>
<text top="602" left="436" width="280" height="13" font="3">= 4. We simulated 2000 realizations of the</text>
<text top="620" left="201" width="205" height="13" font="3">Gibbs sampler starting from (µ</text>
<text top="625" left="406" width="6" height="9" font="5">1</text>
<text top="620" left="413" width="15" height="13" font="3">, λ</text>
<text top="625" left="428" width="6" height="9" font="5">1</text>
<text top="620" left="435" width="282" height="13" font="3">) = (1, 1). The marginal density plots were</text>
<text top="638" left="201" width="516" height="14" font="3">created using the default settings for the density function in R. The bivariate</text>
<text top="656" left="201" width="516" height="14" font="3">density plot was created using R functions kde2d and persp. The resulting</text>
<text top="674" left="201" width="516" height="13" font="3">posterior is simple, so it is no surprise that the Gibbs sampler has been shown</text>
<text top="692" left="201" width="402" height="13" font="3">to converge in just a few iterations <a href="xml/1006.5690v1.html#24">(Jones and Hobert, 2001)</a>.</text>
<text top="726" left="201" width="86" height="12" font="3">&gt; n &lt;- 2000</text>
<text top="744" left="201" width="117" height="12" font="3">&gt; set.seed(100)</text>
<text top="762" left="201" width="141" height="12" font="3">&gt; start &lt;- c(1, 1)</text>
<text top="779" left="201" width="274" height="12" font="3">&gt; sample &lt;- ex2.gen(start, (n - 1))</text>
<text top="797" left="201" width="149" height="12" font="3">&gt; mu &lt;- sample[, 1]</text>
<text top="815" left="201" width="172" height="12" font="3">&gt; theta &lt;- sample[, 2]</text>
<text top="847" left="223" width="493" height="13" font="3">Now we can plot the marginal densities and corresponding histograms for µ</text>
<text top="865" left="201" width="41" height="13" font="3">and θ.</text>
<text top="896" left="201" width="329" height="12" font="3">&gt; hist(mu, main = &#34;&#34;, xlab = &#34;&#34;, freq = F)</text>
<text top="914" left="201" width="164" height="12" font="3">&gt; junk &lt;- density(mu)</text>
<text top="932" left="201" width="282" height="12" font="3">&gt; points(junk$x, junk$y, type = &#34;l&#34;)</text>
<text top="1044" left="451" width="15" height="13" font="3">20</text>
</page>
<page number="21" position="absolute" top="0" left="0" height="1188" width="918">
<text top="397" left="213" width="0" height="11" font="11">Density</text>
<text top="546" left="263" width="13" height="11" font="10">−3</text>
<text top="546" left="306" width="13" height="11" font="10">−2</text>
<text top="546" left="349" width="13" height="11" font="10">−1</text>
<text top="546" left="396" width="6" height="11" font="10">0</text>
<text top="546" left="439" width="6" height="11" font="10">1</text>
<text top="546" left="482" width="6" height="11" font="10">2</text>
<text top="546" left="526" width="6" height="11" font="10">3</text>
<text top="546" left="569" width="6" height="11" font="10">4</text>
<text top="519" left="241" width="0" height="11" font="11">0.0</text>
<text top="469" left="241" width="0" height="11" font="11">0.1</text>
<text top="420" left="241" width="0" height="11" font="11">0.2</text>
<text top="371" left="241" width="0" height="11" font="11">0.3</text>
<text top="321" left="241" width="0" height="11" font="11">0.4</text>
<text top="272" left="241" width="0" height="11" font="11">0.5</text>
<text top="623" left="201" width="501" height="12" font="3">&gt; hist(theta, main = &#34;&#34;, xlab = &#34;&#34;, freq = F, ylim = c(0, 0.18))</text>
<text top="641" left="201" width="188" height="12" font="3">&gt; junk &lt;- density(theta)</text>
<text top="659" left="201" width="282" height="12" font="3">&gt; points(junk$x, junk$y, type = &#34;l&#34;)</text>
<text top="1044" left="451" width="15" height="13" font="3">21</text>
</page>
<page number="22" position="absolute" top="0" left="0" height="1188" width="918">
<text top="397" left="213" width="0" height="11" font="11">Density</text>
<text top="546" left="266" width="6" height="11" font="10">0</text>
<text top="546" left="311" width="6" height="11" font="10">5</text>
<text top="546" left="352" width="13" height="11" font="10">10</text>
<text top="546" left="396" width="13" height="11" font="10">15</text>
<text top="546" left="441" width="13" height="11" font="10">20</text>
<text top="546" left="486" width="13" height="11" font="10">25</text>
<text top="546" left="530" width="13" height="11" font="10">30</text>
<text top="546" left="575" width="13" height="11" font="10">35</text>
<text top="522" left="241" width="0" height="11" font="11">0.00</text>
<text top="448" left="241" width="0" height="11" font="11">0.05</text>
<text top="375" left="241" width="0" height="11" font="11">0.10</text>
<text top="301" left="241" width="0" height="11" font="11">0.15</text>
<text top="607" left="223" width="283" height="13" font="3">Now we can plot the bivariate density plot.</text>
<text top="638" left="201" width="117" height="12" font="3">&gt; library(MASS)</text>
<text top="656" left="201" width="486" height="12" font="3">&gt; junk &lt;- kde2d(mu, theta, n = 50, lims = c(-1.5, 3.5, 1, 15))</text>
<text top="674" left="201" width="509" height="12" font="3">&gt; persp(junk, theta = 120, phi = 30, xlab = &#34;mu&#34;, ylab = &#34;theta&#34;,</text>
<text top="692" left="201" width="8" height="12" font="3">+</text>
<text top="692" left="248" width="188" height="12" font="3">zlab = &#34;&#34;, expand = 0.6)</text>
<text top="1044" left="451" width="15" height="13" font="3">22</text>
</page>
<page number="23" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="13" size="9" family="Helvetica" color="#000000"/>
	<fontspec id="14" size="9" family="Helvetica" color="#000000"/>
<text top="448" left="537" width="4" height="11" font="13">m</text>
<text top="439" left="541" width="3" height="11" font="13">u</text>
<text top="484" left="383" width="23" height="11" font="14">theta</text>
<text top="629" left="201" width="26" height="16" font="1">4.3</text>
<text top="629" left="247" width="262" height="16" font="1">Alternative Curve Estimation</text>
<text top="659" left="201" width="516" height="13" font="3">A clever technique for estimating a marginal is based on the same idea as RB</text>
<text top="677" left="201" width="516" height="13" font="3">estimators <a href="xml/1006.5690v1.html#24">(Wei and Tanner, 1990)</a>. The following chunk of code implements</text>
<text top="695" left="201" width="329" height="13" font="3">this for the current example for the marginal of µ.</text>
<text top="726" left="201" width="329" height="12" font="3">&gt; hist(mu, main = &#34;&#34;, xlab = &#34;&#34;, freq = F)</text>
<text top="744" left="201" width="164" height="12" font="3">&gt; junk &lt;- density(mu)</text>
<text top="762" left="201" width="282" height="12" font="3">&gt; points(junk$x, junk$y, type = &#34;l&#34;)</text>
<text top="779" left="201" width="211" height="12" font="3">&gt; evals &lt;- seq(-3, 4, 0.01)</text>
<text top="797" left="201" width="415" height="12" font="3">&gt; norm.evals &lt;- dnorm(evals, 1, sqrt(mean(theta)/11))</text>
<text top="815" left="201" width="446" height="12" font="3">&gt; points(evals, norm.evals, type = &#34;l&#34;, lty = 4, lwd = 2)</text>
<text top="1044" left="451" width="15" height="13" font="3">23</text>
</page>
<page number="24" position="absolute" top="0" left="0" height="1188" width="918">
<text top="397" left="213" width="0" height="11" font="11">Density</text>
<text top="546" left="263" width="13" height="11" font="10">−3</text>
<text top="546" left="306" width="13" height="11" font="10">−2</text>
<text top="546" left="349" width="13" height="11" font="10">−1</text>
<text top="546" left="396" width="6" height="11" font="10">0</text>
<text top="546" left="439" width="6" height="11" font="10">1</text>
<text top="546" left="482" width="6" height="11" font="10">2</text>
<text top="546" left="526" width="6" height="11" font="10">3</text>
<text top="546" left="569" width="6" height="11" font="10">4</text>
<text top="519" left="241" width="0" height="11" font="11">0.0</text>
<text top="469" left="241" width="0" height="11" font="11">0.1</text>
<text top="420" left="241" width="0" height="11" font="11">0.2</text>
<text top="371" left="241" width="0" height="11" font="11">0.3</text>
<text top="321" left="241" width="0" height="11" font="11">0.4</text>
<text top="272" left="241" width="0" height="11" font="11">0.5</text>
<text top="634" left="201" width="113" height="19" font="2">References</text>
<text top="671" left="201" width="516" height="13" font="3">Flegal, J. M. and Jones, G. L. (2010). Implementing Markov chain Monte Carlo:</text>
<text top="689" left="216" width="501" height="13" font="3">Estimating with confidence. In Brooks, S., Gelman, A., Jones, G., and Meng,</text>
<text top="707" left="216" width="501" height="13" font="3">X., editors, Handbook of Markov Chain Monte Carlo. Chapman &amp; Hall/CRC</text>
<text top="725" left="216" width="39" height="13" font="3">Press.</text>
<text top="755" left="201" width="516" height="13" font="3">Jones, G. L. and Hobert, J. P. (2001). Honest exploration of intractable proba-</text>
<text top="773" left="216" width="501" height="13" font="3">bility distributions via Markov chain Monte Carlo. Statistical Science, 16:312–</text>
<text top="791" left="216" width="27" height="13" font="3">334.</text>
<text top="821" left="201" width="516" height="13" font="3">Wei, G. C. G. and Tanner, M. A. (1990). A Monte Carlo implementation of the</text>
<text top="839" left="216" width="501" height="13" font="3">EM algorithm and the poor man’s data augmentation algorithms. Journal of</text>
<text top="857" left="216" width="321" height="13" font="3">the American Statistical Association, 85:699–704.</text>
<text top="1044" left="451" width="15" height="13" font="3">24</text>
</page>
<outline>
<item page="1">1 Introduction</item>
<outline>
<item page="1">1.1 Batch Means</item>
</outline>
<item page="2">2 Normal AR(1) Markov Chains</item>
<outline>
<item page="2">2.1 Markov Chain Sampler</item>
<item page="3">2.2 Additional Functions</item>
<item page="3">2.3 Simulation Settings and Calculations</item>
<item page="4">2.4 Initial Examination of Output</item>
<item page="6">2.5 Running MCSEs for Expectations</item>
<item page="8">2.6 Running Quartile Plots</item>
<item page="12">2.7 Calculations for Expectations</item>
<item page="13">2.8 Calculations for Quartiles</item>
</outline>
<item page="15">3 T-Distribution Example</item>
<outline>
<item page="15">3.1 Markov Chain Sampler</item>
<item page="15">3.2 Calculaitons and Plots</item>
<item page="17">3.3 Interval Estimates</item>
</outline>
<item page="19">4 Estimating Marginals Example</item>
<outline>
<item page="19">4.1 Markov Chain Sampler</item>
<item page="20">4.2 Calculations and Settings</item>
<item page="23">4.3 Alternative Curve Estimation</item>
</outline>
</outline>
</pdf2xml>
